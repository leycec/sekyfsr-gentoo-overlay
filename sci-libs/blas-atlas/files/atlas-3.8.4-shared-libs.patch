diff -Nur ATLAS.orig/CONFIG/src/atlconf_misc.c ATLAS/CONFIG/src/atlconf_misc.c
--- ATLAS.orig/CONFIG/src/atlconf_misc.c	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/CONFIG/src/atlconf_misc.c	2012-06-25 18:45:47.000000000 -0400
@@ -793,3 +793,28 @@
    }
    return(new);
 }
+
+char *NewConcatenedString(char *old, char *app)
+/*
+ * RETURNS: string holding : old + app
+ * NOTE: frees old string after copy
+ */
+
+{
+   char *new;
+   if (!old)
+   {
+      new = malloc(sizeof(char)*(strlen(app)+1));
+      assert(new);
+      strcpy(new, app);
+   }
+   else
+   {
+      new = malloc(sizeof(char)*(strlen(old) + strlen(app)+1));
+      assert(new);
+      strcpy(new, old);
+      strcat(new, app);
+      free(old);
+   }
+   return(new);
+}
diff -Nur ATLAS.orig/CONFIG/src/atlconf_misc.c.orig ATLAS/CONFIG/src/atlconf_misc.c.orig
--- ATLAS.orig/CONFIG/src/atlconf_misc.c.orig	1969-12-31 19:00:00.000000000 -0500
+++ ATLAS/CONFIG/src/atlconf_misc.c.orig	2012-06-25 18:27:33.000000000 -0400
@@ -0,0 +1,820 @@
+/*
+ *             Automatically Tuned Linear Algebra Software v3.8.4
+ *                    (C) Copyright 1998 R. Clint Whaley
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *   1. Redistributions of source code must retain the above copyright
+ *      notice, this list of conditions and the following disclaimer.
+ *   2. Redistributions in binary form must reproduce the above copyright
+ *      notice, this list of conditions, and the following disclaimer in the
+ *      documentation and/or other materials provided with the distribution.
+ *   3. The name of the ATLAS group or the names of its contributers may
+ *      not be used to endorse or promote products derived from this
+ *      software without specific written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
+ * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE ATLAS GROUP OR ITS CONTRIBUTORS
+ * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+#include "atlconf.h"
+
+#include <time.h>
+void GetDate(int *month, int *day, int *year, int *hour, int *min)
+{
+   time_t tv;
+   struct tm *tp;
+
+   tv = time(NULL);
+   tp = localtime(&tv);
+   *month = tp->tm_mon + 1;
+   *day = tp->tm_mday;
+   *year = tp->tm_year + 1900;
+   *hour = tp->tm_hour;
+   *min = tp->tm_min;
+}
+
+long GetInt(FILE *fpin, long Default, char *spc, char *expstr)
+/*
+ * Gets a signed integral type from fpin.  If nothing or garbage is entered,
+ * Default is returned.
+ */
+{
+   char str[64];
+   long iin;
+   if (expstr) fprintf(stdout, "%sEnter %s [%d]: ", spc, expstr, Default);
+   if (fgets(str, 64, fpin) == NULL) return(Default);
+   if (sscanf(str, " %ld ", &iin) != 1) return(Default);
+   return(iin);
+}
+
+long GetIntRange(long Default, long Min, long Max, char *spc, char *expstr)
+{
+   long i;
+   int keepOn=0;
+   do
+   {
+      i = GetInt(stdin, Default, spc, expstr);
+      if (i > Max)
+      {
+         keepOn = 1;
+         fprintf(stderr, "\n%d larger than max value of %d.  Try again.\n\n",
+                 i, Max);
+      }
+      else if (i < Min)
+      {
+         keepOn = 1;
+         fprintf(stderr, "\n%d smaller than min value of %d.  Try again.\n\n",
+                 i, Min);
+      }
+      else keepOn = 0;
+   }
+   while (keepOn);
+   return(i);
+}
+
+long GetIntVer(long Default, long Min, long Max, char *spc, char *expstr)
+{
+   long i, j;
+
+   do
+   {
+      i = GetIntRange(Default, Min, Max, spc, expstr);
+      fprintf(stdout, "%s   You entered: %d\n", spc, i);
+      j = GetIntRange(0, 0, 1, spc, "1 to reenter, 0 accepts");
+   }
+   while(j);
+   return(i);
+}
+
+
+void GetString(FILE *fpin, char *Default, char *spc, char *expstr,
+               int len, char *str0)
+/*
+ * Get a string of length len, not including NULL terminator; pads
+ * any extra len with NULLs
+ */
+{
+   char str[512], *sp;
+   int i;
+
+   assert(len+1 <= 512);
+   if (expstr)
+   {
+      if (Default) fprintf(stdout, "%sEnter %s [%s]: ", spc, expstr, Default);
+      else fprintf(stdout, "%sEnter %s:", spc, expstr);
+   }
+   sp = fgets(str, 512, fpin);
+   if ( (sp == NULL) || (str[0] == '\0') || (str[0] == '\n') )
+   {
+      if (Default) strcpy(str0, Default);
+      else str0[0] = '\0';
+      return;
+   }
+   str[len] = '\0';
+   for (i=0; str0[i] = str[i]; i++);
+   if (i) i--;
+   while (Mciswspace(str0[i])) i--;
+   while (++i < len) str0[i] = '\0';
+   str0[i] = '\0';
+}
+
+void GetStrVer(char *def, char *spc, char *expstr, int len, char *str)
+{
+   int i;
+
+   do
+   {
+      GetString(stdin, def, spc, expstr, len, str);
+      fprintf(stdout, "%sYou have entered '%s'\n", spc, str);
+      i = GetIntRange(0, 0, 1, spc, "1 to reenter, 0 to accept");
+   }
+   while(i);
+}
+
+int IsYes(char def, char *spc, char *expstr)
+{
+   char ch, ln[256];
+   fprintf(stdout, "%s%s [%c]: ", spc, expstr, def);
+   if (fgets(ln, 256, stdin) == NULL) ch=def;
+   else if (ln[0] == '\0' || ln[0] == '\n') ch=def;
+   else ch = ln[0];
+   return( ((ch == 'y') || (ch == 'Y')) );
+}
+
+char GetChar(char def, char *spc, char *expstr)
+{
+   char ch, ln[256];
+   fprintf(stdout, "%s%s [%c]: ", spc, expstr, def);
+   if (fgets(ln, 256, stdin) == NULL) ch=def;
+   else if (ln[0] == '\0' || ln[0] == '\n') ch=def;
+   else ch = ln[0];
+   return(ch);
+}
+
+int FileIsThere(char *nam)
+{
+   FILE *fp;
+
+   fp = fopen(nam, "r");
+   if (fp == NULL) return(0);
+   fclose(fp);
+   return(1);
+}
+
+#include <stdarg.h>
+#define ATL_UseStringVarArgs
+void ATL_mprintf(int np, ...)
+/*
+ * Prints same message to np output file streams
+ */
+{
+   va_list argptr;
+   FILE *fp[8];
+   char *form;
+   int i;
+   #ifdef ATL_UseStringVarArgs
+      char ln[1024];
+   #endif
+
+   if (np > 0)
+   {
+      va_start(argptr, np);
+      assert(np <= 8);
+      for (i=0; i < np; i++) fp[i] = va_arg(argptr, FILE *);
+      form = va_arg(argptr, char *);
+      #ifdef ATL_UseStringVarArgs
+         vsprintf(ln, form, argptr);
+         assert(strlen(ln) < 1024);/* sanity test only, will not stop overrun */
+         va_end(argptr);
+         for (i=0; i < np; i++) if (fp[i]) fprintf(fp[i], ln);
+      #else
+         for (i=0; i < np; i++) if (fp[i]) vfprintf(fp[i], form, argptr);
+         va_end(argptr);
+      #endif
+   }
+}
+
+int GetFirstInt(char *ln)
+{
+   int i, iret=0;
+   for (i=0; ln[i]; i++)
+   {
+      if (isdigit(ln[i]))
+      {
+         sscanf(ln+i, "%d", &iret);
+         break;
+      }
+   }
+   return(iret);
+}
+
+long long GetFirstLong(char *ln)
+{
+   int i;
+   long long iret=0;
+   for (i=0; ln[i]; i++)
+   {
+      if (isdigit(ln[i]))
+      {
+         sscanf(ln+i, "%ld", &iret);
+         break;
+      }
+   }
+   return(iret);
+}
+
+double GetFirstDouble(char *ln)
+/*
+ * Gets a double, which begins wt digit or "." (i.e., won't get e10)
+ */
+{
+   int i;
+   double dret=0;
+   for (i=0; ln[i]; i++)
+   {
+      if (isdigit(ln[i]))
+      {
+         if (i > 0 && ln[i-1] == '.') i--;
+         sscanf(ln+i, "%lf", &dret);
+         break;
+      }
+   }
+   return(dret);
+}
+
+int GetLastInt(char *ln)
+{
+   int i, iret=0;
+   for (i=0; ln[i]; i++);
+   if (i > 0) for (i--; i > 0 && !isdigit(ln[i]); i--);
+   if (i > 0 || (i == 0 && isdigit(ln[0])))
+   {
+      while(isdigit(ln[i]) && i > 0) i--;
+      if (!isdigit(ln[i])) i++;
+      sscanf(ln+i, "%d", &iret);
+   }
+   return(iret);
+}
+
+long long GetLastLong(char *ln)
+{
+   int i;
+   long iret=0;
+   for (i=0; ln[i]; i++);
+   if (i > 0) for (i--; i > 0 && !isdigit(ln[i]); i--);
+   if (i > 0 || (i == 0 && isdigit(ln[0])))
+   {
+      while(isdigit(ln[i]) && i > 0) i--;
+      if (!isdigit(ln[i])) i++;
+      sscanf(ln+i, "%ld", &iret);
+   }
+   return(iret);
+}
+
+int fNumLines(char *fnam)
+{
+   FILE *fp;
+   char ln[256];
+   int i;
+
+   fp = fopen(fnam, "r");
+   assert(fp != NULL);
+   for (i=0; fgets(ln, 256, fp); i++);
+   return(i);
+}
+
+char *CmndResults(char *targ, char *cmnd)
+{
+   static char tnam[128];
+   static int FirstTime=1;
+   char ln[512];
+
+   if (FirstTime)
+   {
+      FirstTime = 0;
+      assert(tmpnam(tnam));
+   }
+   if (targ) sprintf(ln, "ssh %s \"%s\" > %s 2>&1 \n", targ, cmnd, tnam);
+   else sprintf(ln, "%s > %s 2>&1\n", cmnd, tnam);
+   if (!system(ln)) return(tnam);
+   else return(NULL);
+}
+
+int CmndOneLine(char *targ, char *cmnd, char *ln)
+/*
+ * executes a system call with contents of cmnd, returns the output in ln;
+ * Returns value returned by system call
+ * if targ is set, we ssh to that machine
+ */
+{
+   int i;
+   FILE *fp;
+   char *tnam;
+
+   ln[0] = '\0';
+   tnam = CmndResults(targ, cmnd);
+   if (tnam)
+   {
+      fp = fopen(tnam, "r");
+      assert(fp);
+      if (!fgets(ln, 2048, fp)) ln[0] = '\0';
+      fclose(fp);
+      return(0);
+   }
+   else ln[0] = '\0';
+   return(1);
+}
+
+int GetIntBeforeWord(char *word, char *ln)
+/*
+ * Finds integer before word in sentence.
+ * RETURNS: integer on success, BADINT on failure
+ */
+{
+   char *sp;
+   sp = strstr(ln, word);
+   if (sp == ln) return(BADINT);
+   sp--;
+   while(isspace(*sp) && sp != ln) sp--;
+   if (sp == ln) return(BADINT);
+   while (isdigit(*sp) && sp != ln) sp--;
+   if (sp == ln) return(BADINT);
+   return(atoi(sp));
+}
+
+int GetScreenHeight()
+/*
+ * Returns the number of vertical lines window has
+ */
+{
+   int i;
+   for (i=160; i; i--) fprintf(stdout, "%03d\n", i);
+   i = GetIntRange(0, 0, 160, "", "number at top left of screen");
+   return(i);
+}
+
+void GetEnter(FILE *fpout)
+{
+   char ln[128];
+   fprintf(fpout, "---------- PRESS ENTER TO CONTINUE ---------- ");
+   fgets(ln, 128, stdin);
+}
+
+int DisplayFile(char *fnam, FILE *fpout, int nlines)
+{
+   FILE *fp;
+   char ln[256];
+   int i, GoOn=1;
+
+   fp = fopen(fnam, "r");
+   if (fp == NULL)
+   {
+      fprintf(stderr, "Unable to open file '%s', continuing without display.\n",
+              fnam);
+      return(-1);
+   }
+   if (nlines)
+   {
+      do
+      {
+         for (i=0; i < nlines; i++)
+         {
+            GoOn = (fgets(ln, 256, fp) != NULL);
+            if (!GoOn) break;
+            fprintf(fpout, "%s", ln);
+         }
+         if (GoOn) GetEnter(stdout);
+         else break;
+      }
+      while(GoOn);
+   }
+   else while (fgets(ln, 256, fp)) fprintf(fpout, "%s", ln);
+   i = ferror(fp);
+   fclose(fp);
+   return(i);
+}
+
+int DisplayFile0(char *fnam, FILE *fpout)
+{
+   FILE *fp;
+   char ln[256];
+   int i;
+
+   fp = fopen(fnam, "r");
+   if (fp == NULL)
+   {
+      fprintf(stderr, "Unable to open file '%s', continuing without display.\n",
+              fnam);
+      return(-1);
+   }
+   while (fgets(ln, 256, fp)) fprintf(fpout, "%s", ln);
+   i = ferror(fp);
+   fclose(fp);
+   return(i);
+}
+
+int FoundInFile(char *fnam, char *str)
+{
+   FILE *fp;
+   int found=0;
+   char ln[256];
+
+   fp = fopen(fnam, "r");
+   assert(fp);
+   while (fgets(ln, 256, fp))
+   {
+      if (strstr(ln, str))
+      {
+         found=1;
+         break;
+      }
+   }
+   fclose(fp);
+   return(found);
+}
+
+char *FindUname(char *targ)
+{
+   static int FirstTime=1;
+   static char unam[64];
+   static char unamT[6];
+   if (FirstTime)
+   {
+      if (FileIsThere("/bin/uname")) strcpy(unam, "/bin/uname");
+      else if (FileIsThere("/usr/bin/uname")) strcpy(unam, "/usr/bin/uname");
+      else strcpy(unam, "uname");
+      strcpy(unamT, "uname");
+      FirstTime = 0;
+   }
+   if (targ && targ[0] != '\0')
+      return(unamT);
+   return(unam);
+}
+
+enum ARCHFAM ProbeArchFam(char *targ)
+/*
+ * Tries to guess broad architectural family using uname
+ */
+{
+   enum ARCHFAM fam=AFOther;
+   char cmnd[256], res[256];
+   char *uname;
+   uname = FindUname(targ);
+   sprintf(cmnd, "%s -m", uname);
+   if ( !CmndOneLine(targ, cmnd, res) )
+   {
+      if (strstr(res, "ppc") || strstr(res, "Power Macintosh") ||
+          strstr(res, "powerpc")) fam = AFPPC;
+      else if (strstr(res, "sparc")) fam = AFSPARC;
+      else if (strstr(res, "alpha")) fam = AFALPHA;
+      else if (strstr(res, "ia64")) fam = AFIA64;
+      else if (strstr(res, "mips")) fam = AFMIPS;
+      else if ( strstr(res, "i686") || strstr(res, "i586") ||
+                strstr(res, "i486") || strstr(res, "i386") ||
+                strstr(res, "x86") || strstr(res, "x86_64") ) fam = AFX86;
+   }
+/*
+ * Try uname -p if uname -m didn't work
+ */
+   if (fam == AFOther)
+   {
+      sprintf(cmnd, "%s -p", uname);
+      if ( !CmndOneLine(targ, cmnd, res) )
+      {
+         if (strstr(res, "ppc") || strstr(res, "Power Macintosh") ||
+             strstr(res, "powerpc")) fam = AFPPC;
+         else if (strstr(res, "sparc")) fam = AFSPARC;
+         else if (strstr(res, "alpha")) fam = AFALPHA;
+         else if (strstr(res, "ia64")) fam = AFIA64;
+         else if ( strstr(res, "i686") || strstr(res, "i586") ||
+                   strstr(res, "i486") || strstr(res, "i386") ||
+                   strstr(res, "x86_64") ) fam = AFX86;
+         else if (strstr(res, "mips")) fam = AFMIPS;
+      }
+   }
+   return(fam);
+}
+
+/*
+ * ===========================================================================
+ * These files handle setting/checking bits in (possibly) multi-word bitfields
+ * ===========================================================================
+ */
+int IsBitSetInField(int *field, int bit)
+/*
+ * RETURNS: 1 if bit bit is 1, else 0
+ */
+{
+   int word;
+/*
+ * Find which word the bit is in (assume 32-bit ints for safety), and what
+ * bit in that word it is
+ */
+   word = bit >> 5;
+   bit -= (word<<5);
+   return(field[word] & (1<<bit));
+}
+
+void SetBitInField(int *field, int bit)
+/*
+ * Sets bit bit in multiword bitfield field
+ */
+{
+   int word;
+   word = bit >> 5;
+   bit -= (word<<5);
+   field[word] |= (1<<bit);
+}
+
+/*
+ * ===================================================================
+ * These files do some string processing for some crude pseudo-parsing
+ * ===================================================================
+ */
+
+void KillUselessSpace(char *str)
+/*
+ * This routine removes all whitespace from beginning & end of str, and
+ * collapses multiple intra-word whitespace to one space
+ * NOTE: killing whitespace means '\n' are transformed to ' ' or '\0'!
+ * NOTE: This implementation ignores ' and ", so will collapse substrings
+ */
+{
+   int i;  /* index to uncopied portion */
+   int j;  /* index to place to copy next character */
+
+   if (str)
+   {
+      for (i=0; str[i] && isspace(str[i]); i++);
+      if (str[i])
+      {
+         j = 0;
+         while (str[i])
+         {
+            while (str[i] && !isspace(str[i]))
+               str[j++] = str[i++];
+            if (str[i])
+            {
+               str[j++] = ' ';
+            }
+            while (isspace(str[i])) i++;
+         }
+         if (isspace(str[j-1]))
+            str[j-1] = '\0';
+         else str[j] = '\0';
+      }
+      else str[0] = '\0';
+   }
+}
+
+char *GetPathWithoutName(char *file)
+/*
+ *RETURNS: string containing path without last file/dir
+ */
+{
+   char *sp;
+   int i, lastslash;
+   char ch;
+   char *NewStringCopy(char *old);
+
+   for (lastslash=i=0; file[i]; i++)
+      if (file[i] == '/')
+         lastslash = i;
+   ch = file[i];
+   file[i] = '\0';
+   sp = NewStringCopy(file);
+   file[i] = ch;
+   return(sp);
+}
+char *NameWithoutPath(char *file)
+/*
+ * Strips off path from file, assuming unix / for path
+ * RETURNS: string containing file w/o path
+ */
+{
+   int i, lastslash;
+   char *cp;
+
+   for (lastslash=i=0; file[i]; i++)
+      if (file[i] == '/')
+         lastslash = i;
+   cp = malloc(sizeof(char)*(i-lastslash+1));
+   assert(cp);
+   strcpy(cp, file+((file[lastslash] == '/') ? lastslash+1 : 0));
+   KillUselessSpace(cp);
+   return(cp);
+}
+
+int GetIntVers(char *str, int *nskip)
+{
+   char ln[64];
+   int i, j;
+
+   *nskip = 0;
+   for (i=0; str[i] && !isdigit(str[i]); i++);  /* skip non-digits */
+   if (str[i])
+   {
+      for (j=0; j < 64 && str[j+i] && isdigit(str[j+i]); j++) ln[j] = str[j+i];
+      ln[j] = '\0';
+      if (j)
+      {
+         *nskip = i+j;
+         return(atoi(ln));
+      }
+   }
+   return(-1);
+}
+
+void GetGccVers(char *gcc, int *comp, int *major, int *minor, int *patch)
+/*
+ * comp: 0: gcc;  1: egcs;  2: pgcc, 3: apple's gcc
+ */
+{
+   char ln[512], ln2[512];
+   int i, j;
+
+   *comp = *major = *minor = *patch = -1;
+   sprintf(ln, "%s --version", gcc);
+   if (CmndOneLine(NULL, ln, ln2) == 0)
+   {
+      if (strstr(ln2, "Apple Computer"))
+         *comp = 3;
+/*
+ *    Skip compiler name, which may have digits in it
+ */
+      for (i=0; ln2[i] && !isspace(ln2[i]); i++);
+      *major = GetIntVers(ln2+i, &j); j += i;
+      if (*major != -1)
+      {
+         *minor = GetIntVers(ln2+j, &i); j += i;
+         if (*minor != -1)
+         {
+            *patch = GetIntVers(ln2+j, &i); j += i;
+            if (strstr(ln2, "egcs")) *comp = 1;
+            else if (strstr(ln2, "pgcc")) *comp = 2;
+            else *comp = 0;
+         }
+      }
+   }
+}
+
+int CompIsGcc(char *comp)
+/*
+ * Tries to detect if compiler is gcc w/o scoping name of compiler
+ */
+{
+   char cmnd[1024], res[1024];
+
+   sprintf(cmnd, "%s --version", comp);
+   if (CmndOneLine(NULL, cmnd, res) == 0)
+   {
+/*
+ *    The direct comps added because Ubuntu stopped printing (GCC) in the
+ *    version line.  Don't want to search for just "gcc", since that will
+ *    match with pgcc
+ */
+      if (strstr(res, "(GCC)") || strstr(res, " GCC ") ||
+          strstr(res, "GNU Fortran") || strstr(res, "(GCC ") ||
+          (res[0] == 'g' && res[1] == 'c' && res[2] == 'c' && res[3] == ' ')
+         )
+         return(1);
+   }
+   return(0);
+}
+int CompIsAppleGcc(char *comp)
+/*
+ * Tries to detect if compiler is Apple's funked-up gcc
+ */
+{
+   char cmnd[1024], res[1024];
+
+   if (CompIsGcc(comp))
+   {
+      res[0] = '\0';
+      sprintf(cmnd, "%s -v 2>&1 | fgrep Apple", comp);
+      CmndOneLine(NULL, cmnd, res);
+      if (strstr(res, "Apple"))
+         return(1);
+   }
+   return(0);
+}
+
+int CompIsMIPSpro(char *comp)
+/*
+ * RETURNS: 1 if compiler is MIPSpro compiler, 0 otherwise
+ */
+{
+   char cmnd[1024], res[1024];
+
+   sprintf(cmnd, "%s -v", comp);
+   if (CmndOneLine(NULL, cmnd, res) == 0)
+   {
+      if (strstr(res, "MIPSpro Compiler"))
+         return(1);
+   }
+   return(0);
+}
+
+int CompIsSunWorkshop(char *comp)
+/*
+ * RETURNS: 1 if compiler is Sun WorkShop compiler, 0 otherwise
+ */
+{
+   char cmnd[1024], res[1024];
+
+   sprintf(cmnd, "%s -V", comp);
+   if (CmndOneLine(NULL, cmnd, res) == 0)
+   {
+      if (strstr(res, "Sun WorkShop"))
+         return(1);
+   }
+   return(0);
+}
+
+int CompIsIBMXL(char *comp)
+/*
+ * RETURNS: 1 if compiler is an IBM XL compiler, 0 otherwise
+ */
+{
+   char cmnd[1024], res[1024];
+
+   sprintf(cmnd, "%s -qversion", comp);
+   if (CmndOneLine(NULL, cmnd, res) == 0)
+   {
+      if (strstr(res, "IBM XL"))
+         return(1);
+   }
+   return(0);
+}
+
+char *NewStringCopy(char *old)
+/*
+ * RETURNS: newly allocates string containing copy of string old
+ */
+{
+   char *new;
+   new = malloc(sizeof(char)*(strlen(old)+1));
+   strcpy(new, old);
+   return(new);
+}
+char *NewAppendedString(char *old, char *app)
+/*
+ * RETURNS: string holding : old + " " + app
+ * NOTE: frees old string after copy
+ */
+
+{
+   char *new;
+   if (!old)
+   {
+      new = malloc(sizeof(char)*(strlen(app)+1));
+      assert(new);
+      strcpy(new, app);
+   }
+   else
+   {
+      new = malloc(sizeof(char)*(strlen(old) + strlen(app)+2));
+      assert(new);
+      strcpy(new, old);
+      strcat(new, " ");
+      strcat(new, app);
+      free(old);
+   }
+   return(new);
+}
+
+char *NewConcatenedString(char *old, char *app)
+/*
+ * RETURNS: string holding : old + app
+ * NOTE: frees old string after copy
+ */
+
+{
+   char *new;
+   if (!old)
+   {
+      new = malloc(sizeof(char)*(strlen(app)+1));
+      assert(new);
+      strcpy(new, app);
+   }
+   else
+   {
+      new = malloc(sizeof(char)*(strlen(old) + strlen(app)+1));
+      assert(new);
+      strcpy(new, old);
+      strcat(new, app);
+      free(old);
+   }
+   return(new);
+}
diff -Nur ATLAS.orig/CONFIG/src/config.c ATLAS/CONFIG/src/config.c
--- ATLAS.orig/CONFIG/src/config.c	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/CONFIG/src/config.c	2012-06-25 18:31:19.000000000 -0400
@@ -284,7 +284,7 @@
             if (verb > 1) fprintf(stderr, "SUCCESS!\n");
             F77LIBdir = NewStringCopy(sp-2);
             F77LIBdir = NewAppendedString(F77LIBdir, "-l");
-            F77LIBdir = NewAppendedString(F77LIBdir, f77lib);
+            F77LIBdir = NewConcatenatedString(F77LIBdir, f77lib);
             if (OSIsWin(OS))
                F77LIBdir = NewAppendedString(F77LIBdir, "-lgcc");
             if (verb)
diff -Nur ATLAS.orig/CONFIG/src/config.c.orig ATLAS/CONFIG/src/config.c.orig
--- ATLAS.orig/CONFIG/src/config.c.orig	1969-12-31 19:00:00.000000000 -0500
+++ ATLAS/CONFIG/src/config.c.orig	2011-05-14 13:33:24.000000000 -0400
@@ -0,0 +1,936 @@
+#include "atlconf.h"
+
+int GetStrProbe(int verb, char *targarg, char *prb, char *id, char *str)
+/*
+ * Performs probe where output is string delimited by '', leaving string
+ * in str.
+ * RETURNS: 0 on success, non-zero on error
+ */
+{
+   char *sp;
+   char ln[2048], ln2[2048];
+   int ierr=0, i;
+
+   ln[0] = ln2[0] = '\0';
+   sprintf(ln, "make IRun_%s args=\"-v %d %s\" | fgrep '%s='",
+           prb, verb, targarg, id);
+   if (verb > 1)
+      printf("cmnd=%s\n", ln);
+   ierr = CmndOneLine(NULL, ln, ln2);
+   if (!ierr)
+   {
+      sprintf(ln, "%s='", id);
+      sp = strstr(ln2, ln);
+      if (sp)
+      {
+         for (sp += strlen(ln); *sp && *sp != '\''; sp++)
+            *str++ = *sp;
+         if (!(*sp)) ierr = -2;
+         *str = '\0';
+      }
+      else ierr = -4;
+   }
+   return(ierr);
+}
+
+int GetIntProbe(int verb, char *targarg, char *prb, char *id, int N)
+{
+   char ln[2048], ln2[2048];
+   int iret=0, ierr;
+
+   ln[0] = ln2[0] = '\0';
+   sprintf(ln, "make IRun_%s args=\"-v %d %s\" | fgrep '%s='",
+           prb, verb, targarg, id);
+   if (verb > 1)
+      printf("cmnd=%s\n", ln);
+   ierr = CmndOneLine(NULL, ln, ln2);
+   if (!ierr)
+      iret = GetLastInt(ln2);
+   if (N)
+   {
+      if (iret > N || iret < 1)
+      {
+         printf("\nBad %s value=%d, ierr=%d, ln2='%s'\n", id, iret, ierr, ln2);
+         iret = 0;
+      }
+   }
+   return(iret);
+}
+
+int GetIntProbeSure(int verb, char *targarg, char *prb, char *id,
+                    int *sure)
+{
+   char ln[2048], ln2[2048];
+   int iret=0, ierr;
+
+   ln[0] = ln2[0] = '\0';
+   sprintf(ln, "make IRun_%s args=\"-v %d %s\" | fgrep '%s='",
+           prb, verb, targarg, id);
+   if (verb > 1)
+      printf("cmnd=%s\n", ln);
+   ierr = CmndOneLine(NULL, ln, ln2);
+   if (!ierr)
+   {
+      iret = GetFirstInt(ln2);
+      *sure = GetLastInt(ln2);
+   }
+   return(iret);
+}
+
+void TransCompsToFlags(char **comps, char *flags)
+{
+   int i, j;
+/*
+ * WARNING: if you change the order of the ICC_, etc, must change
+ *          compnames!
+ */
+   char *compnames[7] = {"ic", "sm", "dm", "sk",  "dk", "xc", "if"};
+
+   *flags = '\0';
+/*
+ * Pass any override compilers/flags and appends to probe
+ */
+   for (j=i=0; i < NCOMP; i++)
+   {
+      if (comps[i])
+         j += sprintf(flags+j, "-C %s '%s' ", compnames[i], comps[i]);
+      if (comps[NCOMP+i])
+         j += sprintf(flags+j, "-F %s '%s' ", compnames[i], comps[NCOMP+i]);
+      if (comps[2*NCOMP+i])
+         j += sprintf(flags+j, "-Fa %s '%s' ", compnames[i], comps[2*NCOMP+i]);
+   }
+}
+
+char *ProbeComp(int verb, char *targarg, enum OSTYPE OS, enum MACHTYPE arch,
+                 char **comps, int nof77, int nocygwin, int ptrbits)
+/*
+ * RETURNS: f2c define string
+ */
+{
+   char ln[4096], flags[2048], comp[512];
+   int f2cname, f2cint, f2cstr;
+   char *f2cdefs;
+   int i, if77=0;
+   FILE *fpin;
+
+   TransCompsToFlags(comps, flags);
+   i = sprintf(ln,
+   "make IRun_comp args=\"-v %d -o atlconf.txt -O %d -A %d -Si nof77 %d %s %s",
+               verb, OS, arch, nof77, targarg, flags);
+   if (ptrbits == 64 || ptrbits == 32)
+      i += sprintf(ln+i, " -b %d", ptrbits);
+   sprintf(ln+i, "\"");
+   if (verb > 1)
+      fprintf(stderr, "cmnd='%s'\n", ln);
+   assert(!system(ln));
+   fpin = fopen("atlconf.txt", "r");
+   assert(fpin);
+   while (fgets(ln, 4096, fpin))
+   {
+      if (ln[0] != '#')
+      {
+         if (isdigit(ln[0]))
+         {
+            assert(sscanf(ln, "%d '%[^']' '%[^']", &i, comp, flags) == 3);
+            assert(i >= 0 && i < NCOMP);
+            comps[i] = NewStringCopy(comp);
+            comps[NCOMP+i] = NewStringCopy(flags);
+         }
+         else
+         {
+            for (i=0; ln[i] && ln[i] != '('; i++);
+            assert(ln[i] = '(');
+            assert(sscanf(ln+i+1, "%d,%d,%d", &f2cname, &f2cint, &f2cstr) == 3);
+            if77 = 1;
+         }
+      }
+   }
+   fclose(fpin);
+/*
+ * For windows only, all non-XCC gnu compilers get -mnocygwin flag if user has
+ * asked for it
+ */
+   if (nocygwin && OSIsWin(OS))
+   {
+      for (i=0; i < NCOMP; i++)
+      {
+         if (i != XCC_)
+         {
+            if (CompIsGcc(comps[i]))
+               comps[i+NCOMP] = NewAppendedString(comps[i+NCOMP],"-mno-cygwin");
+         }
+      }
+   }
+/*
+ * Only f77 and xcc allowed to be NULL
+ */
+   for (i=0; i < NCOMP; i++)
+   {
+      if (comps[i] == NULL)
+      {
+         if (i == XCC_)
+         {
+            comps[XCC_] = NewStringCopy(comps[ICC_]);
+            comps[NCOMP+XCC_] = NewStringCopy(comps[ICC_+NCOMP]);
+         }
+         else assert(i == F77_);
+      }
+      if (comps[i+NCOMP] == NULL)
+      {
+         if (i == XCC_)
+            comps[XCC_+NCOMP] = NewStringCopy(comps[ICC_+NCOMP]);
+         else assert(i == F77_);
+      }
+   }
+/*
+ * Echo compiler info to screen if user has asked for verbose output
+ */
+   if (verb)
+   {
+      fprintf(stdout, "Selected compilers:\n");
+      for (i=0; i < NCOMP; i++)
+      {
+         fprintf(stdout, "%s = '%s' '%s'\n", COMPNAME[i],
+                 comps[i] ? comps[i]:"none",
+                 comps[NCOMP+i]?comps[NCOMP+i]:"none");
+      }
+      if (if77)
+      {
+         fprintf(stdout, "\nF77 calling C interface information:\n");
+         fprintf(stdout, "   Name decoration = %s\n", f2c_namestr[f2cname]);
+         fprintf(stdout, "   Integer style   = %s\n", f2c_intstr[f2cint]);
+         fprintf(stdout, "   String style    = %s\n", f2c_strstr[f2cstr]);
+      }
+      else
+         fprintf(stderr, "F77/C interface not defined!");
+   }
+   if (!if77)
+      f2cdefs = NULL;
+   else
+   {
+      sprintf(ln, "-D%s -D%s -DString%s",
+              f2c_namestr[f2cname], f2c_intstr[f2cint], f2c_strstr[f2cstr]);
+      f2cdefs = malloc(sizeof(char)*(strlen(ln)+1));
+      assert(f2cdefs);
+      strcpy(f2cdefs, ln);
+   }
+   return(f2cdefs);
+}
+
+int PathLength(char *str)
+/*
+ * Given string, finds end unix path, allowing \ to mean sticky space, stops at
+ * first non-sticky pass.  Skips any leading spaces.
+ * RETURNS: index of first non-sticky space
+ * NOTE: Assumes str[-1] valid
+ */
+{
+   int i;
+   for (i=0; isspace(str[i]); i++);  /* skip leading spaces */
+   for (; str[i]; i++)
+      if (str[i] == ' ' && str[i-1] != '\\') break;
+   return(i);
+}
+
+char *ProbeF77LIB(int verb, char *targarg, enum OSTYPE OS,
+                  enum MACHTYPE arch, char **comps, char *f2cdefs, int nof77)
+/*
+ * Tries to find the directory that needs to be included to link in f77
+ * routines
+ */
+{
+   char cmnd[1024], res[2048];
+   char *f77lib, *F77LIBdir, *sp;
+   int i;
+   char ch;
+
+   if (nof77 || !f2cdefs) return(NULL);
+   if  (strstr(comps[F77_], "g77")) f77lib = "g2c";
+   else if (strstr(comps[F77_], "gfortran")) f77lib = "gfortran";
+   else
+   {
+      if (verb > 1)
+         fprintf(stderr, "Unknown F77 compiler, leaving F77LIBS blank!\n");
+      return(NULL);
+   }
+   sprintf(cmnd,  "make IRunFlib F77='%s' F77FLAGS='%s'",
+           comps[F77_], comps[NCOMP+F77_]);
+   if (verb > 1)
+      fprintf(stderr, "LIBDIR cmnd = %s\n", cmnd);
+   CmndOneLine(NULL, cmnd, res);
+   if (verb > 1)
+      fprintf(stderr, "LIBDIR res = %s\n", res);
+/*
+ * Find which -L leads us to f77lib
+ */
+   sp = res;
+   while (sp = strstr(sp, "-L"))
+   {
+      sp += 2;
+      i = PathLength(sp);
+      if (i)
+      {
+         ch = sp[i];
+         sp[i] = '\0';
+         sprintf(cmnd, "make IRunTestCFLink F77='%s' F77FLAGS='%s' CC='%s' CCFLAGS='%s -L%s' F77LIB='%s' LIBS='-lm'",
+                 comps[F77_], comps[NCOMP+F77_],
+                 comps[ICC_], comps[NCOMP+ICC_], sp, f77lib);
+         if (verb > 1)
+            fprintf(stderr, "cmnd = %s\n", cmnd);
+         if (verb > 1)
+            fprintf(stderr, "Trying F77 link path of %s ... ", sp);
+         if (!system(cmnd))
+         {
+            if (verb > 1) fprintf(stderr, "SUCCESS!\n");
+            F77LIBdir = NewStringCopy(sp-2);
+            F77LIBdir = NewAppendedString(F77LIBdir, "-l");
+            F77LIBdir = NewAppendedString(F77LIBdir, f77lib);
+            if (OSIsWin(OS))
+               F77LIBdir = NewAppendedString(F77LIBdir, "-lgcc");
+            if (verb)
+               fprintf(stderr, "F77LIB = %s\n", F77LIBdir);
+            return(F77LIBdir);
+         }
+         if (verb > 1) fprintf(stderr, "REJECTED!!!!\n");
+         sp[i] = ch;
+         sp += i;
+      }
+   }
+   if (verb) fprintf(stderr, "F77LIB left blank");
+   return(NULL);
+}
+
+enum OSTYPE ProbeOS(int verb, char *targarg)
+{
+   enum OSTYPE iret;
+
+   iret = GetIntProbe(verb, targarg, "OS", "OS", NOS);
+   printf("\nOS configured as %s (%d)\n", osnam[iret], iret);
+   assert(iret);
+   return(iret);
+}
+
+enum ASMDIA ProbeAsm(int verb, char *targarg, enum OSTYPE OS)
+{
+   enum ASMDIA asmd=ASM_None;
+   char ln[1024];
+
+   sprintf(ln, "%s -O %d", targarg, OS);
+   asmd = GetIntProbe(verb, ln, "asm", "ASM", NASMD);
+   printf("\nAssembly configured as %s (%d)\n", ASMNAM[asmd], asmd);
+   return(asmd);
+}
+
+int ProbeVecs(int verb, char *targarg, enum OSTYPE OS, enum ASMDIA asmb)
+{
+   int i, iret;
+   char ln[1024];
+
+   sprintf(ln, "%s -O %d -s %d", targarg, OS, asmb);
+   iret = GetIntProbe(verb, ln, "vec", "VECFLAG", (1<<NISA));
+   for (i=0; i < NISA && (iret & (1<<i)) == 0; i++);
+   if (i == NISA)
+      i = 0;
+   printf("\nVector ISA Extension configured as  %s (%d,%d)\n",
+          ISAXNAM[i], i, iret);
+   return(iret);
+}
+
+int ProbeArch(int verb, char *targarg, enum OSTYPE OS, enum ASMDIA asmb)
+{
+   int i, iret;
+   char ln[1024];
+
+   sprintf(ln, "%s -O %d -s %d -a", targarg, OS, asmb);
+   iret = GetIntProbe(verb, ln, "arch", "MACHTYPE", NMACH);
+   printf("\nArchitecture configured as  %s (%d)\n",
+          machnam[iret], iret);
+   return(iret);
+}
+
+int ProbeMhz(int verb, char *targarg, enum OSTYPE OS, enum ASMDIA asmb)
+{
+   int i, iret;
+   char ln[1024];
+
+   sprintf(ln, "%s -O %d -s %d -m", targarg, OS, asmb);
+   iret = GetIntProbe(verb, ln, "arch", "CPU MHZ", 16384);
+   printf("\nClock rate configured as %dMhz\n", iret);
+   return(iret);
+}
+
+int ProbeNcpu(int verb, char *targarg, enum OSTYPE OS, enum ASMDIA asmb)
+{
+   int i, iret;
+   char ln[1024];
+
+   sprintf(ln, "%s -O %d -s %d -n", targarg, OS, asmb);
+   iret = GetIntProbe(verb, ln, "arch", "NCPU", 2048);
+   printf("\nMaximum number of threads configured as  %d\n", iret);
+   return(iret);
+}
+
+int ProbePtrbits(int verb, char *targarg, enum OSTYPE OS, enum ASMDIA asmb)
+{
+   int i, iret;
+   char ln[1024];
+
+   sprintf(ln, "%s -O %d -s %d -b", targarg, OS, asmb);
+   iret = GetIntProbeSure(verb, ln, "arch", "PTR BITS", &i);
+/*
+ * If it's not 64-bit, make sure it's not just because of flag setting
+ */
+   if (iret != 64)
+   {
+   }
+   if (iret != 64)
+      iret = 32;
+   printf("\nPointer width configured as %d\n", iret);
+   return(iret);
+}
+
+int ProbeCPUThrottle(int verb, char *targarg, enum OSTYPE OS, enum ASMDIA asmb)
+{
+   int i, iret;
+   char ln[1024];
+   sprintf(ln, "%s -O %d -s %d -t", targarg, OS, asmb);
+   iret = GetIntProbe(verb, ln, "arch", "CPU THROTTLE", 0);
+   if (iret) printf("CPU Throttling apparently enabled!\n");
+   else printf("Cannot detect CPU throttling.\n");
+   return(iret);
+}
+
+
+void Comps2Flags(char **comps, char *ln)
+/*
+ * Takes the comps array (1st NCOMP entries are compilers, next NCOMP entries
+ * flags for those compilers) and translates them into the corresponding flags
+ * for xspew (or indeed this config.c)
+ * NOTE: assumes appended flags (2*NCOMP+i) already appended to flags (NCOMP+i)
+ */
+{
+   char *cname[NCOMP] = {"ic", "sm", "dm", "sk", "dk", "xc", "if"};
+   int i, j=0;
+   ln[0] = '\0';
+   for (i=0; i < NCOMP; i++)
+   {
+      if (comps[i])
+         j += sprintf(ln+j, "-C %s '%s' ", cname[i], comps[i]);
+      if (comps[NCOMP+i])
+         j += sprintf(ln+j, "-F %s '%s' ", cname[i], comps[NCOMP+i]);
+   }
+}
+
+char *ProbePmake(int verb, enum OSTYPE OS, int ncpu)
+/*
+ * WARNING: if cross-comp really worked, this would be ncpu of front-end,
+ *          not backend!
+ */
+{
+   char args[256], res[1024];
+   char *sp;
+
+   sprintf(args, "-O %d -t %d", OS, ncpu);
+   if (!GetStrProbe(verb, args, "pmake", "PMAKE", res))
+   {
+      sp = malloc((strlen(res)+1)*sizeof(char));
+      strcpy(sp, res);
+   }
+   else sp = NULL;
+   if (sp) printf("Parallel make command configured as '%s'\n", sp);
+   else printf("Parallel make not configured.\n");
+   return(sp);
+}
+
+void SpewItForth(int verb, enum OSTYPE OS, enum MACHTYPE arch, int mhz,
+                 enum ASMDIA asmb, int vecexts, int ptrbits, int ncpu,
+                 int l2size, char *srcdir, char *bindir, int bozol1,
+                 int archdef, int nof77, char **comps, char *gccflags,
+                 char *f2cdefs, char *cdefs, char *pmake, char *flapack,
+                 char *smaflags, char *dmaflags, char *f77libs)
+/*
+ * Calls xspew with correct arguments to build required Make.inc
+ */
+{
+   char ln[4096], compsflags[1024], archflags[1024];
+   int i;
+   assert(CmndResults(NULL, "make xspew"));
+/*
+ * Translate compiler/flag array to xspew flags
+ */
+   Comps2Flags(comps, compsflags);
+   i = sprintf(ln, "./xspew -v %d -O %d -A %d -m %d -s %d -V %d -b %d -t %d -f %d -d s '%s' -d b '%s' -D c '%s' -D f '%s' %s -Si archdef %d -Si bozol1 %d -Si nof77 %d -o Make.inc",
+               verb, OS, arch, mhz, asmb, vecexts, ptrbits, ncpu, l2size,
+               srcdir, bindir, cdefs ? cdefs:"", f2cdefs? f2cdefs : "",
+               compsflags, archdef, bozol1, nof77);
+   if (pmake)
+      i += sprintf(ln+i, " -Ss pmake '%s'", pmake);
+   if (flapack)
+      i += sprintf(ln+i, " -Ss flapack '%s'", flapack);
+   if (smaflags)
+      i += sprintf(ln+i, " -Ss smaflags '%s'", smaflags);
+   if (dmaflags)
+      i += sprintf(ln+i, " -Ss dmaflags '%s'", dmaflags);
+   if (f77libs)
+      i += sprintf(ln+i, " -Ss f77lib '%s'", f77libs);
+   if (gccflags)
+      i += sprintf(ln+i, " -Fa gc '%s'", gccflags);
+   if (verb > 1)
+      fprintf(stderr, "cmnd='%s'\n", ln);
+   assert(!system(ln));
+}
+
+void PrintUsage(char *name, int iarg, char *arg)
+{
+   fprintf(stderr, "\nERROR around arg %d (%s).\n", iarg,
+           arg ? arg : "unknown");
+   fprintf(stderr, "USAGE: %s [flags] where flags are:\n", name);
+   fprintf(stderr, "   -v <verb> : verbosity level\n");
+   fprintf(stderr, "   -O <enum OSTYPE #>  : set OS type\n");
+   fprintf(stderr, "   -s <enum ASMDIA #>  : set assembly dialect\n");
+   fprintf(stderr, "   -A <enum MACHTYPE #> : set machine/architecture\n");
+   fprintf(stderr,
+   "   -V #    # = ((1<<vecISA1) | (1<<vecISA2) | ... | (1<<vecISAN))\n");
+   fprintf(stderr, "   -b <32/64> : set pointer bitwidth\n");
+   fprintf(stderr, "   -o <outfile>\n");
+   fprintf(stderr, "   -C [xc,ic,if,sk,dk,sm,dm,al,ac] <compiler>\n");
+   fprintf(stderr, "   -F [xc,ic,if,sk,dk,sm,dm,al,ac,gc] '<comp flags>'\n");
+   fprintf(stderr,    /* HERE */
+           "   -Fa [xc,ic,if,sk,dk,sm,dm,al,ac,gc] '<comp flags to append>'\n");
+   fprintf(stderr, "        al: append flags to all compilers\n");
+   fprintf(stderr, "        ac: append flags to all C compilers\n");
+   fprintf(stderr, "        gc: append flags to gcc compiler used in user-contributed index files.\n");
+   fprintf(stderr, "        acg: append to all C compilers & the index gcc\n");
+   fprintf(stderr, "        alg: append to all compilers & the index gcc\n");
+   fprintf(stderr,
+      "   -T <targ> : ssh target for cross-compilation (probably broken)\n");
+   fprintf(stderr, "   -D [c,f] -D<mac>=<rep> : cpp #define to add to [CDEFS,F2CDEFS]\n");
+   fprintf(stderr,
+   "      eg. -D c -DL2SIZE=8388604 -D f -DADD__ -D f -DStringSunStyle\n");
+   fprintf(stderr, "   -d [s,b]  : set source/build directory\n");
+   fprintf(stderr, "   -f <#> : size (in KB) to flush before timing\n");
+   fprintf(stderr,
+           "   -t <#> : set # of threads (-1: autodect; 0: no threading)\n");
+   fprintf(stderr, "   -m <mhz> : set clock rate\n");
+   fprintf(stderr, "   -S[i/s] <handle> <val>  : special int/string arg\n");
+   fprintf(stderr,
+           "      -Si bozol1 <0/1> : supress/enable bozo L1 defaults\n");
+   fprintf(stderr,
+           "      -Si archdef <1/0> : enable/supress arch default use\n");
+      fprintf(stderr,
+        "      -Si nof77 <0/1> : Have/don't have fortran compiler\n");
+      fprintf(stderr,
+        "      -Si nocygwin <0/1> : Do/don't depend on GPL cygwin library\n");
+      fprintf(stderr,
+        "                           (Windows compiler/cygwin install only)\n");
+      fprintf(stderr,
+        "      -Si cputhrchk <0/1> : Ignore/heed CPU throttle probe\n");
+   fprintf(stderr,
+        "      -Ss kern <path to comp> : use comp for all kernel compilers\n");
+   fprintf(stderr,
+        "      -Ss pmake <parallel make invocation (eg '$(MAKE) -j 4')>\n");
+   fprintf(stderr,
+"      -Ss f77lib <path to f77 lib needed by C compiler>\n");
+   fprintf(stderr,
+"      -Ss flapack <path to netlib lapack>: used to build full lapack lib\n");
+   fprintf(stderr, "      -Ss [s,d]maflags 'flags'\n");
+   fprintf(stderr,
+      "NOTE: enum #s can be found by : make xprint_enums ; ./xprint_enums\n");
+   exit(iarg);
+}
+
+void GetFlags(int nargs,                /* nargs as passed into main */
+              char **args,              /* args as passed into main */
+              int *verb,                /* verbosity setting */
+              enum OSTYPE *OS,          /* OS to assume */
+              enum ASMDIA *asmb,        /* assembly dialect to assume */
+              int *vec,                 /* Vector ISA extension bitfield */
+              enum MACHTYPE *mach,     /* machine/arch to assume */
+              int *mhz,                /* Clock rate in Mhz */
+              int *ptrbits             /* # of bits in ptr: 32/64 */,
+              int *nthreads,           /* # of threads */
+              char **comps,
+              char **gccflags,        /* append flags for user-contrib gcc */
+              char **outfile,
+              char **srcdir,          /* path to top of source directory */
+              char **bindir,          /* path to top of binary directory */
+              int *bozol1,            /* Use untuned L1 */
+              int *UseArchDef,        /* Use arch defaults */
+              int *NoF77,
+              int *NoCygwin,
+              int *ThrChk,
+              char **f2cdefs,         /* F77-to-C interface defines */
+              char **ecdefs,          /* extra cpp defines to add to CDEFS */
+              char **pmake,           /* parallel make command */
+              char **flapack,         /* netlib F77 LAPACK  */
+              char **smaflags,       /* single prec muladd flags */
+              char **dmaflags,       /* double prec muladd flags */
+              char **f77lib,         /* netlib F77 LAPACK  */
+              int *flush,             /* size in KB to flush */
+              char **targ             /* mach to ssh to*/
+             )
+{
+   int i, k, k0, kn, DoInt;
+   char *sp, *sp0;
+   char *gcc3=NULL;
+   char *cdefs=NULL, *fdefs=NULL;
+   char ln[1024];
+
+   *verb = 0;
+   *srcdir = *bindir = NULL;
+    *bozol1 = 0;
+    *UseArchDef = 1;
+    *flapack = NULL;
+    *f77lib = NULL;
+    *smaflags = *dmaflags = NULL;
+    *mhz = 0;
+   *outfile = NULL;
+   *targ = NULL;
+   for (k=0; k < NCOMP*3; k++)
+      comps[k] = NULL;
+   *gccflags = NULL;
+
+   *flush = 0;
+   *nthreads = 0;
+   *ptrbits = 0;
+   *mhz = 0;
+   *mach = 0;
+   *vec = 0;
+   *asmb = 0;
+   *OS = 0;
+   *verb = 0;
+   *NoCygwin = 0;
+   *NoF77 = 0;
+   *ThrChk = 1;
+   *nthreads = -1;
+   *pmake = NULL;
+   for (i=1; i < nargs; i++)
+   {
+      if (args[i][0] != '-')
+         PrintUsage(args[0], i, args[i]);
+      switch(args[i][1])
+      {
+      case 'f':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *flush = atoi(args[i]);
+         break;
+      case 't':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *nthreads = atoi(args[i]);
+         break;
+      case 'b':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *ptrbits = atoi(args[i]);
+         break;
+      case 'm':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *mhz = atoi(args[i]);
+         break;
+      case 'A':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *mach = atoi(args[i]);
+         break;
+      case 'V':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *vec = atoi(args[i]);
+         break;
+      case 's':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *asmb = atoi(args[i]);
+         break;
+      case 'O':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *OS = atoi(args[i]);
+         break;
+      case 'v':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *verb = atoi(args[i]);
+         break;
+      case 'T':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *targ = args[i];
+         break;
+      case 'S':
+         if (args[i][2] != 'i' && args[i][2] != 's')
+            PrintUsage(args[0], i, "-S needs i or s suffix!");
+         DoInt = args[i][2] == 'i';
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         sp0 = args[i];
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         if (DoInt)
+            k = atoi(args[i]);
+         else
+            sp = args[i];
+         if (!strcmp(sp0, "archdef"))
+            *UseArchDef = k;
+         else if (!strcmp(sp0, "bozol1"))
+            *bozol1 = k;
+         else if (!strcmp(sp0, "nof77"))
+            *NoF77 = k;
+         else if (!strcmp(sp0, "nocygwin"))
+            *NoCygwin = k;
+         else if (!strcmp(sp0, "cputhrchk"))
+            *ThrChk = k;
+         else if (!strcmp(sp0, "kern"))
+            gcc3 = sp;
+         else if (!strcmp(sp0, "pmake"))
+            *pmake = sp;
+        else if (!strcmp(sp0, "flapack"))
+           *flapack = sp;
+        else if (!strcmp(sp0, "f77lib"))
+           *f77lib = sp;
+        else if (!strcmp(sp0, "smaflags"))
+           *smaflags = sp;
+        else if (!strcmp(sp0, "dmaflags"))
+           *dmaflags = sp;
+         else
+            PrintUsage(args[0], i-1, sp0);
+         break;
+      case 'o':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *outfile = args[i];
+         break;
+      case 'D':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         if (args[i-1][0] == 'f')
+            fdefs = NewAppendedString(fdefs, args[i]);
+         else
+            cdefs = NewAppendedString(cdefs, args[i]);
+         break;
+      case 'd':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         sp = args[i-1];
+         if (*sp == 's')
+            *srcdir = args[i];
+         else if (*sp == 'b')
+            *bindir = args[i];
+         break;
+      case 'C':
+      case 'F':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         sp = args[i];
+         k = -1;
+         if (*sp == 'i' && sp[1] == 'c') k = ICC_;
+         else if (*sp == 'i' && sp[1] == 'f') k = F77_;
+         else if (*sp == 's' && sp[1] == 'k') k = SKC_;
+         else if (*sp == 'd' && sp[1] == 'k') k = DKC_;
+         else if (*sp == 's' && sp[1] == 'm') k = SMC_;
+         else if (*sp == 'd' && sp[1] == 'm') k = DMC_;
+         else if (*sp == 'x' && sp[1] == 'c') k = XCC_;
+         if (*sp == 'a' && (sp[1] == 'l' || sp[1] == 'c'))
+         {  /* only appended flags can be applied to all compilers */
+            if (args[i-1][1] == 'F')
+            {
+               if (args[i-1][2] == 'a')
+               {
+                  k0 = NCOMP+NCOMP;
+                  kn = k0 + NCOMP;
+               }
+               else
+               {
+                  k0 = NCOMP;
+                  kn = NCOMP+NCOMP;
+               }
+            }
+            else
+            {
+               k0 = 0;
+               kn = NCOMP;
+            }
+            if (++i >= nargs)
+               PrintUsage(args[0], i, "out of arguments");
+            for (k=k0; k < kn; k++)
+               if (sp[1] == 'l' || k-2*NCOMP != F77_)
+                  comps[k] = args[i];
+            if (sp[2] == 'g' && args[i-2][1] == 'F')
+               *gccflags = args[i];
+         }
+         else if (*sp == 'g' && sp[1] == 'c')
+         {
+            if (++i >= nargs)
+               PrintUsage(args[0], i, "out of arguments");
+            *gccflags = args[i];
+         }
+         else
+         {
+            if (k < 0) PrintUsage(args[0], i, args[i]);
+            if (args[i-1][1] == 'F')
+            {
+               k += NCOMP;
+               if (args[i-1][2] == 'a')
+                  k += NCOMP;
+            }
+            if (++i >= nargs)
+               PrintUsage(args[0], i, "out of arguments");
+            comps[k] = args[i];
+         }
+         break;
+      default:
+         PrintUsage(args[0], i, args[i]);
+      }
+   }
+/*
+ * allocate these strings ourselves so we can free them later if necessary
+ */
+   for (i=0; i < 3*NCOMP; i++)
+   {
+      if (comps[i])
+      {
+         if (!strcmp(comps[i], "default"))
+            comps[i] = NULL;
+         else
+         {
+            sp = malloc(sizeof(char)*(strlen(comps[i])+1));
+            strcpy(sp, comps[i]);
+            comps[i] = sp;
+         }
+      }
+   }
+/*
+ * If the special flag -Ss gcc3 is thrown, force gcc3's use for all kernel
+ * compilers (standard gcc assumed to be gcc4)
+ */
+   if (gcc3)
+   {
+      for (i=0; i < NCOMP; i++)
+      {
+         if (!comps[i] && (i == SMC_ || i == DMC_ || i == SKC_ || i == DKC_))
+            comps[i] = NewStringCopy(gcc3);
+      }
+   }
+   *f2cdefs = fdefs;
+   *ecdefs = cdefs;
+   if (*ptrbits != 32 && *ptrbits != 64)
+      *ptrbits = 0;
+}
+
+main(int nargs, char **args)
+{
+   enum OSTYPE OS;
+   enum MACHTYPE mach;
+   int i, verb, asmb, f2cname, f2cint, f2cstr, ncpu, nof77, nocygwin;
+   int thrchk, mhz;
+   int j, k, h, vecexts;
+   int ptrbits, l2size, bozol1, archdef;
+   char *targ, *f2cdefs, *cdefs, *srcdir, *bindir, *outfile, *sp;
+   char targarg[256];
+   char *comps[3*NCOMP], *gccflags;
+   char *pmake, *flapack, *smaflags, *dmaflags, *f77libs;
+
+   GetFlags(nargs, args, &verb, &OS, (enum ASMDIA*) &asmb, &vecexts, &mach,
+            &mhz, &ptrbits, &ncpu, comps, &gccflags, &outfile, &srcdir, &bindir,
+            &bozol1, &archdef, &nof77, &nocygwin, &thrchk, &f2cdefs, &cdefs,
+            &pmake, &flapack, &smaflags, &dmaflags, &f77libs, &l2size, &targ);
+   if (targ)
+      sprintf(targarg, "-T %s", targ);
+   else
+      targarg[0] = '\0';
+   if (OS == OSOther)
+      OS = ProbeOS(verb, targarg);
+   if (asmb == ASM_None)
+      asmb = ProbeAsm(verb, targarg, OS);
+   else if (asmb < 0)
+      asmb = 0;
+   if (!vecexts)
+      vecexts = ProbeVecs(verb, targarg, OS, asmb);
+   else if (vecexts < 0)
+      vecexts = 0;
+   if (mach == MACHOther)
+      mach = ProbeArch(verb, targarg, OS, asmb);
+   if (!mhz)
+      mhz = ProbeMhz(verb, targarg, OS, asmb);
+   if (ncpu < 0)
+      ncpu = ProbeNcpu(verb, targarg, OS, asmb);
+   if (!pmake && ncpu > 1)
+      pmake = ProbePmake(verb, OS, ncpu);
+   if (ptrbits == 0)
+   {
+      if (asmb == gas_x86_64)
+         ptrbits = 64;
+      else
+         ptrbits = ProbePtrbits(verb, targarg, OS, asmb);
+   }
+   if (ProbeCPUThrottle(verb, targarg, OS, asmb))
+   {
+      fprintf(stderr,
+         "It appears you have cpu throttling enabled, which makes timings\n");
+      fprintf(stderr,
+              "unreliable and an ATLAS install nonsensical.  Aborting.\n");
+      fprintf(stderr,
+              "See ATLAS/INSTALL.txt for further information\n");
+      if (thrchk) exit(1);
+      else fprintf(stderr, "Ignoring CPU throttling by user override!\n\n");
+   }
+/*
+ * Override 32/64 bit assembler if asked
+ */
+   if (asmb == gas_x86_64 && ptrbits == 32)
+      asmb = gas_x86_32;
+   else if (asmb == gas_x86_32 && ptrbits == 64)
+      asmb = gas_x86_64;
+
+   sp = ProbeComp(verb, targarg, OS, mach, comps, nof77, nocygwin, ptrbits);
+   if (nof77)
+      f2cdefs = "-DATL_NoF77";
+   else if (!f2cdefs) f2cdefs = sp;
+   if (!f77libs)
+      f77libs = ProbeF77LIB(verb, targarg, OS, mach, comps, f2cdefs, nof77);
+/*
+ * If user has not specified muladd flags (which are suffixed to kernel flags),
+ * add flags to keep gcc 4 from hanging, if necessary
+ */
+   if (!smaflags)
+   {
+      if (CompIsGcc(comps[SKC_]))
+      {
+         GetGccVers(comps[SKC_], &h, &i, &j, &k);
+         if (i >= 4)
+            smaflags = "-fno-tree-loop-optimize";
+         else if (i == 3) /* reduce opt to avoid compiler hang */
+            smaflags = "-O0";
+      }
+      else if (OS == OSIRIX && CompIsMIPSpro(comps[SKC_]))
+         smaflags = " -O2";
+   }
+   if (!dmaflags)
+   {
+      if (CompIsGcc(comps[DKC_]))
+      {
+         GetGccVers(comps[DKC_], &h, &i, &j, &k);
+         if (i >= 4)
+            dmaflags = "-fno-tree-loop-optimize";
+         else if (i == 3) /* reduce opt to avoid compiler hang */
+            dmaflags = "-O0";
+      }
+      else if (OS == OSIRIX && CompIsMIPSpro(comps[DKC_]))
+         dmaflags = " -O2";
+   }
+   SpewItForth(verb, OS, mach, mhz, asmb, vecexts, ptrbits, ncpu, l2size,
+               srcdir, bindir, bozol1, archdef, nof77, comps, gccflags,
+               f2cdefs, cdefs, pmake, flapack, smaflags, dmaflags, f77libs);
+/*
+ * Cleanup directory, and exit
+ */
+   system("make confclean");
+   exit(0);
+}
diff -Nur ATLAS.orig/CONFIG/src/config.c.rej ATLAS/CONFIG/src/config.c.rej
--- ATLAS.orig/CONFIG/src/config.c.rej	1969-12-31 19:00:00.000000000 -0500
+++ ATLAS/CONFIG/src/config.c.rej	2012-06-25 18:28:21.000000000 -0400
@@ -0,0 +1,11 @@
+--- ATLAS.orig/CONFIG/src/config.c	2007-08-10 16:57:42.000000000 +0100
++++ ATLAS/CONFIG/src/config.c	2007-08-18 13:48:43.000000000 +0100
+@@ -284,7 +284,7 @@
+             if (verb > 1) fprintf(stderr, "SUCCESS!\n");
+             F77LIBdir = NewStringCopy(sp-2);
+             F77LIBdir = NewAppendedString(F77LIBdir, "-l");
+-            F77LIBdir = NewAppendedString(F77LIBdir, f77lib);
++            F77LIBdir = NewConcatenedString(F77LIBdir, f77lib);
+             if (verb)
+                fprintf(stderr, "F77LIB = %s\n", F77LIBdir);
+             return(F77LIBdir);
diff -Nur ATLAS.orig/CONFIG/src/Makefile ATLAS/CONFIG/src/Makefile
--- ATLAS.orig/CONFIG/src/Makefile	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/CONFIG/src/Makefile	2012-06-25 18:27:33.000000000 -0400
@@ -355,6 +355,18 @@
 	$(MAKE) -f Make.top sanity_test
 pttest :
 	$(MAKE) -f Make.top ptsanity_test
+shared :
+	$(MAKE) -f Make.top shared arch=$(arch)
+shared-strip :
+	$(MAKE) -f Make.top shared-strip arch=$(arch)
+ptshared :
+	$(MAKE) -f Make.top ptshared arch=$(arch)
+ptshared-strip :
+	$(MAKE) -f Make.top ptshared-strip arch=$(arch)
+liblapack.so :
+	$(MAKE) -f Make.top liblapack.so arch=$(arch)
+
+
 $(INCINSTdir) :
 	mkdir -p $(INCINSTdir)
 	chmod 0755 $(INCINSTdir)
diff -Nur ATLAS.orig/CONFIG/src/Makefile.orig ATLAS/CONFIG/src/Makefile.orig
--- ATLAS.orig/CONFIG/src/Makefile.orig	1969-12-31 19:00:00.000000000 -0500
+++ ATLAS/CONFIG/src/Makefile.orig	2011-05-14 13:33:24.000000000 -0400
@@ -0,0 +1,376 @@
+SHELL=/bin/sh
+SRCdir = $(TOPdir)/CONFIG/src
+INCdir = $(TOPdir)/CONFIG/include
+mydir = $(BLDdir)
+atlrun = atlas_run
+INCFLAGS = -I$(INCdir)
+MYFLAGS =
+CCFLAGS = $(INCFLAGS) $(MYFLAGS) $(CFLAGS)
+XCC = $(CC)
+XCFLAGS = $(CCFLAGS)
+LIBS =
+args =
+rdir = /tmp
+arch=
+GUNZIP = gunzip
+TAR = tar
+wind=/usr/local/bin
+
+all : build
+xconfig : $(SRCdir)/config.c atlconf_misc.o
+	$(XCC) $(XCFLAGS) -o xconfig $(SRCdir)/config.c atlconf_misc.o $(LIBS)
+xspew : $(SRCdir)/SpewMakeInc.c atlconf_misc.o
+	$(XCC) $(XCFLAGS) -o xspew $(SRCdir)/SpewMakeInc.c atlconf_misc.o \
+               $(LIBS)
+
+$(wind)/ATLwin_ifort.exe : $(SRCdir)/winf77.c
+	gcc -mno-cygwin -o $(wind)/ATLwin_ifort.exe -DDEFDF=ifort \
+            $(SRCdir)/winf77.c
+$(wind)/ATLwin_icc.exe : $(SRCdir)/wincc.c
+	gcc -mno-cygwin -o $(wind)/ATLwin_icc.exe -DDEFDF=icl \
+            $(SRCdir)/wincc.c
+$(wind)/ATLwin_cl.exe : $(SRCdir)/wincc.c
+	gcc -mno-cygwin -o $(wind)/ATLwin_cl.exe -DDEFDF=cl \
+            $(SRCdir)/wincc.c
+$(wind)/ATLwin_icl.exe : $(SRCdir)/wincc.c
+	gcc -mno-cygwin -o $(wind)/ATLwin_icl.exe -DDEFDF=icl \
+            $(SRCdir)/wincc.c
+xprobe_pmake : probe_pmake.o atlconf_misc.o
+	$(XCC) $(XCFLAGS) -o xprobe_pmake probe_pmake.o atlconf_misc.o $(LIBS)
+xprobe_f2c : probe_f2c.o atlconf_misc.o
+	$(XCC) $(XCFLAGS) -o xprobe_f2c probe_f2c.o atlconf_misc.o $(LIBS)
+xprobe_comp : probe_comp.o atlconf_misc.o
+	$(XCC) $(XCFLAGS) -o xprobe_comp probe_comp.o atlconf_misc.o $(LIBS)
+xprobe_arch : probe_arch.o atlconf_misc.o
+	$(XCC) $(XCFLAGS) -o xprobe_arch probe_arch.o atlconf_misc.o $(LIBS)
+xprobe_vec : probe_vec.o atlconf_misc.o
+	$(XCC) $(XCFLAGS) -o xprobe_vec probe_vec.o atlconf_misc.o $(LIBS)
+xprobe_asm : probe_asm.o atlconf_misc.o
+	$(XCC) $(XCFLAGS) -o xprobe_asm probe_asm.o atlconf_misc.o $(LIBS)
+xprobe_OS : probe_OS.o atlconf_misc.o
+	$(XCC) $(XCFLAGS) -o xprobe_OS probe_OS.o atlconf_misc.o $(LIBS)
+
+xprint_enums : $(SRCdir)/print_enums.c
+	$(XCC) $(XCFLAGS) -o xprint_enums $(SRCdir)/print_enums.c
+xatlbench : atlbench.o atlconf_misc.o
+	$(XCC) $(XCFLAGS) -o xatlbench atlbench.o atlconf_misc.o
+atlbench.o : $(SRCdir)/atlbench.c
+	$(XCC) $(XCFLAGS) -c $(SRCdir)/atlbench.c
+probe_pmake.o : $(SRCdir)/probe_pmake.c
+	$(XCC) $(XCFLAGS) -c $(SRCdir)/probe_pmake.c
+probe_f2c.o : $(SRCdir)/probe_f2c.c
+	$(XCC) $(XCFLAGS) -c $(SRCdir)/probe_f2c.c
+probe_comp.o : $(SRCdir)/probe_comp.c
+	$(XCC) $(XCFLAGS) -c $(SRCdir)/probe_comp.c
+probe_arch.o : $(SRCdir)/probe_arch.c
+	$(XCC) $(XCFLAGS) -c $(SRCdir)/probe_arch.c
+probe_vec.o : $(SRCdir)/probe_vec.c
+	$(XCC) $(XCFLAGS) -c $(SRCdir)/probe_vec.c
+probe_asm.o : $(SRCdir)/probe_asm.c
+	$(XCC) $(XCFLAGS) -c $(SRCdir)/probe_asm.c
+probe_OS.o : $(SRCdir)/probe_OS.c
+	$(XCC) $(XCFLAGS) -c $(SRCdir)/probe_OS.c
+atlconf_misc.o : $(SRCdir)/atlconf_misc.c
+	$(XCC) $(XCFLAGS) -c $(SRCdir)/atlconf_misc.c
+atlconf_misc_BE.o : $(SRCdir)/atlconf_misc.c
+	$(CC) $(CCFLAGS) -o atlconf_misc_BE.o -c $(SRCdir)/atlconf_misc.c
+
+atlas_run :
+	cd $(atldir) ; ./$(exe) $(args) > $(redir)
+atlas_runX :
+	scp $(atldir)/$(exe) $(targ):$(rdir)/$(exe)
+	ssh $(targ) 'cd $(rdir) ; ./$(exe) $(args)' > $(redir)
+force_build:
+
+#
+# General probes always ran locally (possibly cross-compiling machine)
+# General probes call system (they're essentially shell scripts)
+#
+IRun_comp: xprobe_comp force_build
+	- rm -f config1.out
+	$(MAKE) atlas_run atldir=$(mydir) exe=xprobe_comp args="$(args)" \
+                redir=config1.out
+	- cat config1.out
+IRun_OS: xprobe_OS force_build
+	- rm -f config1.out
+	$(MAKE) atlas_run atldir=$(mydir) exe=xprobe_OS args="$(args)" \
+                redir=config1.out
+	- cat config1.out
+IRun_pmake: xprobe_pmake force_build
+	- rm -f config2.out
+	$(MAKE) atlas_run atldir=$(mydir) exe=xprobe_pmake args="$(args)" \
+                redir=config2.out
+	- cat config2.out
+IRun_arch: xprobe_arch force_build
+	- rm -f config2.out
+	$(MAKE) atlas_run atldir=$(mydir) exe=xprobe_arch args="$(args)" \
+                redir=config2.out
+	- cat config2.out
+IRun_vec: xprobe_vec force_build
+	- rm -f config2.out
+	$(MAKE) atlas_run atldir=$(mydir) exe=xprobe_vec args="$(args)" \
+                redir=config2.out
+	- cat config2.out
+IRun_asm: xprobe_asm force_build
+	- rm -f config2.out
+	$(MAKE) atlas_run atldir=$(mydir) exe=xprobe_asm args="$(args)" \
+                redir=config2.out
+	- cat config2.out
+IRun_f2c: xprobe_f2c force_build
+	- rm -f config2.out
+	$(MAKE) atlas_run atldir=$(mydir) exe=xprobe_f2c args="$(args)" \
+                redir=config2.out
+	- cat config2.out
+
+#
+# Machine-level probes run on machine lib being compiled for
+# These probes do not call system, but actually do something
+#
+IRun_3DNow :
+	$(CC) $(CCFLAGS) -o xprobe_3dnow $(SRCdir)/backend/probe_svec.c $(SRCdir)/backend/probe_3DNow.S
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xprobe_3dnow args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRun_AltiVec :
+	$(CC) $(CCFLAGS) -o xprobe_altivec $(SRCdir)/backend/probe_svec.c $(SRCdir)/backend/probe_AltiVec.S
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xprobe_altivec args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRun_SSE2 :
+	$(CC) $(CCFLAGS) -o xprobe_sse2 $(SRCdir)/backend/probe_dvec.c $(SRCdir)/backend/probe_SSE2.S
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xprobe_sse2 args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRun_SSE1 :
+	$(CC) $(CCFLAGS) -o xprobe_sse1 $(SRCdir)/backend/probe_svec.c $(SRCdir)/backend/probe_SSE1.S
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xprobe_sse1 args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRun_SSE3 :
+	$(CC) $(CCFLAGS) -o xprobe_sse3 $(SRCdir)/backend/probe_dSSE3.c $(SRCdir)/backend/probe_SSE3.S
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xprobe_sse3 args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+
+IRun_GAS_SPARC :
+	$(CC) $(CCFLAGS) -o xprobe_gas_sparc $(SRCdir)/backend/probe_this_asm.c $(SRCdir)/backend/probe_gas_sparc.S
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xprobe_gas_sparc args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRun_GAS_PARISC :
+	$(CC) $(CCFLAGS) -o xprobe_gas_parisc $(SRCdir)/backend/probe_this_asm.c $(SRCdir)/backend/probe_gas_parisc.S
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xprobe_gas_parisc args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRun_GAS_PPC :
+	$(CC) $(CCFLAGS) -o xprobe_gas_ppc $(SRCdir)/backend/probe_this_asm.c $(SRCdir)/backend/probe_gas_ppc.S
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xprobe_gas_ppc args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRun_GAS_x8664 :
+	$(CC) $(CCFLAGS) -o xprobe_gas_x8664 $(SRCdir)/backend/probe_this_asm.c $(SRCdir)/backend/probe_gas_x8664.S
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xprobe_gas_x8664 args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRun_GAS_x8632 :
+	$(CC) $(CCFLAGS) -o xprobe_gas_x8632 $(SRCdir)/backend/probe_this_asm.c $(SRCdir)/backend/probe_gas_x8632.S
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xprobe_gas_x8632 args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+
+IRunC2C :
+	- rm -f config0.out xc2c c2cslave.o
+	$(CC1) $(CC1FLAGS) -c $(SRCdir)/backend/c2cslave.c
+	$(CC) $(CCFLAGS) -o xc2c $(SRCdir)/backend/c2cmaster.c c2cslave.o
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xc2c args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRunFlib :
+	@ - rm config0.out
+	@ $(F77) $(F77FLAGS) -v -o xtst $(SRCdir)/backend/comptestF.f 2>&1 | \
+           fgrep -e '-L' > config0.out
+	@ rm -f xtst
+	@ - cat config0.out
+IRunTestCFLink :
+	@ - rm -f flibchk[F,C].o xflibchk
+	$(F77) $(F77FLAGS) -c $(SRCdir)/backend/flibchkF.f
+	$(CC) $(CCFLAGS) -o xflibchk $(SRCdir)/backend/flibchkC.c \
+              flibchkF.o -l $(F77LIB) $(LIBS)
+IRunF2C_str:
+	- rm -f f2cstrF.o f2cstrC.o xfcstr config0.out
+	$(CC) $(CCFLAGS) -c $(SRCdir)/backend/f2cstrC.c
+	$(F77) $(F77FLAGS) -o xf2cstr $(SRCdir)/backend/f2cstrF.f \
+               f2cstrC.o
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xf2cstr args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRunF2C_int:
+	- rm -f f2cintF.o f2cintC.o xfcint config0.out
+	$(CC) $(CCFLAGS) -c $(SRCdir)/backend/f2cintC.c
+	$(F77) $(F77FLAGS) -o xf2cint $(SRCdir)/backend/f2cintF.f \
+               f2cintC.o
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xf2cint args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRunF2C_name:
+	- rm -f f2cnameF.o f2cnameC.o xfcname config0.out
+	$(CC) $(CCFLAGS) -c $(SRCdir)/backend/f2cnameC.c
+	$(F77) $(F77FLAGS) -o xf2cname $(SRCdir)/backend/f2cnameF.f \
+               f2cnameC.o
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xf2cname args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRunF77Comp :
+	- rm -f xf77test comptestF.o config0.out
+	$(F77) $(F77FLAGS) -o xf77test $(SRCdir)/backend/comptestF.f
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xf77test args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRunCComp :
+	- rm -f xctest comptestC.o config0.out
+	$(CC) $(CCFLAGS) -o xctest $(SRCdir)/backend/comptestC.c
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xctest args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+
+IRunArchInfo_aix: xarchinfo_aix
+	- rm -f config0.out
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xarchinfo_aix args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRunArchInfo_irix: xarchinfo_irix
+	- rm -f config0.out
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xarchinfo_irix args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRunArchInfo_sunos: xarchinfo_sunos
+	- rm -f config0.out
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xarchinfo_sunos args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRunArchInfo_freebsd: xarchinfo_freebsd
+	- rm -f config0.out
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xarchinfo_freebsd args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRunArchInfo_linux: xarchinfo_linux
+	- rm -f config0.out
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xarchinfo_linux args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+IRunArchInfo_x86: xarchinfo_x86
+	- rm -f config0.out
+	$(MAKE) $(atlrun) atldir=$(mydir) exe=xarchinfo_x86 args="$(args)" \
+                redir=config0.out
+	- cat config0.out
+xarchinfo_x86: $(SRCdir)/backend/archinfo_x86.c $(SRCdir)/backend/cpuid.S
+	$(CC) $(CCFLAGS) -o xarchinfo_x86 $(SRCdir)/backend/archinfo_x86.c \
+              $(SRCdir)/backend/cpuid.S
+xarchinfo_aix : $(SRCdir)/backend/archinfo_aix.c atlconf_misc_BE.o
+	$(CC) $(CCFLAGS) -o xarchinfo_aix $(SRCdir)/backend/archinfo_aix.c \
+              atlconf_misc_BE.o
+xarchinfo_irix : $(SRCdir)/backend/archinfo_irix.c atlconf_misc_BE.o
+	$(CC) $(CCFLAGS) -o xarchinfo_irix $(SRCdir)/backend/archinfo_irix.c \
+              atlconf_misc_BE.o
+xarchinfo_sunos : $(SRCdir)/backend/archinfo_sunos.c atlconf_misc_BE.o
+	$(CC) $(CCFLAGS) -o xarchinfo_sunos $(SRCdir)/backend/archinfo_sunos.c \
+              atlconf_misc_BE.o
+xarchinfo_freebsd : $(SRCdir)/backend/archinfo_freebsd.c atlconf_misc_BE.o
+	$(CC) $(CCFLAGS) -o xarchinfo_freebsd $(SRCdir)/backend/archinfo_freebsd.c \
+              atlconf_misc_BE.o
+xarchinfo_linux : $(SRCdir)/backend/archinfo_linux.c atlconf_misc_BE.o
+	$(CC) $(CCFLAGS) -o xarchinfo_linux $(SRCdir)/backend/archinfo_linux.c \
+              atlconf_misc_BE.o
+xprobe_parisc : $(SRCdir)/backend/probe_this_asm.c $(SRCdir)/backend/probe_gas_parisc.S
+	$(CC) $(CCFLAGS) -o xprobe_parisc $(SRCdir)/backend/probe_this_asm.c \
+              $(SRCdir)/backend/probe_gas_parisc.S
+xprobe_sparc : $(SRCdir)/backend/probe_this_asm.c $(SRCdir)/backend/probe_gas_sparc.S
+	$(CC) $(CCFLAGS) -o xprobe_sparc $(SRCdir)/backend/probe_this_asm.c \
+              $(SRCdir)/backend/probe_gas_sparc.S
+xprobe_ppc : $(SRCdir)/backend/probe_this_asm.c $(SRCdir)/backend/probe_gas_ppc.S
+	$(CC) $(CCFLAGS) -o xprobe_ppc $(SRCdir)/backend/probe_this_asm.c \
+              $(SRCdir)/backend/probe_gas_ppc.S
+xprobe_x8632 : $(SRCdir)/backend/probe_this_asm.c $(SRCdir)/backend/probe_gas_x8632.S
+	$(CC) $(CCFLAGS) -o xprobe_x8632 $(SRCdir)/backend/probe_this_asm.c \
+              $(SRCdir)/backend/probe_gas_x8632.S
+xprobe_x8684 : $(SRCdir)/backend/probe_this_asm.c $(SRCdir)/backend/probe_gas_x8684.S
+	$(CC) $(CCFLAGS) -o xprobe_x8684 $(SRCdir)/backend/probe_this_asm.c \
+              $(SRCdir)/backend/probe_gas_x8684.S
+
+DoNothing:
+
+make_subdirs:
+	mkdir src bin tune interfaces
+	cd src ; mkdir testing auxil blas lapack pthreads
+	cd src/blas ; \
+           mkdir reference gemv ger gemm level1 level2 level3 pklevel3
+	cd src/blas/reference ; mkdir level1 level2 level3
+	cd src/blas/level2 ; mkdir kernel
+	cd src/blas/pklevel3 ; mkdir gpmm sprk
+	cd src/blas/level3 ; mkdir rblas kernel
+	cd src/pthreads ; mkdir blas misc
+	cd src/pthreads/blas ; mkdir level1 level2 level3
+	cd tune ; mkdir blas sysinfo
+	cd tune/blas ; mkdir gemm gemv ger level1 level3
+	cd interfaces ; mkdir blas lapack
+	cd interfaces/lapack ; mkdir C F77
+	cd interfaces/lapack/C ; mkdir src testing
+	cd interfaces/lapack/F77 ; mkdir src testing
+	cd interfaces/blas ; mkdir C F77
+	cd interfaces/blas/C ; mkdir src testing
+	cd interfaces/blas/F77 ; mkdir src testing
+	mkdir ARCHS
+
+#
+# Simple test returns error if directory doesn't exist
+#
+DirIsThere :
+	cd $(tdir)
+$(arch)_defs : $(SRCdir)/CONFIG/$(arch).tar.gz
+	$(GUNZIP) -c $(SRCdir)/CONFIG/$(ARCH).tar.gz | $(TAR) xvf -
+archdef :
+	$(MAKE) -f Make.top archdef
+time : xatlbench
+	$(MAKE) -f Make.top time
+build :
+	$(MAKE) -f Make.top build
+	$(MAKE) clean
+error_report:
+	$(MAKE) -f Make.top error_report
+startup : 
+	$(MAKE) -f Make.top startup
+refresh :
+	$(MAKE) -f Make.top refresh
+kill  :
+	$(MAKE) -f Make.top kill
+killall:
+	$(MAKE) -f Make.top killall
+C_test :
+	$(MAKE) -f Make.top C_sanity_test
+C_pttest :
+	$(MAKE) -f Make.top C_ptsanity_test
+check : $(TESTS)
+ptcheck : $(PTTESTS)
+test :
+	$(MAKE) -f Make.top sanity_test
+pttest :
+	$(MAKE) -f Make.top ptsanity_test
+$(INCINSTdir) :
+	mkdir -p $(INCINSTdir)
+	chmod 0755 $(INCINSTdir)
+$(INCINSTdir)/atlas :
+	mkdir -p $(INCINSTdir)/atlas
+	chmod 0755 $(INCINSTdir)/atlas
+$(LIBINSTdir) :
+	mkdir -p $(LIBINSTdir)
+	chmod 0755 $(LIBINSTdir)
+install : $(INCINSTdir) $(LIBINSTdir) $(INCINSTdir)/atlas
+	$(MAKE) -f Make.top install_inc INSTdir=$(INCINSTdir) 
+	$(MAKE) -f Make.top install_lib INSTdir=$(LIBINSTdir)
+
+confclean:
+	rm -f *core* *.o config?.out
+clean :
+	rm -f *.o x* config?.out *core*
+cleanall:
+	$(MAKE) -f Make.top clean
diff -Nur ATLAS.orig/CONFIG/src/SpewMakeInc.c ATLAS/CONFIG/src/SpewMakeInc.c
--- ATLAS.orig/CONFIG/src/SpewMakeInc.c	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/CONFIG/src/SpewMakeInc.c	2012-06-25 18:27:33.000000000 -0400
@@ -676,10 +676,12 @@
    fprintf(fpout, "   NCFLAGS = $(ICCFLAGS)\n");
    fprintf(fpout, "\n   CLINKER = $(ICC)\n   CLINKFLAGS = $(ICCFLAGS)\n");
    fprintf(fpout, "   FLINKER = $(F77)\n   FLINKFLAGS = $(F77FLAGS)\n");
-   fprintf(fpout, "   FCLINKFLAGS = $(FLINKFLAGS)");
-   if (strstr(comps[F77_], "ifort") && !OSIsWin(OS))
-      fprintf(fpout, " -nofor_main");
-   fprintf(fpout, "\n   ARCHIVER = ar\n");
+   fprintf(fpout, "   FLINKER = $(F77)\n   FLINKFLAGS = $(F77FLAGS)");
+   if (strstr(comps[F77_], "ifort"))
+     fprintf(fpout, "   -nofor_main");
+   fprintf(fpout, "\n   LIBTOOL = libtool --mode=compile\n");
+   fprintf(fpout, "   FCLINKFLAGS = $(FLINKFLAGS)\n");
+   fprintf(fpout, "   ARCHIVER = $(BLDdir)/war ar\n");
    fprintf(fpout, "   ARFLAGS  = r\n");
 /*
  * JF Mertens says that even x86 OS X still need ranlib for safety
diff -Nur ATLAS.orig/CONFIG/src/SpewMakeInc.c.orig ATLAS/CONFIG/src/SpewMakeInc.c.orig
--- ATLAS.orig/CONFIG/src/SpewMakeInc.c.orig	1969-12-31 19:00:00.000000000 -0500
+++ ATLAS/CONFIG/src/SpewMakeInc.c.orig	2011-05-14 13:33:24.000000000 -0400
@@ -0,0 +1,771 @@
+#include "atlconf.h"
+
+void PrintUsage(char *name, int iarg, char *arg)
+{
+   fprintf(stderr, "\nERROR around arg %d (%s).\n", iarg,
+           arg ? arg : "unknown");
+   fprintf(stderr, "USAGE: %s [flags] where flags are:\n", name);
+   fprintf(stderr, "   -v <verb> : verbosity level\n");
+   fprintf(stderr, "   -O <enum OSTYPE #>  : set OS type\n");
+   fprintf(stderr, "   -s <enum ASMDIA #>  : set assembly dialect\n");
+   fprintf(stderr, "   -A <enum MACHTYPE #> : set machine/architecture\n");
+   fprintf(stderr,
+   "   -V #    # = ((1<<vecISA1) | (1<<vecISA2) | ... | (1<<vecISAN))\n");
+   fprintf(stderr, "   -b <32/64> : set pointer bitwidth\n");
+   fprintf(stderr, "   -o <outfile>\n");
+   fprintf(stderr, "   -C [xc,ic,if,sk,dk,sm,dm,al,ac] <compiler>\n");
+   fprintf(stderr, "   -F [xc,ic,if,sk,dk,sm,dm,al,ac,gc] '<comp flags>'\n");
+   fprintf(stderr,    /* HERE */
+           "   -Fa [xc,ic,if,sk,dk,sm,dm,al,ac,gc] '<comp flags to append>'\n");
+   fprintf(stderr, "        al: append flags to all compilers\n");
+   fprintf(stderr, "        ac: append flags to all C compilers\n");
+   fprintf(stderr, "        gc: append flags to gcc compiler used in user-contributed index files.\n");
+   fprintf(stderr, "        acg: append to all C compilers & the index gcc\n");
+   fprintf(stderr, "        alg: append to all compilers & the index gcc\n");
+   fprintf(stderr,
+      "   -T <targ> : ssh target for cross-compilation (probably broken)\n");
+   fprintf(stderr, "   -D [c,f] -D<mac>=<rep> : cpp #define to add to [CDEFS,F2CDEFS]\n");
+   fprintf(stderr,
+   "      eg. -D c -DL2SIZE=8388604 -D f -DADD__ -D f -DStringSunStyle\n");
+   fprintf(stderr, "   -d [s,b]  : set source/build directory\n");
+   fprintf(stderr, "   -f <#> : size (in KB) to flush before timing\n");
+   fprintf(stderr,
+           "   -t <#> : set # of threads (-1: autodect; 0: no threading)\n");
+   fprintf(stderr, "   -m <mhz> : set clock rate\n");
+   fprintf(stderr, "   -S[i/s] <handle> <val>  : special int/string arg\n");
+   fprintf(stderr,
+           "      -Si bozol1 <0/1> : supress/enable bozo L1 defaults\n");
+   fprintf(stderr,
+           "      -Si archdef <1/0> : enable/supress arch default use\n");
+      fprintf(stderr,
+        "      -Si nof77 <0/1> : Have/don't have fortran compiler\n");
+   fprintf(stderr,
+        "      -Ss kern <path to comp> : use comp for all kernel compilers\n");
+   fprintf(stderr,
+        "      -Ss pmake <parallel make invocation (eg '$(MAKE) -j 4')>\n");
+   fprintf(stderr,
+"      -Ss f77lib <path to f77 lib needed by C compiler>\n");
+   fprintf(stderr,
+"      -Ss flapack <path to netlib lapack>: used to build full lapack lib\n");
+   fprintf(stderr, "      -Ss [s,d]maflags 'flags'\n");
+   fprintf(stderr,
+      "NOTE: enum #s can be found by : make xprint_enums ; ./xprint_enums\n");
+   exit(iarg);
+}
+
+void GetFlags(int nargs,                /* nargs as passed into main */
+              char **args,              /* args as passed into main */
+              int *verb,                /* verbosity setting */
+              enum OSTYPE *OS,          /* OS to assume */
+              enum ASMDIA *asmb,        /* assembly dialect to assume */
+              int *vec,                 /* Vector ISA extension bitfield */
+              enum MACHTYPE *mach,     /* machine/arch to assume */
+              int *mhz,                /* Clock rate in Mhz */
+              int *ptrbits             /* # of bits in ptr: 32/64 */,
+              int *nthreads,           /* # of threads */
+              char **comps,
+              char **gccflags,        /* append flags for user-contrib gcc */
+              char **outfile,
+              char **srcdir,          /* path to top of source directory */
+              char **bindir,          /* path to top of binary directory */
+              int *bozol1,            /* Use untuned L1 */
+              int *UseArchDef,        /* Use arch defaults */
+              int *NoF77,
+              char **f2cdefs,         /* F77-to-C interface defines */
+              char **ecdefs,          /* extra cpp defines to add to CDEFS */
+              char **pmake,           /* parallel make command */
+              char **flapack,         /* netlib F77 LAPACK  */
+              char **smaflags,       /* single prec muladd flags */
+              char **dmaflags,       /* double prec muladd flags */
+              char **f77lib,         /* netlib F77 LAPACK  */
+              int *flush,             /* size in KB to flush */
+              char **targ             /* mach to ssh to*/
+             )
+{
+   int i, k, k0, kn, DoInt;
+   char *sp, *sp0;
+   char *gcc3=NULL;
+   char *cdefs=NULL, *fdefs=NULL;
+   char ln[1024];
+
+   *verb = 0;
+   *srcdir = *bindir = NULL;
+    *bozol1 = 0;
+    *UseArchDef = 1;
+    *flapack = NULL;
+    *f77lib = NULL;
+    *smaflags = *dmaflags = NULL;
+    *mhz = 0;
+   *outfile = NULL;
+   *targ = NULL;
+   for (k=0; k < NCOMP*3; k++)
+      comps[k] = NULL;
+   *gccflags = NULL;
+
+   *flush = 0;
+   *nthreads = 0;
+   *ptrbits = 0;
+   *mhz = 0;
+   *mach = 0;
+   *vec = 0;
+   *asmb = 0;
+   *OS = 0;
+   *verb = 0;
+   *NoF77 = 0;
+   *nthreads = -1;
+   *pmake = NULL;
+   for (i=1; i < nargs; i++)
+   {
+      if (args[i][0] != '-')
+         PrintUsage(args[0], i, args[i]);
+      switch(args[i][1])
+      {
+      case 'f':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *flush = atoi(args[i]);
+         break;
+      case 't':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *nthreads = atoi(args[i]);
+         break;
+      case 'b':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *ptrbits = atoi(args[i]);
+         break;
+      case 'm':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *mhz = atoi(args[i]);
+         break;
+      case 'A':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *mach = atoi(args[i]);
+         break;
+      case 'V':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *vec = atoi(args[i]);
+         break;
+      case 's':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *asmb = atoi(args[i]);
+         break;
+      case 'O':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *OS = atoi(args[i]);
+         break;
+      case 'v':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *verb = atoi(args[i]);
+         break;
+      case 'T':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *targ = args[i];
+         break;
+      case 'S':
+         if (args[i][2] != 'i' && args[i][2] != 's')
+            PrintUsage(args[0], i, "-S needs i or s suffix!");
+         DoInt = args[i][2] == 'i';
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         sp0 = args[i];
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         if (DoInt)
+            k = atoi(args[i]);
+         else
+            sp = args[i];
+         if (!strcmp(sp0, "archdef"))
+            *UseArchDef = k;
+         else if (!strcmp(sp0, "bozol1"))
+            *bozol1 = k;
+         else if (!strcmp(sp0, "nof77"))
+            *NoF77 = k;
+         else if (!strcmp(sp0, "kern"))
+            gcc3 = sp;
+         else if (!strcmp(sp0, "pmake"))
+            *pmake = sp;
+        else if (!strcmp(sp0, "flapack"))
+           *flapack = sp;
+        else if (!strcmp(sp0, "f77lib"))
+           *f77lib = sp;
+        else if (!strcmp(sp0, "smaflags"))
+           *smaflags = sp;
+        else if (!strcmp(sp0, "dmaflags"))
+           *dmaflags = sp;
+         else
+            PrintUsage(args[0], i-1, sp0);
+         break;
+      case 'o':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         *outfile = args[i];
+         break;
+      case 'D':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         if (args[i-1][0] == 'f')
+            fdefs = NewAppendedString(fdefs, args[i]);
+         else
+            cdefs = NewAppendedString(cdefs, args[i]);
+         break;
+      case 'd':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         sp = args[i-1];
+         if (*sp == 's')
+            *srcdir = args[i];
+         else if (*sp == 'b')
+            *bindir = args[i];
+         break;
+      case 'C':
+      case 'F':
+         if (++i >= nargs)
+            PrintUsage(args[0], i, "out of arguments");
+         sp = args[i];
+         k = -1;
+         if (*sp == 'i' && sp[1] == 'c') k = ICC_;
+         else if (*sp == 'i' && sp[1] == 'f') k = F77_;
+         else if (*sp == 's' && sp[1] == 'k') k = SKC_;
+         else if (*sp == 'd' && sp[1] == 'k') k = DKC_;
+         else if (*sp == 's' && sp[1] == 'm') k = SMC_;
+         else if (*sp == 'd' && sp[1] == 'm') k = DMC_;
+         else if (*sp == 'x' && sp[1] == 'c') k = XCC_;
+         if (*sp == 'a' && (sp[1] == 'l' || sp[1] == 'c'))
+         {  /* only appended flags can be applied to all compilers */
+            if (args[i-1][1] == 'F')
+            {
+               if (args[i-1][2] == 'a')
+               {
+                  k0 = NCOMP+NCOMP;
+                  kn = k0 + NCOMP;
+               }
+               else
+               {
+                  k0 = NCOMP;
+                  kn = NCOMP+NCOMP;
+               }
+            }
+            else
+            {
+               k0 = 0;
+               kn = NCOMP;
+            }
+            if (++i >= nargs)
+               PrintUsage(args[0], i, "out of arguments");
+            for (k=k0; k < kn; k++)
+               if (sp[1] == 'l' || k-2*NCOMP != F77_)
+                  comps[k] = args[i];
+            if (sp[2] == 'g' && args[i-2][1] == 'F')
+               *gccflags = args[i];
+         }
+         else if (*sp == 'g' && sp[1] == 'c')
+         {
+            if (++i >= nargs)
+               PrintUsage(args[0], i, "out of arguments");
+            *gccflags = args[i];
+         }
+         else
+         {
+            if (k < 0) PrintUsage(args[0], i, args[i]);
+            if (args[i-1][1] == 'F')
+            {
+               k += NCOMP;
+               if (args[i-1][2] == 'a')
+                  k += NCOMP;
+            }
+            if (++i >= nargs)
+               PrintUsage(args[0], i, "out of arguments");
+            comps[k] = args[i];
+         }
+         break;
+      default:
+         PrintUsage(args[0], i, args[i]);
+      }
+   }
+/*
+ * allocate these strings ourselves so we can free them later if necessary
+ */
+   for (i=0; i < 3*NCOMP; i++)
+   {
+      if (comps[i])
+      {
+         if (!strcmp(comps[i], "default"))
+            comps[i] = NULL;
+         else
+         {
+            sp = malloc(sizeof(char)*(strlen(comps[i])+1));
+            strcpy(sp, comps[i]);
+            comps[i] = sp;
+         }
+      }
+   }
+/*
+ * If the special flag -Ss gcc3 is thrown, force gcc3's use for all kernel
+ * compilers (standard gcc assumed to be gcc4)
+ */
+   if (gcc3)
+   {
+      for (i=0; i < NCOMP; i++)
+      {
+         if (!comps[i] && (i == SMC_ || i == DMC_ || i == SKC_ || i == DKC_))
+            comps[i] = NewStringCopy(gcc3);
+      }
+   }
+   *f2cdefs = fdefs;
+   *ecdefs = cdefs;
+   if (*ptrbits != 32 && *ptrbits != 64)
+      *ptrbits = 0;
+}
+char *GetPtrbitsFlag(enum OSTYPE OS, enum MACHTYPE arch, int ptrbits,
+                     char *comp)
+/*
+ * RETURNS: string forcing setting of ptrbits for gcc
+ */
+{
+   char *sp = "";
+   int i, j, k;
+
+   if (MachIsIA64(arch))
+      return(sp);
+   if (MachIsMIPS(arch))
+      return((ptrbits == 64) ? "-mabi=64" : "-mabi=n32");
+   if (!CompIsGcc(comp))
+   {
+/*
+ *    Add correct 64/32 bit flags for Sun workshop compilers
+ */
+      if (MachIsUS(arch) && CompIsSunWorkshop(comp))
+      {
+         if (ptrbits == 64)
+            sp = (arch == SunUSI || arch == SunUSII) ?
+                 "-xarch=v9" : "-xarch=v9b";
+         else
+            sp = (arch == SunUSI || arch == SunUSII) ?
+                 "-xarch=v8plusa" : "-xarch=v8plusb";
+      }
+      else if (CompIsIBMXL(comp))  /* IBM xl compilers */
+         sp = (ptrbits == 64) ? "-q64" : "-q32";
+      return(sp);
+   }
+   GetGccVers(comp, &k, &j, &k, &k);
+   if ( !(j >= 3 && (OS != OSOSX || j > 3 || !CompIsAppleGcc(comp))) )
+      return(sp);
+   else if (OS == OSAIX)
+      sp = (ptrbits == 64) ? "-maix64" : "-maix32";
+   else if ((MachIsX86(arch) || MachIsPPC(arch) || MachIsUS(arch)) ||
+            arch == IbmPwr7 || arch == IbmPwr6)
+   {
+      if (ptrbits == 64)
+         sp = "-m64";
+       else if (ptrbits == 32)
+         sp = "-m32";
+   }
+   return(sp);
+}
+
+main(int nargs, char **args)
+{
+   enum OSTYPE OS;
+   enum MACHTYPE mach;
+   int h, i, j, k, verb, asmb, nof77, mhz;
+   int vecexts, ISAX;
+   int ptrbits, l2size;
+   int delay=0;  /* change this to come from "special" ints in GetFlags */
+   int THREADS=0;
+   int Use3DNow=0;  /* this needs to come from getflags */
+   int ncpu;
+   int USEDEFL1, USEARCHDEF;
+   char *targ, *sp, *pmake, *flapack;
+   char *comps[3*NCOMP], *comp, *flags, *srcdir, *blddir, *f2cdefs, *cdefs;
+   char *outfile, *smaflags, *dmaflags, *f77lib, *gccflags, *goodgcc;
+   char targarg[256], ln[1024];
+   FILE *fpout;
+   char *adnames[NARDEF] = {"sKERNDEF", "dKERNDEF", "sMMDEF", "dMMDEF"};
+
+   GetFlags(nargs, args, &verb, &OS, (enum ASMDIA*) &asmb, &vecexts, &mach,
+            &mhz, &ptrbits, &ncpu, comps, &gccflags, &outfile, &srcdir,
+            &blddir, &USEDEFL1, &USEARCHDEF, &nof77, &f2cdefs, &cdefs, &pmake,
+            &flapack, &smaflags, &dmaflags, &f77lib, &l2size, &targ);
+   if (ncpu > 1) THREADS = 1;
+   if (!outfile)
+      fpout = stdout;
+   else
+      fpout = fopen(outfile, "w");
+   assert(fpout);
+   assert(srcdir && blddir);
+/*
+ * Update l2size, and set f2cdefs/cdefs if they are null
+ */
+   if (!l2size) l2size = 4*1024*1024;
+   else l2size *= 1024;
+   if (!f2cdefs) f2cdefs = "";
+/*
+ * Append any appended flags, and then we have just compilers and flags
+ */
+   for (i=2*NCOMP; i < 3*NCOMP; i++)
+   {
+      if (comps[i])
+      {
+         comps[i-NCOMP] = NewAppendedString(comps[i-NCOMP], comps[i]);
+         free(comps[i]);
+         comps[i] = NULL;
+      }
+   }
+/*
+ * If any C compiler is unspecified, use it to specify the others
+ * Use DKC preferentially if it is specified
+ */
+   if (comps[DKC_] && comps[NCOMP+DKC_])
+      k = DKC_;
+   else
+   {
+      k = -1;
+      for (i=0; i < F77_; i++)
+      {
+         if (comps[i] && comps[NCOMP+i])
+         {
+            k = i;
+            break;
+         }
+      }
+      if (k < 0)
+      {
+         fprintf(stderr, "Need a valid C compiler and flags\n");
+         exit(100);
+      }
+   }
+   for (i=0; i < F77_; i++)
+   {
+      if (!comps[i])
+         comps[i] = comps[k];
+      if (!comps[NCOMP+i])
+         comps[NCOMP+i] = comps[NCOMP+k];
+   }
+/*
+ * If F77 compiler unspecified or nof77 asserted, set it to ICC for linking
+ */
+   if (!comps[F77_] || nof77)
+   {
+      comps[F77_] = comps[ICC_];
+      comps[NCOMP+F77_] = comps[NCOMP+ICC_];
+   }
+/*
+ * Find dominant ISA extension
+ */
+   ISAX = 0;
+   for (i=1; i < NISA && !ISAX; i++)
+      if (vecexts & (1<<i))
+         ISAX = i;
+
+   fprintf(fpout, "#  ----------------------------\n");
+   fprintf(fpout, "#  Make.inc for ATLAS3.8.4\n");
+   fprintf(fpout, "#  ----------------------------\n\n");
+
+   fprintf(fpout, "#  ----------------------------------\n");
+   fprintf(fpout, "#  Make sure we get the correct shell\n");
+   fprintf(fpout, "#  ----------------------------------\n");
+   fprintf(fpout, "   SHELL = /bin/sh\n\n");
+
+   fprintf(fpout, "#  -------------------------------------------------\n");
+   fprintf(fpout, "#  Name indicating the platform to configure BLAS to\n");
+   fprintf(fpout, "#  -------------------------------------------------\n");
+   fprintf(fpout, "   ARCH = %s", machnam[mach]);
+   fprintf(fpout, "%d", ptrbits);
+   if (ISAX)
+      fprintf(fpout, "%s", ISAXNAM[ISAX]);
+   fprintf(fpout, "\n\n");
+
+   fprintf(fpout, "#  ----------------------------\n");
+   fprintf(fpout, "#  Paths to various directories\n");
+   fprintf(fpout, "#  ----------------------------\n");
+   fprintf(fpout, "   BLDdir = %s\n", blddir);
+   fprintf(fpout, "   SRCdir = %s\n", srcdir);
+   fprintf(fpout, "   INCAdir = $(BLDdir)/include\n");
+   fprintf(fpout, "   INCSdir = $(SRCdir)/include\n");
+   fprintf(fpout, "   BINdir = $(BLDdir)/bin\n");
+   fprintf(fpout, "   LIBdir = $(BLDdir)/lib\n\n");
+   fprintf(fpout, "   SYSdir = $(BLDdir)/tune/sysinfo\n");
+   fprintf(fpout, "   GMMdir = $(BLDdir)/src/blas/gemm\n");
+   fprintf(fpout, "   GMVdir = $(BLDdir)/src/blas/gemv\n");
+   fprintf(fpout, "   GR1dir = $(BLDdir)/src/blas/ger\n");
+   fprintf(fpout, "   L1Bdir = $(BLDdir)/src/blas/level1\n");
+   fprintf(fpout, "   L2Bdir = $(BLDdir)/src/blas/level2\n");
+   fprintf(fpout, "   L3Bdir = $(BLDdir)/src/blas/level3\n");
+   fprintf(fpout, "   TSTdir = $(BLDdir)/src/testing\n");
+   fprintf(fpout, "   AUXdir = $(BLDdir)/src/auxil\n");
+   fprintf(fpout, "   CBLdir = $(BLDdir)/interfaces/blas/C/src\n");
+   fprintf(fpout, "   FBLdir = $(BLDdir)/interfaces/blas/F77/src\n");
+   fprintf(fpout, "   PTSdir = $(BLDdir)/src/pthreads\n");
+   fprintf(fpout, "   MMTdir = $(BLDdir)/tune/blas/gemm\n");
+   fprintf(fpout, "   MVTdir = $(BLDdir)/tune/blas/gemv\n");
+   fprintf(fpout, "   R1Tdir = $(BLDdir)/tune/blas/ger\n");
+   fprintf(fpout, "   L1Tdir = $(BLDdir)/tune/blas/level1\n");
+   fprintf(fpout, "   L3Tdir = $(BLDdir)/tune/blas/level3\n");
+   fprintf(fpout, "\n");
+
+   fprintf(fpout,
+"#  ---------------------------------------------------------------------\n");
+   fprintf(fpout,
+"#  Name and location of scripts for running executables during tuning\n");
+   fprintf(fpout,
+"#  ---------------------------------------------------------------------\n");
+   fprintf(fpout, "   ATLRUN = $(BLDdir)/bin/ATLrun.sh\n");
+   fprintf(fpout, "   ATLFWAIT = $(BLDdir)/bin/xatlas_waitfile\n\n");
+
+   fprintf(fpout, "#  ---------------------\n");
+   fprintf(fpout, "#  Libraries to be built\n");
+   fprintf(fpout, "#  ---------------------\n");
+   fprintf(fpout, "   ATLASlib = $(LIBdir)/libatlas.a\n");
+   fprintf(fpout, "   CBLASlib = $(LIBdir)/libcblas.a\n");
+   fprintf(fpout, "   F77BLASlib = $(LIBdir)/libf77blas.a\n");
+   if (THREADS)
+   {
+      fprintf(fpout, "   PTCBLASlib = $(LIBdir)/libptcblas.a\n");
+      fprintf(fpout, "   PTF77BLASlib = $(LIBdir)/libptf77blas.a\n");
+   }
+   fprintf(fpout, "   LAPACKlib = $(LIBdir)/liblapack.a\n");
+   fprintf(fpout, "   TESTlib = $(LIBdir)/libtstatlas.a\n\n");
+
+   fprintf(fpout, "#  -------------------------------------------\n");
+   fprintf(fpout, "#  Upper bound on largest cache size, in bytes\n");
+   fprintf(fpout, "#  -------------------------------------------\n");
+   fprintf(fpout, "   L2SIZE = -DL2SIZE=%d\n\n", l2size);
+
+   fprintf(fpout, "#  ---------------------------------------\n");
+   fprintf(fpout, "#  Command setting up correct include path\n");
+   fprintf(fpout, "#  ---------------------------------------\n");
+   fprintf(fpout,
+           "   INCLUDES = -I$(INCAdir) -I$(INCSdir) -I$(INCSdir)/contrib\n\n");
+
+   fprintf(fpout, "#  -------------------------------------------\n");
+   fprintf(fpout, "#  Defines for setting up F77/C interoperation\n");
+   fprintf(fpout, "#  -------------------------------------------\n");
+   fprintf(fpout, "   F2CDEFS = %s\n\n", f2cdefs);
+
+   fprintf(fpout, "#  ------------------------------\n");
+   fprintf(fpout, "#  Architecture identifying flags\n");
+   fprintf(fpout, "#  ------------------------------\n");
+   fprintf(fpout, "   ARCHDEFS =");
+   if (OS != OSOther)
+      fprintf(fpout, " -DATL_OS_%s", osnam[OS]);
+   if (mach != MACHOther)
+      fprintf(fpout, " -DATL_ARCH_%s", machnam[mach]);
+   if (mhz)
+      fprintf(fpout, " -DATL_CPUMHZ=%d", mhz);
+   if (OS == OSSunOS)
+      fprintf(fpout, " -DSUN_HR");
+   if (OSIsWin(OS))
+      fprintf(fpout, " -DGCCWIN -DUseClock");
+   for (i=1; i < NISA; i++)
+      if (vecexts & (1<<i))
+         fprintf(fpout, " -DATL_%s", ISAXNAM[i]);
+   if (Use3DNow) fprintf(fpout, " -DATL_3DNowFLOPS");
+   if (ptrbits == 64)
+      fprintf(fpout, " -DATL_USE64BITS");
+   if (mach == IA64Itan || mach == IA64Itan2 )
+      fprintf(fpout, " -DATL_MAXNREG=128");
+   if (asmb != ASM_None) fprintf(fpout, " -DATL_%s", ASMNAM[asmb]);
+   if (mach == IA64Itan2)
+      fprintf(fpout, " -DATL_IntelIccBugs");
+/*
+ * Need up update handling of apple vs. gnu gcc for altivec
+ */
+#if 0
+   if (ISAX == ISA_AV && strstr(CC, "gcc") && strstr(MCC, "gcc") &&
+       !GccIsApple(CC))
+      fprintf(fpout, " -DATL_%s -DATL_AVgcc", ISAXNAM[ISAX]);
+#endif
+   fprintf(fpout, "\n\n");
+
+   fprintf(fpout,
+   "#  -------------------------------------------------------------------\n");
+   fprintf(fpout,
+   "#  NM is the flag required to name a compiled object/executable\n");
+   fprintf(fpout,
+   "#  OJ is the flag required to compile to object rather than executable\n");
+   fprintf(fpout, "#  These flags are used by all compilers.\n");
+   fprintf(fpout,
+   "#  -------------------------------------------------------------------\n");
+   fprintf(fpout, "   NM = -o\n");
+   fprintf(fpout, "   OJ = -c\n\n");
+
+   sprintf(ln, "%s/CONFIG/src/CompMake.txt", srcdir);
+   DisplayFile(ln, fpout, 0);
+   fprintf(fpout, "   CDEFS = $(L2SIZE) $(INCLUDES) $(F2CDEFS) $(ARCHDEFS)");
+   if (cdefs) fprintf(fpout, " %s", cdefs);
+   if (THREADS)
+   {
+      fprintf(fpout, " -DATL_NCPU=%d", ncpu);
+      if (OS == OSFreeBSD) fprintf(fpout, " -D_THREAD_SAFE -D_REENTRANT");
+      if (OS == OSAIX) fprintf(fpout, " -DIBM_PT_ERROR");
+      if (OS == OSIRIX) fprintf(fpout, " -D_POSIX_C_SOURCE=199506L");
+   }
+   if (delay) fprintf(fpout, " -DATL_FOPENDELAY");
+   fprintf(fpout, "\n\n");
+   for (i=0; i < NCOMP; i++)
+   {
+      fprintf(fpout, "   %s = %s\n", COMPNAME[i], comps[i]);
+      if (i == F77_)
+         fprintf(fpout, "   %sFLAGS = %s\n", COMPNAME[i], comps[NCOMP+i]);
+      else if (i == ICC_ || i == XCC_)
+         fprintf(fpout, "   %sFLAGS = $(CDEFS) %s\n",
+                 COMPNAME[i], comps[NCOMP+i]);
+      else /* non-interf comps don't include CDEFS by default (added later) */
+         fprintf(fpout, "   %sFLAGS = %s\n",
+                 COMPNAME[i], comps[NCOMP+i]);
+   }
+   fprintf(fpout, "   SMAFLAGS =");
+   if (smaflags)
+      fprintf(fpout, " %s", smaflags);
+   fprintf(fpout, "\n   DMAFLAGS =");
+   if (dmaflags)
+      fprintf(fpout, " %s", dmaflags);
+   fprintf(fpout, "\n");
+   fprintf(fpout, "   CKC = $(SKC)\n");
+   fprintf(fpout, "   ZKC = $(DKC)\n");
+   fprintf(fpout, "   sKCFLAGS = $(CDEFS) $(SKCFLAGS)\n");
+   fprintf(fpout, "   dKCFLAGS = $(CDEFS) $(DKCFLAGS)\n");
+   fprintf(fpout, "   cKCFLAGS = $(CDEFS) $(SKCFLAGS)\n");
+   fprintf(fpout, "   zKCFLAGS = $(CDEFS) $(DKCFLAGS)\n");
+
+   for (i=0; i < NCOMP; i++)
+   {
+      if (i == XCC_) continue;  /* do not accept cross-compiler */
+      j = strlen(comps[i]);
+      if (j >= 3 && comps[i][j-3] == 'g' &&
+          comps[i][j-2] == 'c' && comps[i][j-1] == 'c')
+         break;
+   }
+   goodgcc = (j < NCOMP) ? comps[j] : "gcc";
+   fprintf(fpout, "   GOODGCC = %s", goodgcc);
+   if (gccflags)
+      fprintf(fpout, " %s", gccflags);
+   GetGccVers(goodgcc, &i, &j, &k, &k);
+   if (OS == OSOSX && j > 3)  /* need bullshit apple annoyance flag */
+      fprintf(fpout, " -force_cpusubtype_ALL");
+   sp = GetPtrbitsFlag(OS, mach, ptrbits, goodgcc);
+   if (strlen(sp) > 0)
+       fprintf(fpout, " %s", sp);
+   fprintf(fpout, "\n");
+
+   fprintf(fpout, "   LDFLAGS =");
+   if (MachIsX86(mach))
+   {
+      if (ptrbits == 32)
+         fprintf(fpout, " -melf_i386");
+      else if (ptrbits == 64)
+         fprintf(fpout, " -melf_x86_64");
+      if (OS == OSFreeBSD)
+         fprintf(fpout, "_fbsd");
+   }
+   fprintf(fpout, "\n   F77SYSLIB = %s\n", f77lib ? f77lib : "");
+   fprintf(fpout, "   BC = $(ICC)\n");
+   fprintf(fpout, "   NCFLAGS = $(ICCFLAGS)\n");
+   fprintf(fpout, "\n   CLINKER = $(ICC)\n   CLINKFLAGS = $(ICCFLAGS)\n");
+   fprintf(fpout, "   FLINKER = $(F77)\n   FLINKFLAGS = $(F77FLAGS)\n");
+   fprintf(fpout, "   FCLINKFLAGS = $(FLINKFLAGS)");
+   if (strstr(comps[F77_], "ifort") && !OSIsWin(OS))
+      fprintf(fpout, " -nofor_main");
+   fprintf(fpout, "\n   ARCHIVER = ar\n");
+   fprintf(fpout, "   ARFLAGS  = r\n");
+/*
+ * JF Mertens says that even x86 OS X still need ranlib for safety
+ */
+   if (OS == OSOSX /* && MachIsPPC(mach) */)
+      fprintf(fpout, "   RANLIB   = ranlib\n\n");
+   else
+      fprintf(fpout, "   RANLIB   = echo\n\n");
+
+   fprintf(fpout, "#  -------------------------------------\n");
+   fprintf(fpout, "#  tar, gzip, gunzip, and parallel make\n");
+   fprintf(fpout, "#  -------------------------------------\n");
+   fprintf(fpout, "   TAR    = tar\n");
+   fprintf(fpout, "   GZIP   = gzip\n");
+   fprintf(fpout, "   GUNZIP = gunzip\n");
+   fprintf(fpout, "   PMAKE  = %s\n\n", pmake ? pmake : "$(MAKE)");
+/*
+ * Need to add libs to GetFlags and update GetSysLib to do this right
+*/
+   fprintf(fpout, "#  ------------------------------------\n");
+   fprintf(fpout, "#  Reference and system libraries\n");
+   fprintf(fpout, "#  ------------------------------------\n");
+   fprintf(fpout, "   BLASlib = \n");
+   fprintf(fpout, "   FBLASlib = \n");
+   fprintf(fpout, "   FLAPACKlib = ");
+   if (flapack) fprintf(fpout, "%s", flapack);
+   fprintf(fpout, "\n");
+   fprintf(fpout, "   SLAPACKlib = \n");
+   if (THREADS)
+      fprintf(fpout, "   LIBS = -lpthread");
+   else
+      fprintf(fpout, "   LIBS =");
+   if (!OSIsWin(OS))
+      fprintf(fpout, " -lm");
+   fprintf(fpout, "\n\n");
+
+   fprintf(fpout,
+   "#  --------------------------------------------------------------------\n");
+   fprintf(fpout,
+   "#  Compiler names for architectural defaults and flags to atlas_build\n");
+   fprintf(fpout,
+   "#  --------------------------------------------------------------------\n");
+   for (i=0; i < NCOMP; i++)
+   {
+      sp = NewStringCopy(COMPNAME[i]);
+      for (j=0; sp[j]; j++)
+        sp[j] = tolower(sp[j]);
+      fprintf(fpout, "   %sD = ", sp);
+      free(sp);
+/*
+ *    Regardless of actual names, use standard gnu compiler names for defs
+ */
+      if (CompIsGcc(comps[i]))
+      {
+         if (i == F77_)
+         {
+            GetGccVers(comps[i], &k, &j, &k, &k);
+            if (j < 4)
+               sp = NewStringCopy("g77");
+            else
+               sp = NewStringCopy("gfortran");
+         }
+         else sp = NewStringCopy("gcc");
+      }
+      else
+      {
+         sp = NameWithoutPath(comps[i]);
+         if (!strncmp(sp, "ATLwin_", 7))
+            sp = NewStringCopy(comps[i]+7);
+      }
+      fprintf(fpout, "%s\n", sp);
+      free(sp);
+   }
+   fprintf(fpout, "   INSTFLAGS = -1 %d -a %d\n\n", USEDEFL1, USEARCHDEF);
+
+   fprintf(fpout, "#  ---------------------------------------\n");
+   fprintf(fpout, "#  Generic targets needed by all makefiles\n");
+   fprintf(fpout, "#  ---------------------------------------\n");
+   fprintf(fpout, "do_it: all\n");
+   if (delay)
+   {
+      fprintf(fpout, "   waitfile = wfdefault\n");
+      fprintf(fpout, "waitfile:\n\tcd $(BINdir) ; make xatlas_waitfile\n");
+      fprintf(fpout, "\t$(ATLFWAIT) -s %d -f $(waitfile)\n", delay);
+   }
+   else fprintf(fpout, "waitfile:\n");
+   if (fpout != stdout && fpout != stderr) fclose(fpout);
+   exit(0);
+}
diff -Nur ATLAS.orig/include/gentoo_libtool.inc ATLAS/include/gentoo_libtool.inc
--- ATLAS.orig/include/gentoo_libtool.inc	1969-12-31 19:00:00.000000000 -0500
+++ ATLAS/include/gentoo_libtool.inc	2012-06-25 18:27:33.000000000 -0400
@@ -0,0 +1,8 @@
+ICC:=$(LIBTOOL) --tag=CC $(ICC)
+SMC:=$(LIBTOOL) --tag=CC $(SMC)
+DMC:=$(LIBTOOL) --tag=CC $(DMC)
+SKC:=$(LIBTOOL) --tag=CC $(SKC)
+DKC:=$(LIBTOOL) --tag=CC $(DKC)
+XCC:=$(LIBTOOL) --tag=CC $(XCC)
+F77:=$(LIBTOOL) --tag=F77 $(F77)
+
diff -Nur ATLAS.orig/makes/Make.aux ATLAS/makes/Make.aux
--- ATLAS.orig/makes/Make.aux	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.aux	2012-06-25 18:27:33.000000000 -0400
@@ -1,6 +1,8 @@
 include Make.inc
 mySRCdir = $(SRCdir)/src/auxil
 
+include $(INCSdir)/gentoo_libtool.inc
+
 ptobj = ATL_ptflushcache.o
 obj = ATL_flushcache.o ATL_cputime.o ATL_walltime.o ATL_xerbla.o ATL_lcm.o \
       ATL_buildinfo.o ATL_ssyreflect.o ATL_sgemoveT.o ATL_sgemove.o \
@@ -118,12 +120,16 @@
 
 ATL_cputime.o : $(SYSdir)/ATL_cputime.o
 	cp $(SYSdir)/ATL_cputime.o ATL_cputime.o
+	ln -sf $(SYSdir)/ATL_cputime.lo ATL_cputime.lo
+	ln -sf $(SYSdir)/.libs/ATL_cputime.o .libs/ATL_cputime.o
 $(SYSdir)/ATL_cputime.o: $(SYSdir)/ATL_cputime.c
 	cd $(SYSdir) ; $(MAKE) ATL_cputime.o
 $(SYSdir)/ATL_cputime.c:
 	cd $(SYSdir) ; $(MAKE) ATL_cputime.o
 ATL_walltime.o : $(SYSdir)/ATL_walltime.o
 	cp $(SYSdir)/ATL_walltime.o ATL_walltime.o
+	ln -sf $(SYSdir)/ATL_walltime.lo ATL_walltime.lo
+	ln -sf $(SYSdir)/.libs/ATL_walltime.o .libs/ATL_walltime.o
 $(SYSdir)/ATL_walltime.o: $(SYSdir)/ATL_walltime.c
 	cd $(SYSdir) ; $(MAKE) ATL_walltime.o
 $(SYSdir)/ATL_walltime.c:
diff -Nur ATLAS.orig/makes/Make.bin ATLAS/makes/Make.bin
--- ATLAS.orig/makes/Make.bin	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.bin	2012-06-25 18:27:33.000000000 -0400
@@ -58,11 +58,11 @@
 	cd $(BLDdir)/src/blas/level3 ; $(MAKE) lib
 	cd $(BLDdir)/src/blas/pklevel3 ; $(MAKE) lib
 	cd $(BLDdir)/src/blas/reference/level3 ; $(MAKE) lib
-	cd $(BLDdir)/src/lapack ; $(MAKE) lib
+#	cd $(BLDdir)/src/lapack ; $(MAKE) lib
 	cd $(BLDdir)/interfaces/blas/C/src ; $(MAKE) all
 	- cd $(BLDdir)/interfaces/blas/F77/src ; $(MAKE) lib
-	cd $(BLDdir)/interfaces/lapack/C/src ; $(MAKE) lib
-	- cd $(BLDdir)/interfaces/lapack/F77/src ; $(MAKE) lib
+#	cd $(BLDdir)/interfaces/lapack/C/src ; $(MAKE) lib
+#	- cd $(BLDdir)/interfaces/lapack/F77/src ; $(MAKE) lib
 
 IPostTune:
 	cd $(L3Tdir) ; $(MAKE) res/atlas_trsmNB.h
@@ -1379,7 +1379,7 @@
 	cd $(L1Bdir) ; $(MAKE) slvl1
 
 slapack :
-	cd $(BLDdir)/src/lapack ; $(MAKE) slib
+#	cd $(BLDdir)/src/lapack ; $(MAKE) slib
 
 xsprintblk : sprintblk.o
 	$(CLINKER) -o $@ sprintblk.o $(ATLASlib)
@@ -2626,7 +2626,7 @@
 	cd $(L1Bdir) ; $(MAKE) dlvl1
 
 dlapack :
-	cd $(BLDdir)/src/lapack ; $(MAKE) dlib
+#	cd $(BLDdir)/src/lapack ; $(MAKE) dlib
 
 xdprintblk : dprintblk.o
 	$(CLINKER) -o $@ dprintblk.o $(ATLASlib)
@@ -3873,7 +3873,7 @@
 	cd $(L1Bdir) ; $(MAKE) clvl1
 
 clapack :
-	cd $(BLDdir)/src/lapack ; $(MAKE) clib
+#	cd $(BLDdir)/src/lapack ; $(MAKE) clib
 
 xcprintblk : cprintblk.o
 	$(CLINKER) -o $@ cprintblk.o $(ATLASlib)
@@ -5120,7 +5120,7 @@
 	cd $(L1Bdir) ; $(MAKE) zlvl1
 
 zlapack :
-	cd $(BLDdir)/src/lapack ; $(MAKE) zlib
+#	cd $(BLDdir)/src/lapack ; $(MAKE) zlib
 
 xzprintblk : zprintblk.o
 	$(CLINKER) -o $@ zprintblk.o $(ATLASlib)
diff -Nur ATLAS.orig/makes/Make.bin.orig ATLAS/makes/Make.bin.orig
--- ATLAS.orig/makes/Make.bin.orig	1969-12-31 19:00:00.000000000 -0500
+++ ATLAS/makes/Make.bin.orig	2011-05-14 13:33:24.000000000 -0400
@@ -0,0 +1,5314 @@
+include Make.inc
+mySRCdir = $(SRCdir)/bin
+
+scalf = $(mflop_l1)
+
+pre=j
+nb = 88
+dmmobj = $(GMMdir)/ATL_dbig_mm.o $(GMMdir)/ATL_dsmall_mm.o \
+         $(GMMdir)/ATL_dsmallK_mm.o
+smmobj = $(GMMdir)/ATL_sbig_mm.o $(GMMdir)/ATL_ssmall_mm.o \
+         $(GMMdir)/ATL_ssmallK_mm.o
+cmmobj = $(GMMdir)/ATL_cbig_mm.o $(GMMdir)/ATL_csmall_mm.o \
+         $(GMMdir)/ATL_csmallK_mm.o
+zmmobj = $(GMMdir)/ATL_zbig_mm.o $(GMMdir)/ATL_zsmall_mm.o \
+         $(GMMdir)/ATL_zsmallK_mm.o
+
+$(SYSdir)/ATL_Xwalltime.o :
+	cd $(SYSdir) ; $(MAKE) ATL_Xwalltime.o
+xatlas_waitfile : atlas_waitfile.o $(SYSdir)/ATL_Xwalltime.o
+	$(XCC) $(XCCFLAGS) -o $@ atlas_waitfile.o $(SYSdir)/ATL_Xwalltime.o
+atlas_waitfile.o : $(mySRCdir)/atlas_waitfile.c
+	$(XCC) $(XCCFLAGS) -c $(mySRCdir)/atlas_waitfile.c
+xatlas_build : xatlas_tee atlas_install.o 
+	$(XCC) $(XCCFLAGS) -o $@ atlas_install.o
+atlas_install.o : $(mySRCdir)/atlas_install.c
+	$(XCC) $(XCCFLAGS) -c $(mySRCdir)/atlas_install.c
+
+xatlas_tee     : atlas_tee.o 
+	$(XCC) $(XCCFLAGS) -o $@ atlas_tee.o
+atlas_tee.o : $(mySRCdir)/atlas_tee.c
+	$(XCC) $(XCCFLAGS) -c $(mySRCdir)/atlas_tee.c
+xccobj  : $(mySRCdir)/ccobj.c
+	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/ccobj.c -DTOPDIR=$(BLDdir)
+xsubstr : $(mySRCdir)/substr.c
+	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/substr.c
+
+
+IBuildRef:
+	cd $(BLDdir)/src/blas/reference/level3 ; $(MAKE) $(pre)lib
+	cd $(BLDdir)/src/blas/reference/level2 ; $(MAKE) $(pre)lib
+
+
+IBuildPtlibs:
+	- rm -f $(INCAdir)/atlas_pthreads.h
+	cd $(BLDdir)/src/auxil/ ; $(MAKE) ptlib
+	cd $(BLDdir)/src/pthreads/blas/level3/ ; $(MAKE) lib
+	cd $(BLDdir)/src/pthreads/misc/ ; $(MAKE) lib
+	cd $(BLDdir)/interfaces/blas/C/src/ ; $(MAKE) ptlib
+	- cd $(BLDdir)/interfaces/blas/F77/src/ ; $(MAKE) ptlib
+
+IBuildLibs:
+	cd $(BLDdir)/src/auxil ; $(MAKE) lib
+	cd $(BLDdir)/src/blas/gemm ; $(MAKE) lib
+	cd $(BLDdir)/src/blas/gemv ; $(MAKE) lib
+	cd $(BLDdir)/src/blas/ger ; $(MAKE) lib
+	cd $(BLDdir)/src/blas/level1 ; $(MAKE) lib
+	cd $(BLDdir)/src/blas/level2 ; $(MAKE) lib
+	cd $(BLDdir)/src/blas/level3 ; $(MAKE) lib
+	cd $(BLDdir)/src/blas/pklevel3 ; $(MAKE) lib
+	cd $(BLDdir)/src/blas/reference/level3 ; $(MAKE) lib
+	cd $(BLDdir)/src/lapack ; $(MAKE) lib
+	cd $(BLDdir)/interfaces/blas/C/src ; $(MAKE) all
+	- cd $(BLDdir)/interfaces/blas/F77/src ; $(MAKE) lib
+	cd $(BLDdir)/interfaces/lapack/C/src ; $(MAKE) lib
+	- cd $(BLDdir)/interfaces/lapack/F77/src ; $(MAKE) lib
+
+IPostTune:
+	cd $(L3Tdir) ; $(MAKE) res/atlas_trsmNB.h
+	cd $(BLDdir)/src/blas/level3 ; $(MAKE) lib
+error_report :
+	cd $(BLDdir) ; $(MAKE) error_report
+
+IBozoL1: IBozoL1.grd
+$(BLDdir)/ARCHS/BOZOL1 : $(SRCdir)/CONFIG/ARCHS/BOZOL1.tgz
+	cd $(BLDdir)/ARCHS ; \
+           $(GUNZIP) -c $(SRCdir)/CONFIG/ARCHS/BOZOL1.tgz | tar xvf -
+	
+IBozoL1.grd : $(BLDdir)/ARCHS/BOZOL1
+	$(MAKE) IForceL1 pre=$(pre) defdir=$(BLDdir)/BOZOL1
+	touch IBozoL1.grd
+IForceL1:
+	- cp -f $(defdir)/*_SUMM $(L1Tdir)/res/.
+
+UntarArch: $(BLDdir)/ARCHS/$(ARCH)
+$(BLDdir)/ARCHS/$(ARCH): $(SRCdir)/CONFIG/ARCHS/$(ARCH).tgz
+	cd $(BLDdir)/ARCHS ; \
+           $(GUNZIP) -c $(SRCdir)/CONFIG/ARCHS/$(ARCH).tgz | tar xvf -
+IArchDef.grd : $(BLDdir)/ARCHS/$(ARCH)
+	cd $(BLDdir)/ARCHS ; \
+           $(MAKE) archput
+	touch IArchDef.grd
+	
+
+
+IStage1:
+	- cd $(AUXdir) ; $(MAKE) -s ATL_buildinfo.o
+	cd $(AUXdir) ; $(MAKE) lib
+	cd $(TSTdir) ; $(MAKE) lib
+	$(MAKE) INSTALL_LOG/L1CacheSize
+	$(MAKE) INSTALL_LOG/sMULADD pre=s
+	$(MAKE) INSTALL_LOG/dMULADD pre=d
+
+IRunMADef :
+	cd $(SYSdir) ; $(MAKE) RunMADef pre=$(pre)
+
+IRunMMDef :
+	cd $(MMTdir) ; $(MAKE) RunMMDef pre=$(pre)
+	cd $(MMTdir) ; ./xemit_mm  -p $(pre) -R -2
+	cd $(MMTdir) ; $(MAKE) install pre=$(pre)
+IKillL1 : force_build
+	rm -f $(SYSdir)/res/L1CacheSize INSTALL_LOG/L1CacheSize
+
+$(SYSdir)/res/L1CacheSize:
+	cd $(SYSdir) ; $(MAKE) res/L1CacheSize
+
+INSTALL_LOG/L1CacheSize : $(SYSdir)/res/L1CacheSize
+	cp $(SYSdir)/res/L1CacheSize INSTALL_LOG/.
+
+IL1Override : force_build
+	rm -f $(SYSdir)/res/L1CacheSize
+	cp $(tnam) $(SYSdir)/res/L1CacheSize
+	rm -f $(tnam)
+
+IKillMuladd : force_build
+	rm -f $(SYSdir)/res/$(pre)MULADD $(SYSdir)/res/$(pre)muladd* \
+              INSTALL_LOG/$(pre)MULADD
+
+$(SYSdir)/res/$(pre)MULADD :
+	cd $(SYSdir) ; $(MAKE) res/$(pre)MULADD pre=$(pre) maxlat=6 mflop=200
+
+INSTALL_LOG/$(pre)MULADD :  $(SYSdir)/res/$(pre)MULADD
+	cp $(SYSdir)/res/$(pre)MULADD INSTALL_LOG/.
+
+$(INCAdir)atlas_$(pre)sysinfo.h :
+	cd $(SYSdir) ; $(MAKE) $(INCAdir)/atlas_$(pre)sysinfo.h
+
+INSTALL_LOG/atlas_$(pre)sysinfo.h : $(INCAdir)/res/atlas_$(pre)sysinfo.h
+	cp $(INCAdir)/atlas_$(pre)sysinfo.h INSTALL_LOG/.
+
+IKillMMres: force_build
+	rm -f $(MMTdir)/res/* INSTALL_LOG/$(pre)MMRES
+
+
+Irbob :
+	rm -f $(tnam)
+	cd $(MMTdir) ; $(MAKE) $(pre)rbob pre=$(pre) muladd=$(muladd) ldc=$(nb) \
+                                 nb=$(nb) mu=$(mu) nu=$(nu) lat=$(lat) ku=$(ku)
+	cp $(MMTdir)/res/C$(pre)NB$(nb)_$(mu)x$(nu)x$(ku)_$(muladd)-$(lat).mflop $(tnam)
+	echo $(muladd) $(lat) $(nb) $(mu) $(nu) $(ku) >> $(tnam)
+Icbob :
+	rm -f $(tnam)
+	cd $(MMTdir) ; $(MAKE) cbob pre=$(pre) muladd=$(muladd) ldc=$(nb) \
+                                 nb=$(nb) mu=$(mu) nu=$(nu) lat=$(lat) ku=$(ku)
+	cp $(MMTdir)/res/C$(pre)NB$(nb)_$(mu)x$(nu)x$(ku)_$(muladd)-$(lat).mflop $(tnam)
+	echo $(muladd) $(lat) $(nb) $(mu) $(nu) $(ku) >> $(tnam)
+
+Imakefch:
+	rm -f $(INCAdir)/atlas_$(pre)sysinfo.h
+	cp $(tnam) $(INCAdir)/atlas_$(pre)sysinfo.h
+	rm -f $(tnam)
+
+INSTALL_LOG/smmstandard : 
+	cd $(MMTdir) ; $(MAKE) rready $(sATLres)
+	cd $(MMTdir) ; $(MAKE) install pre=s typ=SREAL
+	$(MAKE) Irbob tnam=INSTALL_LOG/smmstandard $(sATLres)
+INSTALL_LOG/dmmstandard : 
+	cd $(MMTdir) ; $(MAKE) rready $(dATLres)
+	cd $(MMTdir) ; $(MAKE) install pre=d typ=DREAL
+	$(MAKE) Irbob tnam=INSTALL_LOG/dmmstandard $(dATLres)
+INSTALL_LOG/cmmstandard : 
+	cd $(MMTdir) ; $(MAKE) cready $(cATLres)
+	cd $(MMTdir) ; $(MAKE) install pre=c typ=SCPLX
+	$(MAKE) Icbob tnam=INSTALL_LOG/cmmstandard $(cATLres)
+INSTALL_LOG/zmmstandard : 
+	cd $(MMTdir) ; $(MAKE) cready $(zATLres)
+	cd $(MMTdir) ; $(MAKE) install pre=z typ=DCPLX
+	$(MAKE) Icbob tnam=INSTALL_LOG/zmmstandard $(zATLres)
+
+$(L3Tdir)/res/atlas_$(pre)trsmXover.h:
+	cd $(L3Tdir) ; $(MAKE) res/atlas_$(pre)trsmXover.h pre=$(pre)
+
+INSTALL_LOG/atlas_$(pre)trsmXover.h : $(L3Tdir)/res/atlas_$(pre)trsmXover.h
+	cp $(INCAdir)/atlas_$(pre)trsmXover.h INSTALL_LOG/.
+
+$(MMTdir)/res/$(pre)bestNN_0x0x0 :
+	cd $(MMTdir) ; $(MAKE) res/$(pre)bestNN_0x0x0 pre=$(pre) bnb=$(nb)
+INSTALL_LOG/$(pre)bestNN_0x0x0 : $(MMTdir)/res/$(pre)bestNN_0x0x0
+	cp $(MMTdir)/res/$(pre)bestNN_0x0x0 INSTALL_LOG/.
+$(MMTdir)/res/$(pre)bestNN_0x0x$(nb) :
+	cd $(MMTdir) ; $(MAKE) res/$(pre)bestNN_0x0x$(nb) pre=$(pre) bnb=$(nb)
+INSTALL_LOG/$(pre)bestNN_0x0x$(nb) : $(MMTdir)/res/$(pre)bestNN_0x0x$(nb)
+	cp $(MMTdir)/res/$(pre)bestNN_0x0x$(nb) INSTALL_LOG/.
+$(MMTdir)/res/$(pre)bestNN_$(nb)x$(nb)x$(nb) :
+	cd $(MMTdir) ; $(MAKE) res/$(pre)bestNN_$(nb)x$(nb)x$(nb) pre=$(pre) bnb=$(nb)
+INSTALL_LOG/$(pre)bestNN_$(nb)x$(nb)x$(nb) : $(MMTdir)/res/$(pre)bestNN_$(nb)x$(nb)x$(nb)
+	cp $(MMTdir)/res/$(pre)bestNN_$(nb)x$(nb)x$(nb) INSTALL_LOG/.
+$(MMTdir)/res/$(pre)bestNT_0x0x0 :
+	cd $(MMTdir) ; $(MAKE) res/$(pre)bestNT_0x0x0 pre=$(pre) bnb=$(nb)
+INSTALL_LOG/$(pre)bestNT_0x0x0 : $(MMTdir)/res/$(pre)bestNT_0x0x0
+	cp $(MMTdir)/res/$(pre)bestNT_0x0x0 INSTALL_LOG/.
+$(MMTdir)/res/$(pre)bestNT_0x0x$(nb) :
+	cd $(MMTdir) ; $(MAKE) res/$(pre)bestNT_0x0x$(nb) pre=$(pre) bnb=$(nb)
+INSTALL_LOG/$(pre)bestNT_0x0x$(nb) : $(MMTdir)/res/$(pre)bestNT_0x0x$(nb)
+	cp $(MMTdir)/res/$(pre)bestNT_0x0x$(nb) INSTALL_LOG/.
+$(MMTdir)/res/$(pre)bestNT_$(nb)x$(nb)x$(nb) :
+	cd $(MMTdir) ; $(MAKE) res/$(pre)bestNT_$(nb)x$(nb)x$(nb) pre=$(pre) bnb=$(nb)
+INSTALL_LOG/$(pre)bestNT_$(nb)x$(nb)x$(nb) : $(MMTdir)/res/$(pre)bestNT_$(nb)x$(nb)x$(nb)
+	cp $(MMTdir)/res/$(pre)bestNT_$(nb)x$(nb)x$(nb) INSTALL_LOG/.
+$(MMTdir)/res/$(pre)bestTN_0x0x0 :
+	cd $(MMTdir) ; $(MAKE) res/$(pre)bestTN_0x0x0 pre=$(pre) bnb=$(nb)
+INSTALL_LOG/$(pre)bestTN_0x0x0 : $(MMTdir)/res/$(pre)bestTN_0x0x0
+	cp $(MMTdir)/res/$(pre)bestTN_0x0x0 INSTALL_LOG/.
+$(MMTdir)/res/$(pre)bestTN_0x0x$(nb) :
+	cd $(MMTdir) ; $(MAKE) res/$(pre)bestTN_0x0x$(nb) pre=$(pre) bnb=$(nb)
+INSTALL_LOG/$(pre)bestTN_0x0x$(nb) : $(MMTdir)/res/$(pre)bestTN_0x0x$(nb)
+	cp $(MMTdir)/res/$(pre)bestTN_0x0x$(nb) INSTALL_LOG/.
+$(MMTdir)/res/$(pre)bestTN_$(nb)x$(nb)x$(nb) :
+	cd $(MMTdir) ; $(MAKE) res/$(pre)bestTN_$(nb)x$(nb)x$(nb) pre=$(pre) bnb=$(nb)
+INSTALL_LOG/$(pre)bestTN_$(nb)x$(nb)x$(nb) : $(MMTdir)/res/$(pre)bestTN_$(nb)x$(nb)x$(nb)
+	cp $(MMTdir)/res/$(pre)bestTN_$(nb)x$(nb)x$(nb) INSTALL_LOG/.
+$(MMTdir)/res/$(pre)bestTT_0x0x0 :
+	cd $(MMTdir) ; $(MAKE) res/$(pre)bestTT_0x0x0 pre=$(pre) bnb=$(nb)
+INSTALL_LOG/$(pre)bestTT_0x0x0 : $(MMTdir)/res/$(pre)bestTT_0x0x0
+	cp $(MMTdir)/res/$(pre)bestTT_0x0x0 INSTALL_LOG/.
+$(MMTdir)/res/$(pre)bestTT_0x0x$(nb) :
+	cd $(MMTdir) ; $(MAKE) res/$(pre)bestTT_0x0x$(nb) pre=$(pre) bnb=$(nb)
+INSTALL_LOG/$(pre)bestTT_0x0x$(nb) : $(MMTdir)/res/$(pre)bestTT_0x0x$(nb)
+	cp $(MMTdir)/res/$(pre)bestTT_0x0x$(nb) INSTALL_LOG/.
+$(MMTdir)/res/$(pre)bestTT_$(nb)x$(nb)x$(nb) :
+	cd $(MMTdir) ; $(MAKE) res/$(pre)bestTT_$(nb)x$(nb)x$(nb) pre=$(pre) bnb=$(nb)
+INSTALL_LOG/$(pre)bestTT_$(nb)x$(nb)x$(nb) : $(MMTdir)/res/$(pre)bestTT_$(nb)x$(nb)x$(nb)
+	cp $(MMTdir)/res/$(pre)bestTT_$(nb)x$(nb)x$(nb) INSTALL_LOG/.
+
+$(R1Tdir)/res/$(pre)R1RES : force_build
+	cd $(R1Tdir) ; $(MAKE) res/$(pre)R1RES pre=$(pre)
+INSTALL_LOG/$(pre)R1RES : $(R1Tdir)/res/$(pre)R1RES
+	cp $(R1Tdir)/res/$(pre)R1RES INSTALL_LOG/.
+
+$(MVTdir)/res/$(pre)MVRES : force_build
+	cd $(MVTdir) ; $(MAKE) res/$(pre)MVRES pre=$(pre)
+INSTALL_LOG/$(pre)MVRES : $(MVTdir)/res/$(pre)MVRES
+	cp $(MVTdir)/res/$(pre)MVRES INSTALL_LOG/.
+
+
+$(MMTdir)/res/$(pre)Xover.h :
+	cd $(MMTdir) ; $(MAKE) res/$(pre)Xover.h pre=$(pre) nb=$(nb)
+INSTALL_LOG/$(pre)Xover.h : $(MMTdir)/res/$(pre)Xover.h
+	cp $(MMTdir)/res/$(pre)Xover.h INSTALL_LOG/.
+$(MMTdir)/res/$(pre)NCNB :
+	cd $(MMTdir) ; $(MAKE) res/$(pre)NCNB pre=$(pre) nb=$(nb)
+INSTALL_LOG/$(pre)NCNB : $(MMTdir)/res/$(pre)NCNB
+	cp $(MMTdir)/res/$(pre)NCNB INSTALL_LOG/.
+$(MMTdir)/res/$(pre)MMRES :
+	cd $(MMTdir) ; $(MAKE) res/$(pre)MMRES pre=$(pre) nb=$(nb)
+INSTALL_LOG/$(pre)MMRES : $(MMTdir)/res/$(pre)MMRES
+	cp $(MMTdir)/res/$(pre)MMRES INSTALL_LOG/.
+
+MMinstall :
+	cd $(MMTdir) ; $(MAKE) $(pre)install
+$(MMTdir)/res/atlas_cachedge.h :
+	cd $(MMTdir) ; $(MAKE) res/atlas_cacheedge.h pre=$(pre)
+INSTALL_LOG/atlas_cacheedge.h : $(MMTdir)/res/atlas_cachedge.h
+	cp $(MMTdir)/res/atlas_cacheedge.h $(INCAdir)/.
+	cp $(MMTdir)/res/atlas_cacheedge.h INSTALL_LOG/.
+$(MMTdir)/res/atlas_zdNKB.h :
+	cd $(MMTdir) ; $(MAKE) res/atlas_zdNKB.h
+$(MMTdir)/res/atlas_csNKB.h :
+	cd $(MMTdir) ; $(MAKE) res/atlas_csNKB.h
+INSTALL_LOG/atlas_zdNKB.h : $(MMTdir)/res/atlas_zdNKB.h
+	cp $(MMTdir)/res/atlas_zdNKB.h $(INCAdir)/.
+	cp $(MMTdir)/res/atlas_zdNKB.h INSTALL_LOG/.
+INSTALL_LOG/atlas_csNKB.h : $(MMTdir)/res/atlas_csNKB.h
+	cp $(MMTdir)/res/atlas_csNKB.h $(INCAdir)/.
+	cp $(MMTdir)/res/atlas_csNKB.h INSTALL_LOG/.
+
+Il3lib : force_build
+	cd $(L3Bdir) ; $(MAKE) $(pre)lib
+
+auxlib : force_build
+	cd $(AUXdir) ; $(MAKE) lib
+auxlib_pt : force_build
+	cd $(AUXdir) ; $(MAKE) ptlib
+
+xprint_buildinfo : $(mySRCdir)/print_buildinfo.c
+	$(ICC) $(ICCFLAGS) -o $@ $(mySRCdir)/print_buildinfo.c $(ATLASlib)
+xdlp1000: ftime00.o dlp1000.o dlapack dl3lib dl2lib dl1lib dcblas dfblas
+	$(FLINKER) $(FLINKFLAGS) -o $@ dlp1000.o ftime00.o \
+	$(LAPACKlib) $(CBLASlib) $(F77BLASlib) $(ATLASlib) $(LIBS)
+ftime00.o : $(mySRCdir)/ftime00.c
+	$(ICC) -o $@ -c $(ICCFLAGS) $(mySRCdir)/ftime00.c
+dlp1000.o : $(mySRCdir)/dlp1000.f
+	$(F77) -o $@ -c $(FFLAGS) $(mySRCdir)/dlp1000.f
+
+sanity_test: 
+	rm -f sanity.out
+	$(MAKE) ssanity_test dsanity_test csanity_test zsanity_test
+ptsanity_test:
+	rm -f ptsanity.out
+	$(MAKE) ssanity_test_pt dsanity_test_pt csanity_test_pt zsanity_test_pt
+
+shared: shared.grd
+ptshared: ptshared.grd
+ptshared.grd :
+	cd $(LIBdir) : make ptshared
+shared.grd :
+	cd $(LIBdir) ; make shared
+killshared:
+	rm -f $(LIBdir)/libatlas.so $(LIBdir)/libcatlas.so \
+              shared.grd ptshared.grd
+
+xsl1blastst_pt_dyn : sl1blastst_pt.o sl1lib_pt ststlib_pt PTshared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sl1blastst_pt.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsl2blastst_pt_dyn : sl2blastst_pt.o sl2lib_pt ststlib_pt PTshared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sl2blastst_pt.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsl3blastst_pt_dyn : $(INCAdir)/atlas_type.h sl3blastst_pt.o \
+                   ststlib_pt sl3lib_pt PTshared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sl3blastst_pt.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsinv_all_pt_dyn : xsinvtst_pt xsinvtstF_pt \
+                   xsinvtst_sys_pt xsinvtstF_sys_pt PTshared
+
+xsinvtst_pt_dyn : sinvtst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt PTshared
+	rm -f sinvtst_pt.o
+	$(MAKE) sinvtst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsinvtstF_pt_dyn : slapack ststlib_pt sl3lib_pt sl2lib_pt \
+                   sl1lib_pt scblas_pt sfblas_pt PTshared
+	rm -f sinvtst_pt.o
+	$(MAKE) sinvtst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xstrtri_all_pt_dyn : xstrtritst_pt xstrtritstF_pt \
+                   xstrtritst_sys_pt xstrtritstF_sys_pt PTshared
+
+xstrtritst_pt_dyn : strtritst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt PTshared
+	rm -f strtritst_pt.o
+	$(MAKE) strtritst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xstrtritstF_pt_dyn : slapack ststlib_pt sl3lib_pt sl2lib_pt \
+                   sl1lib_pt scblas_pt sfblas_pt PTshared
+	rm -f strtritst_pt.o
+	$(MAKE) strtritst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsuum_all_pt_dyn : xsuumtst_pt xsuumtstF_pt \
+                   xsuumtst_sys_pt xsuumtstF_sys_pt PTshared
+
+xsuumtst_pt_dyn : suumtst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt PTshared
+	rm -f suumtst_pt.o
+	$(MAKE) suumtst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsuumtstF_pt_dyn : slapack ststlib_pt sl3lib_pt sl2lib_pt \
+                   sl1lib_pt scblas_pt sfblas_pt PTshared
+	rm -f suumtst_pt.o
+	$(MAKE) suumtst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsslv_all_pt_dyn : xsslvtst_pt xsslvtstF_pt \
+                   xsslvtst_sys_pt xsslvtstF_sys_pt PTshared
+
+xsslvtst_pt_dyn : sslvtst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt PTshared
+	rm -f sslvtst_pt.o
+	$(MAKE) sslvtst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsslvtstF_pt_dyn : slapack ststlib_pt sl3lib_pt sl2lib_pt \
+                   sl1lib_pt scblas_pt sfblas_pt PTshared
+	rm -f sslvtst_pt.o
+	$(MAKE) sslvtst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsllt_all_pt_dyn : xsllttst_pt xsllttstF_pt \
+                   xsllttst_sys_pt xsllttstF_sys_pt PTshared
+
+xsllttst_pt_dyn : sllttst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt PTshared
+	rm -f sllttst_pt.o
+	$(MAKE) sllttst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsllttstF_pt_dyn : slapack ststlib_pt sl3lib_pt sl2lib_pt \
+                   sl1lib_pt scblas_pt sfblas_pt PTshared
+	rm -f sllttst_pt.o
+	$(MAKE) sllttst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xslu_all_pt_dyn : xslutst_pt xslutstF_pt \
+                   xslutst_sys_pt xslutstF_sys_pt PTshared
+
+xslutst_pt_dyn : slutst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt PTshared
+	rm -f slutst_pt.o
+	$(MAKE) slutst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xslutstF_pt_dyn : slapack ststlib_pt sl3lib_pt sl2lib_pt \
+                   sl1lib_pt scblas_pt sfblas_pt PTshared
+	rm -f slutst_pt.o
+	$(MAKE) slutst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsmmtst_pt_dyn : $(INCAdir)/atlas_type.h sgemmtst_pt.o smmlib_pt ststlib_pt PTshared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sgemmtst_pt.o \
+              $(TESTlib) $(smmobj) $(LIBdir)/libf77blas.so \
+              $(LIBdir)/libcblas.so $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+
+xsl1blastst_dyn : sl1blastst.o sl1lib ststlib shared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sl1blastst.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsl2blastst_dyn : sl2blastst.o sl2lib ststlib shared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sl2blastst.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsl3blastst_dyn : $(INCAdir)/atlas_type.h sl3blastst.o \
+                   ststlib sl3lib shared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sl3blastst.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsinv_all_dyn : xsinvtst xsinvtstF \
+                   xsinvtst_sys xsinvtstF_sys shared
+
+xsinvtst_dyn : sinvtst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas shared
+	rm -f sinvtst.o
+	$(MAKE) sinvtst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsinvtstF_dyn : slapack ststlib sl3lib sl2lib \
+                   sl1lib scblas sfblas shared
+	rm -f sinvtst.o
+	$(MAKE) sinvtst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xstrtri_all_dyn : xstrtritst xstrtritstF \
+                   xstrtritst_sys xstrtritstF_sys shared
+
+xstrtritst_dyn : strtritst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas shared
+	rm -f strtritst.o
+	$(MAKE) strtritst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xstrtritstF_dyn : slapack ststlib sl3lib sl2lib \
+                   sl1lib scblas sfblas shared
+	rm -f strtritst.o
+	$(MAKE) strtritst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsuum_all_dyn : xsuumtst xsuumtstF \
+                   xsuumtst_sys xsuumtstF_sys shared
+
+xsuumtst_dyn : suumtst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas shared
+	rm -f suumtst.o
+	$(MAKE) suumtst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsuumtstF_dyn : slapack ststlib sl3lib sl2lib \
+                   sl1lib scblas sfblas shared
+	rm -f suumtst.o
+	$(MAKE) suumtst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsslv_all_dyn : xsslvtst xsslvtstF \
+                   xsslvtst_sys xsslvtstF_sys shared
+
+xsslvtst_dyn : sslvtst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas shared
+	rm -f sslvtst.o
+	$(MAKE) sslvtst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsslvtstF_dyn : slapack ststlib sl3lib sl2lib \
+                   sl1lib scblas sfblas shared
+	rm -f sslvtst.o
+	$(MAKE) sslvtst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsllt_all_dyn : xsllttst xsllttstF \
+                   xsllttst_sys xsllttstF_sys shared
+
+xsllttst_dyn : sllttst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas shared
+	rm -f sllttst.o
+	$(MAKE) sllttst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsllttstF_dyn : slapack ststlib sl3lib sl2lib \
+                   sl1lib scblas sfblas shared
+	rm -f sllttst.o
+	$(MAKE) sllttst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xslu_all_dyn : xslutst xslutstF \
+                   xslutst_sys xslutstF_sys shared
+
+xslutst_dyn : slutst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas shared
+	rm -f slutst.o
+	$(MAKE) slutst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xslutstF_dyn : slapack ststlib sl3lib sl2lib \
+                   sl1lib scblas sfblas shared
+	rm -f slutst.o
+	$(MAKE) slutst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xsmmtst_dyn : $(INCAdir)/atlas_type.h sgemmtst.o smmlib ststlib shared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sgemmtst.o \
+              $(TESTlib) $(smmobj) $(LIBdir)/libf77blas.so \
+              $(LIBdir)/libcblas.so $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+
+
+xsl1blastst_mike : sl1blastst_mike.o sl1lib_pt ststlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sl1blastst_mike.o $(MIKElib) \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xsl2blastst_mike : sl2blastst_pt.o sl2lib_pt ststlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sl2blastst_mike.o $(MIKElib) \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xsl3blastst_mike : $(INCAdir)/atlas_type.h sl3blastst_pt.o \
+                   ststlib_pt sl3lib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sl3blastst_mike.o $(MIKElib) \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+
+xsl1blastst_pt : sl1blastst_pt.o sl1lib_pt ststlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sl1blastst_pt.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xsl2blastst_pt : sl2blastst_pt.o sl2lib_pt ststlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sl2blastst_pt.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xsl3blastst_pt : $(INCAdir)/atlas_type.h sl3blastst_pt.o \
+                   ststlib_pt sl3lib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sl3blastst_pt.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+ssanity_test_pt: xsinvtst_pt xsslvtst_pt xstrtritst_pt xsuumtst_pt
+	$(ATLRUN) $(BINdir) xsslvtst_pt -n 167 -r 83 -O 2 c r \
+                  >> $(BINdir)/ptsanity.out
+	$(ATLRUN) $(BINdir) xsslvtst_pt -n 167 -r 83 -O 2 c r -U 2 u l \
+                  >> $(BINdir)/ptsanity.out
+	$(ATLRUN) $(BINdir) xstrtritst_pt -n 167 -O 2 c r -U 2 u l \
+                  -D 2 n u >> $(BINdir)/ptsanity.out
+	$(ATLRUN) $(BINdir) xsuumtst_pt -n 167 -O 2 c r -U 2 u l \
+                  >> $(BINdir)/ptsanity.out
+xsinv_all_pt : xsinvtst_pt xsinvtstF_pt \
+                   xsinvtst_sb_pt xsinvtstF_sys_pt \
+                   xsinvtst_sb_pt xsinvtstF_sl_sb_pt \
+                   xsinvtstF_fl_ab_pt xsinvtstF_sl_ab_pt \
+                   xsinvtstF_fl_fb_pt xsinvtstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xsinvtst_pt : sinvtst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xsinvtstF_pt : sinvtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xsinvtst_sb_pt : sinvtst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xsinvtstF_sb_pt : sinvtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xsinvtstF_sl_sb_pt : sinvtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xsinvtstF_sl_ab_pt : sinvtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xsinvtstF_fl_ab_pt : sinvtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xsinvtstF_fl_sb_pt : sinvtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xsinvtstF_fl_fb_pt : sinvtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xstrtri_all_pt : xstrtritst_pt xstrtritstF_pt \
+                   xstrtritst_sb_pt xstrtritstF_sys_pt \
+                   xstrtritst_sb_pt xstrtritstF_sl_sb_pt \
+                   xstrtritstF_fl_ab_pt xstrtritstF_sl_ab_pt \
+                   xstrtritstF_fl_fb_pt xstrtritstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xstrtritst_pt : strtritst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xstrtritstF_pt : strtritstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xstrtritst_sb_pt : strtritst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xstrtritstF_sb_pt : strtritstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xstrtritstF_sl_sb_pt : strtritstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xstrtritstF_sl_ab_pt : strtritstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xstrtritstF_fl_ab_pt : strtritstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xstrtritstF_fl_sb_pt : strtritstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xstrtritstF_fl_fb_pt : strtritstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xsuum_all_pt : xsuumtst_pt xsuumtstF_pt \
+                   xsuumtst_sb_pt xsuumtstF_sys_pt \
+                   xsuumtst_sb_pt xsuumtstF_sl_sb_pt \
+                   xsuumtstF_fl_ab_pt xsuumtstF_sl_ab_pt \
+                   xsuumtstF_fl_fb_pt xsuumtstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xsuumtst_pt : suumtst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xsuumtstF_pt : suumtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xsuumtst_sb_pt : suumtst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xsuumtstF_sb_pt : suumtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xsuumtstF_sl_sb_pt : suumtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xsuumtstF_sl_ab_pt : suumtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xsuumtstF_fl_ab_pt : suumtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xsuumtstF_fl_sb_pt : suumtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xsuumtstF_fl_fb_pt : suumtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xsslv_all_pt : xsslvtst_pt xsslvtstF_pt \
+                   xsslvtst_sb_pt xsslvtstF_sys_pt \
+                   xsslvtst_sb_pt xsslvtstF_sl_sb_pt \
+                   xsslvtstF_fl_ab_pt xsslvtstF_sl_ab_pt \
+                   xsslvtstF_fl_fb_pt xsslvtstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xsslvtst_pt : sslvtst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xsslvtstF_pt : sslvtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xsslvtst_sb_pt : sslvtst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xsslvtstF_sb_pt : sslvtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xsslvtstF_sl_sb_pt : sslvtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xsslvtstF_sl_ab_pt : sslvtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xsslvtstF_fl_ab_pt : sslvtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xsslvtstF_fl_sb_pt : sslvtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xsslvtstF_fl_fb_pt : sslvtstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xsllt_all_pt : xsllttst_pt xsllttstF_pt \
+                   xsllttst_sb_pt xsllttstF_sys_pt \
+                   xsllttst_sb_pt xsllttstF_sl_sb_pt \
+                   xsllttstF_fl_ab_pt xsllttstF_sl_ab_pt \
+                   xsllttstF_fl_fb_pt xsllttstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xsllttst_pt : sllttst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xsllttstF_pt : sllttstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xsllttst_sb_pt : sllttst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xsllttstF_sb_pt : sllttstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xsllttstF_sl_sb_pt : sllttstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xsllttstF_sl_ab_pt : sllttstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xsllttstF_fl_ab_pt : sllttstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xsllttstF_fl_sb_pt : sllttstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xsllttstF_fl_fb_pt : sllttstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xslu_all_pt : xslutst_pt xslutstF_pt \
+                   xslutst_sb_pt xslutstF_sys_pt \
+                   xslutst_sb_pt xslutstF_sl_sb_pt \
+                   xslutstF_fl_ab_pt xslutstF_sl_ab_pt \
+                   xslutstF_fl_fb_pt xslutstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xslutst_pt : slutst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xslutstF_pt : slutstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xslutst_sb_pt : slutst_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xslutstF_sb_pt : slutstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xslutstF_sl_sb_pt : slutstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xslutstF_sl_ab_pt : slutstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xslutstF_fl_ab_pt : slutstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xslutstF_fl_sb_pt : slutstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xslutstF_fl_fb_pt : slutstF_pt.o slapack ststlib_pt sl3lib_pt \
+                  sl2lib_pt sl1lib_pt scblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xsmmtst_pt : $(INCAdir)/atlas_type.h sgemmtst_pt.o smmlib_pt ststlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sgemmtst_pt.o \
+              $(TESTlib) $(BLASlib) $(smmobj) $(ATLASlib) $(LIBS)
+
+xsl1blastst : sl1blastst.o sl1lib ststlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sl1blastst.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xsl2blastst : sl2blastst.o sl2lib ststlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sl2blastst.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xsl3blastst : $(INCAdir)/atlas_type.h sl3blastst.o \
+                   ststlib sl3lib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sl3blastst.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+ssanity_test: xsinvtst xsslvtst xstrtritst xsuumtst
+	$(ATLRUN) $(BINdir) xsslvtst -n 167 -r 83 -O 2 c r \
+                  >> $(BINdir)/sanity.out
+	$(ATLRUN) $(BINdir) xsslvtst -n 167 -r 83 -O 2 c r -U 2 u l \
+                  >> $(BINdir)/sanity.out
+	$(ATLRUN) $(BINdir) xstrtritst -n 167 -O 2 c r -U 2 u l \
+                  -D 2 n u >> $(BINdir)/sanity.out
+	$(ATLRUN) $(BINdir) xsuumtst -n 167 -O 2 c r -U 2 u l \
+                  >> $(BINdir)/sanity.out
+xsinv_all : xsinvtst xsinvtstF \
+                   xsinvtst_sb xsinvtstF_sys \
+                   xsinvtst_sb xsinvtstF_sl_sb \
+                   xsinvtstF_fl_ab xsinvtstF_sl_ab \
+                   xsinvtstF_fl_fb xsinvtstF_fl_sb
+
+# All ATLAS libs, C interface only
+xsinvtst : sinvtst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xsinvtstF : sinvtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xsinvtst_sb : sinvtst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xsinvtstF_sb : sinvtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xsinvtstF_sl_sb : sinvtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xsinvtstF_sl_ab : sinvtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xsinvtstF_fl_ab : sinvtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xsinvtstF_fl_sb : sinvtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xsinvtstF_fl_fb : sinvtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xstrtri_all : xstrtritst xstrtritstF \
+                   xstrtritst_sb xstrtritstF_sys \
+                   xstrtritst_sb xstrtritstF_sl_sb \
+                   xstrtritstF_fl_ab xstrtritstF_sl_ab \
+                   xstrtritstF_fl_fb xstrtritstF_fl_sb
+
+# All ATLAS libs, C interface only
+xstrtritst : strtritst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xstrtritstF : strtritstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xstrtritst_sb : strtritst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xstrtritstF_sb : strtritstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xstrtritstF_sl_sb : strtritstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xstrtritstF_sl_ab : strtritstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xstrtritstF_fl_ab : strtritstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xstrtritstF_fl_sb : strtritstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xstrtritstF_fl_fb : strtritstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ strtritstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xsuum_all : xsuumtst xsuumtstF \
+                   xsuumtst_sb xsuumtstF_sys \
+                   xsuumtst_sb xsuumtstF_sl_sb \
+                   xsuumtstF_fl_ab xsuumtstF_sl_ab \
+                   xsuumtstF_fl_fb xsuumtstF_fl_sb
+
+# All ATLAS libs, C interface only
+xsuumtst : suumtst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xsuumtstF : suumtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xsuumtst_sb : suumtst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xsuumtstF_sb : suumtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xsuumtstF_sl_sb : suumtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xsuumtstF_sl_ab : suumtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xsuumtstF_fl_ab : suumtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xsuumtstF_fl_sb : suumtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xsuumtstF_fl_fb : suumtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ suumtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xsslv_all : xsslvtst xsslvtstF \
+                   xsslvtst_sb xsslvtstF_sys \
+                   xsslvtst_sb xsslvtstF_sl_sb \
+                   xsslvtstF_fl_ab xsslvtstF_sl_ab \
+                   xsslvtstF_fl_fb xsslvtstF_fl_sb
+
+# All ATLAS libs, C interface only
+xsslvtst : sslvtst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xsslvtstF : sslvtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xsslvtst_sb : sslvtst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xsslvtstF_sb : sslvtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xsslvtstF_sl_sb : sslvtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xsslvtstF_sl_ab : sslvtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xsslvtstF_fl_ab : sslvtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xsslvtstF_fl_sb : sslvtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xsslvtstF_fl_fb : sslvtstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sslvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xsllt_all : xsllttst xsllttstF \
+                   xsllttst_sb xsllttstF_sys \
+                   xsllttst_sb xsllttstF_sl_sb \
+                   xsllttstF_fl_ab xsllttstF_sl_ab \
+                   xsllttstF_fl_fb xsllttstF_fl_sb
+
+# All ATLAS libs, C interface only
+xsllttst : sllttst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xsllttstF : sllttstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xsllttst_sb : sllttst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xsllttstF_sb : sllttstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xsllttstF_sl_sb : sllttstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xsllttstF_sl_ab : sllttstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xsllttstF_fl_ab : sllttstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xsllttstF_fl_sb : sllttstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xsllttstF_fl_fb : sllttstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sllttstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xslu_all : xslutst xslutstF \
+                   xslutst_sb xslutstF_sys \
+                   xslutst_sb xslutstF_sl_sb \
+                   xslutstF_fl_ab xslutstF_sl_ab \
+                   xslutstF_fl_fb xslutstF_fl_sb
+
+# All ATLAS libs, C interface only
+xslutst : slutst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xslutstF : slutstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xslutst_sb : slutst.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xslutstF_sb : slutstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xslutstF_sl_sb : slutstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xslutstF_sl_ab : slutstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xslutstF_fl_ab : slutstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xslutstF_fl_sb : slutstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xslutstF_fl_fb : slutstF.o slapack ststlib sl3lib \
+                  sl2lib sl1lib scblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ slutstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xsmmtst : $(INCAdir)/atlas_type.h sgemmtst.o smmlib ststlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sgemmtst.o \
+              $(TESTlib) $(BLASlib) $(smmobj) $(ATLASlib) $(LIBS)
+
+xsmmtst_big : $(INCAdir)/atlas_type.h sgemmtst_big.o smmlib \
+              ststlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sgemmtst_big.o \
+                   $(TESTlib) $(BLASlib) $(smmobj) $(ATLASlib) $(LIBS)
+xsgpmmtst : $(INCAdir)/atlas_type.h sgpmmtst.o smmlib ststlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ sgpmmtst.o \
+              $(TESTlib) $(BLASlib) $(smmobj) $(ATLASlib) $(LIBS)
+sgpmmtst.o : $(mySRCdir)/gpmmtst.c $(INCSdir)/atlas_misc.h $(INCAdir)/smm.h \
+                  $(INCSdir)/atlas_lvl3.h $(INCSdir)/atlas_pkblas.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSREAL $(mySRCdir)/gpmmtst.c
+	
+ststlib_pt : ststlib
+ststlib :
+	cd $(TSTdir) ; $(MAKE) slib
+
+sfblas_pt : sfblaslib_pt
+sfblaslib_pt :
+	cd $(FBLdir) ; $(MAKE) sptlib
+sfblas : sfblaslib
+sfblaslib :
+	cd $(FBLdir) ; $(MAKE) slib
+scblas_pt : scblaslib_pt
+scblaslib_pt :
+	cd $(CBLdir) ; $(MAKE) sptlib
+scblas : scblaslib
+scblaslib :
+	cd $(CBLdir) ; $(MAKE) slib
+
+smmlib_pt : auxlib_pt
+	cd $(GMMdir) ; $(MAKE) slib
+smmlib : auxlib
+	cd $(GMMdir) ; $(MAKE) slib
+spklib : auxlib
+	cd $(BLDdir)/src/blas/pklevel3 ; $(MAKE) slib
+
+sl2lib_pt : sl2lib
+	cd $(PTSdir)/blas/level2 ; $(MAKE) slib
+sl2lib : sl1lib auxlib
+	cd $(GMVdir) ; $(MAKE) slib
+	cd $(GR1dir) ; $(MAKE) slib
+	cd $(L2Bdir) ; $(MAKE) slib
+
+sl3lib_pt : sl3lib smmlib_pt
+	cd $(PTSdir)/blas/level3 ; $(MAKE) slib
+sl3lib : smmlib
+	cd $(L3Bdir) ; $(MAKE) slib
+
+sl1lib_pt : auxlib_pt sl1lib
+	cd $(PTSdir)/blas/level1 ; $(MAKE) slib
+sl1lib : auxlib
+	cd $(L1Bdir) ; $(MAKE) slvl1
+
+slapack :
+	cd $(BLDdir)/src/lapack ; $(MAKE) slib
+
+xsprintblk : sprintblk.o
+	$(CLINKER) -o $@ sprintblk.o $(ATLASlib)
+sprintblk.o : $(INCSdir)/atlas_mv.h $(INCSdir)/atlas_r1.h \
+                   $(INCAdir)/smm.h $(mySRCdir)/printblk.c
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSREAL $(mySRCdir)/printblk.c
+
+sl1blastst_mike.o : $(mySRCdir)/l1blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level1.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSREAL -DATL_USEPTHREADS -DATL_MIKE $(mySRCdir)/l1blastst.c
+sl2blastst_mike.o : $(mySRCdir)/l2blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level2.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSREAL -DATL_USEPTHREADS -DATL_MIKE $(mySRCdir)/l2blastst.c
+
+sl3blastst_mike.o : $(mySRCdir)/l3blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DATL_USEPTHREADS -DATL_MIKE -DSREAL $(mySRCdir)/l3blastst.c
+sinvtst_mike.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DSREAL $(mySRCdir)/invtst.c
+sinvtstF_mike.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DSREAL $(mySRCdir)/invtst.c
+strtritst_mike.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DSREAL $(mySRCdir)/trtritst.c
+strtritstF_mike.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DSREAL $(mySRCdir)/trtritst.c
+sslvtst_mike.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DSREAL $(mySRCdir)/slvtst.c
+sslvtstF_mike.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DSREAL $(mySRCdir)/slvtst.c
+slutst_mike.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DSREAL $(mySRCdir)/lutst.c
+slutstF_mike.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DSREAL $(mySRCdir)/lutst.c
+sllttst_mike.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DSREAL $(mySRCdir)/llttst.c
+sllttstF_mike.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DSREAL $(mySRCdir)/llttst.c
+suumtst_mike.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DSREAL $(mySRCdir)/uumtst.c
+suumtstF_mike.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DSREAL $(mySRCdir)/uumtst.c
+
+sscaltst_mike.o : $(mySRCdir)/scaltst.c $(INCSdir)/atlas_misc.h \
+                  $(INCSdir)/atlas_f77.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATL_USEPTHREADS -DATL_MIKE -DSREAL $(mySRCdir)/scaltst.c
+
+sgemmtst_mike.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
+                  $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATL_USEPTHREADS -DATL_MIKE -DSREAL $(mySRCdir)/gemmtst.c
+
+sl1blastst_pt.o : $(mySRCdir)/l1blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level1.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSREAL -DATL_USEPTHREADS $(mySRCdir)/l1blastst.c
+sl2blastst_pt.o : $(mySRCdir)/l2blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level2.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSREAL -DATL_USEPTHREADS $(mySRCdir)/l2blastst.c
+
+sl3blastst_pt.o : $(mySRCdir)/l3blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DATL_USEPTHREADS -DSREAL $(mySRCdir)/l3blastst.c
+sinvtst_pt.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DSREAL $(mySRCdir)/invtst.c
+sinvtstF_pt.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DSREAL $(mySRCdir)/invtst.c
+strtritst_pt.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DSREAL $(mySRCdir)/trtritst.c
+strtritstF_pt.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DSREAL $(mySRCdir)/trtritst.c
+sslvtst_pt.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DSREAL $(mySRCdir)/slvtst.c
+sslvtstF_pt.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DSREAL $(mySRCdir)/slvtst.c
+slutst_pt.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DSREAL $(mySRCdir)/lutst.c
+slutstF_pt.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DSREAL $(mySRCdir)/lutst.c
+sllttst_pt.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DSREAL $(mySRCdir)/llttst.c
+sllttstF_pt.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DSREAL $(mySRCdir)/llttst.c
+suumtst_pt.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DSREAL $(mySRCdir)/uumtst.c
+suumtstF_pt.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DSREAL $(mySRCdir)/uumtst.c
+
+sscaltst_pt.o : $(mySRCdir)/scaltst.c $(INCSdir)/atlas_misc.h \
+                  $(INCSdir)/atlas_f77.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATL_USEPTHREADS -DSREAL $(mySRCdir)/scaltst.c
+
+sgemmtst_pt.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
+                  $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATL_USEPTHREADS -DSREAL $(mySRCdir)/gemmtst.c
+
+sl1blastst.o : $(mySRCdir)/l1blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level1.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSREAL  $(mySRCdir)/l1blastst.c
+sl2blastst.o : $(mySRCdir)/l2blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level2.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSREAL  $(mySRCdir)/l2blastst.c
+
+sl3blastst.o : $(mySRCdir)/l3blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT  -DSREAL $(mySRCdir)/l3blastst.c
+sinvtst.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DSREAL $(mySRCdir)/invtst.c
+sinvtstF.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DSREAL $(mySRCdir)/invtst.c
+strtritst.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DSREAL $(mySRCdir)/trtritst.c
+strtritstF.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DSREAL $(mySRCdir)/trtritst.c
+sslvtst.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DSREAL $(mySRCdir)/slvtst.c
+sslvtstF.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DSREAL $(mySRCdir)/slvtst.c
+slutst.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DSREAL $(mySRCdir)/lutst.c
+slutstF.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DSREAL $(mySRCdir)/lutst.c
+sllttst.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DSREAL $(mySRCdir)/llttst.c
+sllttstF.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DSREAL $(mySRCdir)/llttst.c
+suumtst.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DSREAL $(mySRCdir)/uumtst.c
+suumtstF.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DSREAL $(mySRCdir)/uumtst.c
+
+sscaltst.o : $(mySRCdir)/scaltst.c $(INCSdir)/atlas_misc.h \
+                  $(INCSdir)/atlas_f77.h 
+	$(ICC) -o $@ -c $(ICCFLAGS)  -DSREAL $(mySRCdir)/scaltst.c
+
+sgemmtst.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
+                  $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS)  -DSREAL $(mySRCdir)/gemmtst.c
+
+sgemmtst_big.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
+                 $(INCAdir)/smm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSREAL -DTRUST_BIG $(mySRCdir)/gemmtst.c
+xdl1blastst_pt_dyn : dl1blastst_pt.o dl1lib_pt dtstlib_pt PTshared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dl1blastst_pt.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdl2blastst_pt_dyn : dl2blastst_pt.o dl2lib_pt dtstlib_pt PTshared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dl2blastst_pt.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdl3blastst_pt_dyn : $(INCAdir)/atlas_type.h dl3blastst_pt.o \
+                   dtstlib_pt dl3lib_pt PTshared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dl3blastst_pt.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdinv_all_pt_dyn : xdinvtst_pt xdinvtstF_pt \
+                   xdinvtst_sys_pt xdinvtstF_sys_pt PTshared
+
+xdinvtst_pt_dyn : dinvtst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt PTshared
+	rm -f dinvtst_pt.o
+	$(MAKE) dinvtst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdinvtstF_pt_dyn : dlapack dtstlib_pt dl3lib_pt dl2lib_pt \
+                   dl1lib_pt dcblas_pt dfblas_pt PTshared
+	rm -f dinvtst_pt.o
+	$(MAKE) dinvtst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdtrtri_all_pt_dyn : xdtrtritst_pt xdtrtritstF_pt \
+                   xdtrtritst_sys_pt xdtrtritstF_sys_pt PTshared
+
+xdtrtritst_pt_dyn : dtrtritst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt PTshared
+	rm -f dtrtritst_pt.o
+	$(MAKE) dtrtritst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdtrtritstF_pt_dyn : dlapack dtstlib_pt dl3lib_pt dl2lib_pt \
+                   dl1lib_pt dcblas_pt dfblas_pt PTshared
+	rm -f dtrtritst_pt.o
+	$(MAKE) dtrtritst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xduum_all_pt_dyn : xduumtst_pt xduumtstF_pt \
+                   xduumtst_sys_pt xduumtstF_sys_pt PTshared
+
+xduumtst_pt_dyn : duumtst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt PTshared
+	rm -f duumtst_pt.o
+	$(MAKE) duumtst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xduumtstF_pt_dyn : dlapack dtstlib_pt dl3lib_pt dl2lib_pt \
+                   dl1lib_pt dcblas_pt dfblas_pt PTshared
+	rm -f duumtst_pt.o
+	$(MAKE) duumtst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdslv_all_pt_dyn : xdslvtst_pt xdslvtstF_pt \
+                   xdslvtst_sys_pt xdslvtstF_sys_pt PTshared
+
+xdslvtst_pt_dyn : dslvtst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt PTshared
+	rm -f dslvtst_pt.o
+	$(MAKE) dslvtst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdslvtstF_pt_dyn : dlapack dtstlib_pt dl3lib_pt dl2lib_pt \
+                   dl1lib_pt dcblas_pt dfblas_pt PTshared
+	rm -f dslvtst_pt.o
+	$(MAKE) dslvtst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdllt_all_pt_dyn : xdllttst_pt xdllttstF_pt \
+                   xdllttst_sys_pt xdllttstF_sys_pt PTshared
+
+xdllttst_pt_dyn : dllttst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt PTshared
+	rm -f dllttst_pt.o
+	$(MAKE) dllttst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdllttstF_pt_dyn : dlapack dtstlib_pt dl3lib_pt dl2lib_pt \
+                   dl1lib_pt dcblas_pt dfblas_pt PTshared
+	rm -f dllttst_pt.o
+	$(MAKE) dllttst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdlu_all_pt_dyn : xdlutst_pt xdlutstF_pt \
+                   xdlutst_sys_pt xdlutstF_sys_pt PTshared
+
+xdlutst_pt_dyn : dlutst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt PTshared
+	rm -f dlutst_pt.o
+	$(MAKE) dlutst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdlutstF_pt_dyn : dlapack dtstlib_pt dl3lib_pt dl2lib_pt \
+                   dl1lib_pt dcblas_pt dfblas_pt PTshared
+	rm -f dlutst_pt.o
+	$(MAKE) dlutst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdmmtst_pt_dyn : $(INCAdir)/atlas_type.h dgemmtst_pt.o dmmlib_pt dtstlib_pt PTshared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dgemmtst_pt.o \
+              $(TESTlib) $(dmmobj) $(LIBdir)/libf77blas.so \
+              $(LIBdir)/libcblas.so $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+
+xdl1blastst_dyn : dl1blastst.o dl1lib dtstlib shared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dl1blastst.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdl2blastst_dyn : dl2blastst.o dl2lib dtstlib shared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dl2blastst.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdl3blastst_dyn : $(INCAdir)/atlas_type.h dl3blastst.o \
+                   dtstlib dl3lib shared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dl3blastst.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdinv_all_dyn : xdinvtst xdinvtstF \
+                   xdinvtst_sys xdinvtstF_sys shared
+
+xdinvtst_dyn : dinvtst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas shared
+	rm -f dinvtst.o
+	$(MAKE) dinvtst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdinvtstF_dyn : dlapack dtstlib dl3lib dl2lib \
+                   dl1lib dcblas dfblas shared
+	rm -f dinvtst.o
+	$(MAKE) dinvtst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdtrtri_all_dyn : xdtrtritst xdtrtritstF \
+                   xdtrtritst_sys xdtrtritstF_sys shared
+
+xdtrtritst_dyn : dtrtritst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas shared
+	rm -f dtrtritst.o
+	$(MAKE) dtrtritst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdtrtritstF_dyn : dlapack dtstlib dl3lib dl2lib \
+                   dl1lib dcblas dfblas shared
+	rm -f dtrtritst.o
+	$(MAKE) dtrtritst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xduum_all_dyn : xduumtst xduumtstF \
+                   xduumtst_sys xduumtstF_sys shared
+
+xduumtst_dyn : duumtst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas shared
+	rm -f duumtst.o
+	$(MAKE) duumtst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xduumtstF_dyn : dlapack dtstlib dl3lib dl2lib \
+                   dl1lib dcblas dfblas shared
+	rm -f duumtst.o
+	$(MAKE) duumtst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdslv_all_dyn : xdslvtst xdslvtstF \
+                   xdslvtst_sys xdslvtstF_sys shared
+
+xdslvtst_dyn : dslvtst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas shared
+	rm -f dslvtst.o
+	$(MAKE) dslvtst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdslvtstF_dyn : dlapack dtstlib dl3lib dl2lib \
+                   dl1lib dcblas dfblas shared
+	rm -f dslvtst.o
+	$(MAKE) dslvtst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdllt_all_dyn : xdllttst xdllttstF \
+                   xdllttst_sys xdllttstF_sys shared
+
+xdllttst_dyn : dllttst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas shared
+	rm -f dllttst.o
+	$(MAKE) dllttst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdllttstF_dyn : dlapack dtstlib dl3lib dl2lib \
+                   dl1lib dcblas dfblas shared
+	rm -f dllttst.o
+	$(MAKE) dllttst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdlu_all_dyn : xdlutst xdlutstF \
+                   xdlutst_sys xdlutstF_sys shared
+
+xdlutst_dyn : dlutst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas shared
+	rm -f dlutst.o
+	$(MAKE) dlutst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdlutstF_dyn : dlapack dtstlib dl3lib dl2lib \
+                   dl1lib dcblas dfblas shared
+	rm -f dlutst.o
+	$(MAKE) dlutst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xdmmtst_dyn : $(INCAdir)/atlas_type.h dgemmtst.o dmmlib dtstlib shared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dgemmtst.o \
+              $(TESTlib) $(dmmobj) $(LIBdir)/libf77blas.so \
+              $(LIBdir)/libcblas.so $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+
+
+xdl1blastst_mike : dl1blastst_mike.o dl1lib_pt dtstlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dl1blastst_mike.o $(MIKElib) \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xdl2blastst_mike : dl2blastst_pt.o dl2lib_pt dtstlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dl2blastst_mike.o $(MIKElib) \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xdl3blastst_mike : $(INCAdir)/atlas_type.h dl3blastst_pt.o \
+                   dtstlib_pt dl3lib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dl3blastst_mike.o $(MIKElib) \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+
+xdl1blastst_pt : dl1blastst_pt.o dl1lib_pt dtstlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dl1blastst_pt.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xdl2blastst_pt : dl2blastst_pt.o dl2lib_pt dtstlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dl2blastst_pt.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xdl3blastst_pt : $(INCAdir)/atlas_type.h dl3blastst_pt.o \
+                   dtstlib_pt dl3lib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dl3blastst_pt.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+dsanity_test_pt: xdinvtst_pt xdslvtst_pt xdtrtritst_pt xduumtst_pt
+	$(ATLRUN) $(BINdir) xdslvtst_pt -n 167 -r 83 -O 2 c r \
+                  >> $(BINdir)/ptsanity.out
+	$(ATLRUN) $(BINdir) xdslvtst_pt -n 167 -r 83 -O 2 c r -U 2 u l \
+                  >> $(BINdir)/ptsanity.out
+	$(ATLRUN) $(BINdir) xdtrtritst_pt -n 167 -O 2 c r -U 2 u l \
+                  -D 2 n u >> $(BINdir)/ptsanity.out
+	$(ATLRUN) $(BINdir) xduumtst_pt -n 167 -O 2 c r -U 2 u l \
+                  >> $(BINdir)/ptsanity.out
+xdinv_all_pt : xdinvtst_pt xdinvtstF_pt \
+                   xdinvtst_sb_pt xdinvtstF_sys_pt \
+                   xdinvtst_sb_pt xdinvtstF_sl_sb_pt \
+                   xdinvtstF_fl_ab_pt xdinvtstF_sl_ab_pt \
+                   xdinvtstF_fl_fb_pt xdinvtstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xdinvtst_pt : dinvtst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xdinvtstF_pt : dinvtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xdinvtst_sb_pt : dinvtst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xdinvtstF_sb_pt : dinvtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xdinvtstF_sl_sb_pt : dinvtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xdinvtstF_sl_ab_pt : dinvtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xdinvtstF_fl_ab_pt : dinvtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xdinvtstF_fl_sb_pt : dinvtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xdinvtstF_fl_fb_pt : dinvtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xdtrtri_all_pt : xdtrtritst_pt xdtrtritstF_pt \
+                   xdtrtritst_sb_pt xdtrtritstF_sys_pt \
+                   xdtrtritst_sb_pt xdtrtritstF_sl_sb_pt \
+                   xdtrtritstF_fl_ab_pt xdtrtritstF_sl_ab_pt \
+                   xdtrtritstF_fl_fb_pt xdtrtritstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xdtrtritst_pt : dtrtritst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xdtrtritstF_pt : dtrtritstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xdtrtritst_sb_pt : dtrtritst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xdtrtritstF_sb_pt : dtrtritstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xdtrtritstF_sl_sb_pt : dtrtritstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xdtrtritstF_sl_ab_pt : dtrtritstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xdtrtritstF_fl_ab_pt : dtrtritstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xdtrtritstF_fl_sb_pt : dtrtritstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xdtrtritstF_fl_fb_pt : dtrtritstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xduum_all_pt : xduumtst_pt xduumtstF_pt \
+                   xduumtst_sb_pt xduumtstF_sys_pt \
+                   xduumtst_sb_pt xduumtstF_sl_sb_pt \
+                   xduumtstF_fl_ab_pt xduumtstF_sl_ab_pt \
+                   xduumtstF_fl_fb_pt xduumtstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xduumtst_pt : duumtst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xduumtstF_pt : duumtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xduumtst_sb_pt : duumtst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xduumtstF_sb_pt : duumtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xduumtstF_sl_sb_pt : duumtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xduumtstF_sl_ab_pt : duumtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xduumtstF_fl_ab_pt : duumtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xduumtstF_fl_sb_pt : duumtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xduumtstF_fl_fb_pt : duumtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xdslv_all_pt : xdslvtst_pt xdslvtstF_pt \
+                   xdslvtst_sb_pt xdslvtstF_sys_pt \
+                   xdslvtst_sb_pt xdslvtstF_sl_sb_pt \
+                   xdslvtstF_fl_ab_pt xdslvtstF_sl_ab_pt \
+                   xdslvtstF_fl_fb_pt xdslvtstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xdslvtst_pt : dslvtst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xdslvtstF_pt : dslvtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xdslvtst_sb_pt : dslvtst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xdslvtstF_sb_pt : dslvtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xdslvtstF_sl_sb_pt : dslvtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xdslvtstF_sl_ab_pt : dslvtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xdslvtstF_fl_ab_pt : dslvtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xdslvtstF_fl_sb_pt : dslvtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xdslvtstF_fl_fb_pt : dslvtstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xdllt_all_pt : xdllttst_pt xdllttstF_pt \
+                   xdllttst_sb_pt xdllttstF_sys_pt \
+                   xdllttst_sb_pt xdllttstF_sl_sb_pt \
+                   xdllttstF_fl_ab_pt xdllttstF_sl_ab_pt \
+                   xdllttstF_fl_fb_pt xdllttstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xdllttst_pt : dllttst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xdllttstF_pt : dllttstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xdllttst_sb_pt : dllttst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xdllttstF_sb_pt : dllttstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xdllttstF_sl_sb_pt : dllttstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xdllttstF_sl_ab_pt : dllttstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xdllttstF_fl_ab_pt : dllttstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xdllttstF_fl_sb_pt : dllttstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xdllttstF_fl_fb_pt : dllttstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xdlu_all_pt : xdlutst_pt xdlutstF_pt \
+                   xdlutst_sb_pt xdlutstF_sys_pt \
+                   xdlutst_sb_pt xdlutstF_sl_sb_pt \
+                   xdlutstF_fl_ab_pt xdlutstF_sl_ab_pt \
+                   xdlutstF_fl_fb_pt xdlutstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xdlutst_pt : dlutst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xdlutstF_pt : dlutstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xdlutst_sb_pt : dlutst_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xdlutstF_sb_pt : dlutstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xdlutstF_sl_sb_pt : dlutstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xdlutstF_sl_ab_pt : dlutstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xdlutstF_fl_ab_pt : dlutstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xdlutstF_fl_sb_pt : dlutstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xdlutstF_fl_fb_pt : dlutstF_pt.o dlapack dtstlib_pt dl3lib_pt \
+                  dl2lib_pt dl1lib_pt dcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xdmmtst_pt : $(INCAdir)/atlas_type.h dgemmtst_pt.o dmmlib_pt dtstlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dgemmtst_pt.o \
+              $(TESTlib) $(BLASlib) $(dmmobj) $(ATLASlib) $(LIBS)
+
+xdl1blastst : dl1blastst.o dl1lib dtstlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dl1blastst.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xdl2blastst : dl2blastst.o dl2lib dtstlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dl2blastst.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xdl3blastst : $(INCAdir)/atlas_type.h dl3blastst.o \
+                   dtstlib dl3lib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dl3blastst.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+dsanity_test: xdinvtst xdslvtst xdtrtritst xduumtst
+	$(ATLRUN) $(BINdir) xdslvtst -n 167 -r 83 -O 2 c r \
+                  >> $(BINdir)/sanity.out
+	$(ATLRUN) $(BINdir) xdslvtst -n 167 -r 83 -O 2 c r -U 2 u l \
+                  >> $(BINdir)/sanity.out
+	$(ATLRUN) $(BINdir) xdtrtritst -n 167 -O 2 c r -U 2 u l \
+                  -D 2 n u >> $(BINdir)/sanity.out
+	$(ATLRUN) $(BINdir) xduumtst -n 167 -O 2 c r -U 2 u l \
+                  >> $(BINdir)/sanity.out
+xdinv_all : xdinvtst xdinvtstF \
+                   xdinvtst_sb xdinvtstF_sys \
+                   xdinvtst_sb xdinvtstF_sl_sb \
+                   xdinvtstF_fl_ab xdinvtstF_sl_ab \
+                   xdinvtstF_fl_fb xdinvtstF_fl_sb
+
+# All ATLAS libs, C interface only
+xdinvtst : dinvtst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xdinvtstF : dinvtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xdinvtst_sb : dinvtst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xdinvtstF_sb : dinvtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xdinvtstF_sl_sb : dinvtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xdinvtstF_sl_ab : dinvtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xdinvtstF_fl_ab : dinvtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xdinvtstF_fl_sb : dinvtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xdinvtstF_fl_fb : dinvtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xdtrtri_all : xdtrtritst xdtrtritstF \
+                   xdtrtritst_sb xdtrtritstF_sys \
+                   xdtrtritst_sb xdtrtritstF_sl_sb \
+                   xdtrtritstF_fl_ab xdtrtritstF_sl_ab \
+                   xdtrtritstF_fl_fb xdtrtritstF_fl_sb
+
+# All ATLAS libs, C interface only
+xdtrtritst : dtrtritst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xdtrtritstF : dtrtritstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xdtrtritst_sb : dtrtritst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xdtrtritstF_sb : dtrtritstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xdtrtritstF_sl_sb : dtrtritstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xdtrtritstF_sl_ab : dtrtritstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xdtrtritstF_fl_ab : dtrtritstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xdtrtritstF_fl_sb : dtrtritstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xdtrtritstF_fl_fb : dtrtritstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dtrtritstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xduum_all : xduumtst xduumtstF \
+                   xduumtst_sb xduumtstF_sys \
+                   xduumtst_sb xduumtstF_sl_sb \
+                   xduumtstF_fl_ab xduumtstF_sl_ab \
+                   xduumtstF_fl_fb xduumtstF_fl_sb
+
+# All ATLAS libs, C interface only
+xduumtst : duumtst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xduumtstF : duumtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xduumtst_sb : duumtst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xduumtstF_sb : duumtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xduumtstF_sl_sb : duumtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xduumtstF_sl_ab : duumtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xduumtstF_fl_ab : duumtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xduumtstF_fl_sb : duumtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xduumtstF_fl_fb : duumtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ duumtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xdslv_all : xdslvtst xdslvtstF \
+                   xdslvtst_sb xdslvtstF_sys \
+                   xdslvtst_sb xdslvtstF_sl_sb \
+                   xdslvtstF_fl_ab xdslvtstF_sl_ab \
+                   xdslvtstF_fl_fb xdslvtstF_fl_sb
+
+# All ATLAS libs, C interface only
+xdslvtst : dslvtst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xdslvtstF : dslvtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xdslvtst_sb : dslvtst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xdslvtstF_sb : dslvtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xdslvtstF_sl_sb : dslvtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xdslvtstF_sl_ab : dslvtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xdslvtstF_fl_ab : dslvtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xdslvtstF_fl_sb : dslvtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xdslvtstF_fl_fb : dslvtstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dslvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xdllt_all : xdllttst xdllttstF \
+                   xdllttst_sb xdllttstF_sys \
+                   xdllttst_sb xdllttstF_sl_sb \
+                   xdllttstF_fl_ab xdllttstF_sl_ab \
+                   xdllttstF_fl_fb xdllttstF_fl_sb
+
+# All ATLAS libs, C interface only
+xdllttst : dllttst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xdllttstF : dllttstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xdllttst_sb : dllttst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xdllttstF_sb : dllttstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xdllttstF_sl_sb : dllttstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xdllttstF_sl_ab : dllttstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xdllttstF_fl_ab : dllttstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xdllttstF_fl_sb : dllttstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xdllttstF_fl_fb : dllttstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dllttstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xdlu_all : xdlutst xdlutstF \
+                   xdlutst_sb xdlutstF_sys \
+                   xdlutst_sb xdlutstF_sl_sb \
+                   xdlutstF_fl_ab xdlutstF_sl_ab \
+                   xdlutstF_fl_fb xdlutstF_fl_sb
+
+# All ATLAS libs, C interface only
+xdlutst : dlutst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xdlutstF : dlutstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xdlutst_sb : dlutst.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xdlutstF_sb : dlutstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xdlutstF_sl_sb : dlutstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xdlutstF_sl_ab : dlutstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xdlutstF_fl_ab : dlutstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xdlutstF_fl_sb : dlutstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xdlutstF_fl_fb : dlutstF.o dlapack dtstlib dl3lib \
+                  dl2lib dl1lib dcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dlutstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xdmmtst : $(INCAdir)/atlas_type.h dgemmtst.o dmmlib dtstlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dgemmtst.o \
+              $(TESTlib) $(BLASlib) $(dmmobj) $(ATLASlib) $(LIBS)
+
+xdmmtst_big : $(INCAdir)/atlas_type.h dgemmtst_big.o dmmlib \
+              dtstlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dgemmtst_big.o \
+                   $(TESTlib) $(BLASlib) $(dmmobj) $(ATLASlib) $(LIBS)
+xdgpmmtst : $(INCAdir)/atlas_type.h dgpmmtst.o dmmlib dtstlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ dgpmmtst.o \
+              $(TESTlib) $(BLASlib) $(dmmobj) $(ATLASlib) $(LIBS)
+dgpmmtst.o : $(mySRCdir)/gpmmtst.c $(INCSdir)/atlas_misc.h $(INCAdir)/dmm.h \
+                  $(INCSdir)/atlas_lvl3.h $(INCSdir)/atlas_pkblas.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDREAL $(mySRCdir)/gpmmtst.c
+	
+dtstlib_pt : dtstlib
+dtstlib :
+	cd $(TSTdir) ; $(MAKE) dlib
+
+dfblas_pt : dfblaslib_pt
+dfblaslib_pt :
+	cd $(FBLdir) ; $(MAKE) dptlib
+dfblas : dfblaslib
+dfblaslib :
+	cd $(FBLdir) ; $(MAKE) dlib
+dcblas_pt : dcblaslib_pt
+dcblaslib_pt :
+	cd $(CBLdir) ; $(MAKE) dptlib
+dcblas : dcblaslib
+dcblaslib :
+	cd $(CBLdir) ; $(MAKE) dlib
+
+dmmlib_pt : auxlib_pt
+	cd $(GMMdir) ; $(MAKE) dlib
+dmmlib : auxlib
+	cd $(GMMdir) ; $(MAKE) dlib
+dpklib : auxlib
+	cd $(BLDdir)/src/blas/pklevel3 ; $(MAKE) dlib
+
+dl2lib_pt : dl2lib
+	cd $(PTSdir)/blas/level2 ; $(MAKE) dlib
+dl2lib : dl1lib auxlib
+	cd $(GMVdir) ; $(MAKE) dlib
+	cd $(GR1dir) ; $(MAKE) dlib
+	cd $(L2Bdir) ; $(MAKE) dlib
+
+dl3lib_pt : dl3lib dmmlib_pt
+	cd $(PTSdir)/blas/level3 ; $(MAKE) dlib
+dl3lib : dmmlib
+	cd $(L3Bdir) ; $(MAKE) dlib
+
+dl1lib_pt : auxlib_pt dl1lib
+	cd $(PTSdir)/blas/level1 ; $(MAKE) dlib
+dl1lib : auxlib
+	cd $(L1Bdir) ; $(MAKE) dlvl1
+
+dlapack :
+	cd $(BLDdir)/src/lapack ; $(MAKE) dlib
+
+xdprintblk : dprintblk.o
+	$(CLINKER) -o $@ dprintblk.o $(ATLASlib)
+dprintblk.o : $(INCSdir)/atlas_mv.h $(INCSdir)/atlas_r1.h \
+                   $(INCAdir)/dmm.h $(mySRCdir)/printblk.c
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDREAL $(mySRCdir)/printblk.c
+
+dl1blastst_mike.o : $(mySRCdir)/l1blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level1.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDREAL -DATL_USEPTHREADS -DATL_MIKE $(mySRCdir)/l1blastst.c
+dl2blastst_mike.o : $(mySRCdir)/l2blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level2.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDREAL -DATL_USEPTHREADS -DATL_MIKE $(mySRCdir)/l2blastst.c
+
+dl3blastst_mike.o : $(mySRCdir)/l3blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DATL_USEPTHREADS -DATL_MIKE -DDREAL $(mySRCdir)/l3blastst.c
+dinvtst_mike.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DDREAL $(mySRCdir)/invtst.c
+dinvtstF_mike.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DDREAL $(mySRCdir)/invtst.c
+dtrtritst_mike.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DDREAL $(mySRCdir)/trtritst.c
+dtrtritstF_mike.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DDREAL $(mySRCdir)/trtritst.c
+dslvtst_mike.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DDREAL $(mySRCdir)/slvtst.c
+dslvtstF_mike.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DDREAL $(mySRCdir)/slvtst.c
+dlutst_mike.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DDREAL $(mySRCdir)/lutst.c
+dlutstF_mike.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DDREAL $(mySRCdir)/lutst.c
+dllttst_mike.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DDREAL $(mySRCdir)/llttst.c
+dllttstF_mike.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DDREAL $(mySRCdir)/llttst.c
+duumtst_mike.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DDREAL $(mySRCdir)/uumtst.c
+duumtstF_mike.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DDREAL $(mySRCdir)/uumtst.c
+
+dscaltst_mike.o : $(mySRCdir)/scaltst.c $(INCSdir)/atlas_misc.h \
+                  $(INCSdir)/atlas_f77.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATL_USEPTHREADS -DATL_MIKE -DDREAL $(mySRCdir)/scaltst.c
+
+dgemmtst_mike.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
+                  $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATL_USEPTHREADS -DATL_MIKE -DDREAL $(mySRCdir)/gemmtst.c
+
+dl1blastst_pt.o : $(mySRCdir)/l1blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level1.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDREAL -DATL_USEPTHREADS $(mySRCdir)/l1blastst.c
+dl2blastst_pt.o : $(mySRCdir)/l2blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level2.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDREAL -DATL_USEPTHREADS $(mySRCdir)/l2blastst.c
+
+dl3blastst_pt.o : $(mySRCdir)/l3blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DATL_USEPTHREADS -DDREAL $(mySRCdir)/l3blastst.c
+dinvtst_pt.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DDREAL $(mySRCdir)/invtst.c
+dinvtstF_pt.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DDREAL $(mySRCdir)/invtst.c
+dtrtritst_pt.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DDREAL $(mySRCdir)/trtritst.c
+dtrtritstF_pt.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DDREAL $(mySRCdir)/trtritst.c
+dslvtst_pt.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DDREAL $(mySRCdir)/slvtst.c
+dslvtstF_pt.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DDREAL $(mySRCdir)/slvtst.c
+dlutst_pt.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DDREAL $(mySRCdir)/lutst.c
+dlutstF_pt.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DDREAL $(mySRCdir)/lutst.c
+dllttst_pt.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DDREAL $(mySRCdir)/llttst.c
+dllttstF_pt.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DDREAL $(mySRCdir)/llttst.c
+duumtst_pt.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DDREAL $(mySRCdir)/uumtst.c
+duumtstF_pt.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DDREAL $(mySRCdir)/uumtst.c
+
+dscaltst_pt.o : $(mySRCdir)/scaltst.c $(INCSdir)/atlas_misc.h \
+                  $(INCSdir)/atlas_f77.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATL_USEPTHREADS -DDREAL $(mySRCdir)/scaltst.c
+
+dgemmtst_pt.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
+                  $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATL_USEPTHREADS -DDREAL $(mySRCdir)/gemmtst.c
+
+dl1blastst.o : $(mySRCdir)/l1blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level1.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDREAL  $(mySRCdir)/l1blastst.c
+dl2blastst.o : $(mySRCdir)/l2blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level2.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDREAL  $(mySRCdir)/l2blastst.c
+
+dl3blastst.o : $(mySRCdir)/l3blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT  -DDREAL $(mySRCdir)/l3blastst.c
+dinvtst.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DDREAL $(mySRCdir)/invtst.c
+dinvtstF.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DDREAL $(mySRCdir)/invtst.c
+dtrtritst.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DDREAL $(mySRCdir)/trtritst.c
+dtrtritstF.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DDREAL $(mySRCdir)/trtritst.c
+dslvtst.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DDREAL $(mySRCdir)/slvtst.c
+dslvtstF.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DDREAL $(mySRCdir)/slvtst.c
+dlutst.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DDREAL $(mySRCdir)/lutst.c
+dlutstF.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DDREAL $(mySRCdir)/lutst.c
+dllttst.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DDREAL $(mySRCdir)/llttst.c
+dllttstF.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DDREAL $(mySRCdir)/llttst.c
+duumtst.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DDREAL $(mySRCdir)/uumtst.c
+duumtstF.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DDREAL $(mySRCdir)/uumtst.c
+
+dscaltst.o : $(mySRCdir)/scaltst.c $(INCSdir)/atlas_misc.h \
+                  $(INCSdir)/atlas_f77.h 
+	$(ICC) -o $@ -c $(ICCFLAGS)  -DDREAL $(mySRCdir)/scaltst.c
+
+dgemmtst.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
+                  $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS)  -DDREAL $(mySRCdir)/gemmtst.c
+
+dgemmtst_big.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
+                 $(INCAdir)/dmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDREAL -DTRUST_BIG $(mySRCdir)/gemmtst.c
+xcl1blastst_pt_dyn : cl1blastst_pt.o cl1lib_pt ctstlib_pt PTshared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cl1blastst_pt.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcl2blastst_pt_dyn : cl2blastst_pt.o cl2lib_pt ctstlib_pt PTshared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cl2blastst_pt.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcl3blastst_pt_dyn : $(INCAdir)/atlas_type.h cl3blastst_pt.o \
+                   ctstlib_pt cl3lib_pt PTshared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cl3blastst_pt.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcinv_all_pt_dyn : xcinvtst_pt xcinvtstF_pt \
+                   xcinvtst_sys_pt xcinvtstF_sys_pt PTshared
+
+xcinvtst_pt_dyn : cinvtst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt PTshared
+	rm -f cinvtst_pt.o
+	$(MAKE) cinvtst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcinvtstF_pt_dyn : clapack ctstlib_pt cl3lib_pt cl2lib_pt \
+                   cl1lib_pt ccblas_pt cfblas_pt PTshared
+	rm -f cinvtst_pt.o
+	$(MAKE) cinvtst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xctrtri_all_pt_dyn : xctrtritst_pt xctrtritstF_pt \
+                   xctrtritst_sys_pt xctrtritstF_sys_pt PTshared
+
+xctrtritst_pt_dyn : ctrtritst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt PTshared
+	rm -f ctrtritst_pt.o
+	$(MAKE) ctrtritst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xctrtritstF_pt_dyn : clapack ctstlib_pt cl3lib_pt cl2lib_pt \
+                   cl1lib_pt ccblas_pt cfblas_pt PTshared
+	rm -f ctrtritst_pt.o
+	$(MAKE) ctrtritst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcuum_all_pt_dyn : xcuumtst_pt xcuumtstF_pt \
+                   xcuumtst_sys_pt xcuumtstF_sys_pt PTshared
+
+xcuumtst_pt_dyn : cuumtst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt PTshared
+	rm -f cuumtst_pt.o
+	$(MAKE) cuumtst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcuumtstF_pt_dyn : clapack ctstlib_pt cl3lib_pt cl2lib_pt \
+                   cl1lib_pt ccblas_pt cfblas_pt PTshared
+	rm -f cuumtst_pt.o
+	$(MAKE) cuumtst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcslv_all_pt_dyn : xcslvtst_pt xcslvtstF_pt \
+                   xcslvtst_sys_pt xcslvtstF_sys_pt PTshared
+
+xcslvtst_pt_dyn : cslvtst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt PTshared
+	rm -f cslvtst_pt.o
+	$(MAKE) cslvtst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcslvtstF_pt_dyn : clapack ctstlib_pt cl3lib_pt cl2lib_pt \
+                   cl1lib_pt ccblas_pt cfblas_pt PTshared
+	rm -f cslvtst_pt.o
+	$(MAKE) cslvtst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcllt_all_pt_dyn : xcllttst_pt xcllttstF_pt \
+                   xcllttst_sys_pt xcllttstF_sys_pt PTshared
+
+xcllttst_pt_dyn : cllttst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt PTshared
+	rm -f cllttst_pt.o
+	$(MAKE) cllttst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcllttstF_pt_dyn : clapack ctstlib_pt cl3lib_pt cl2lib_pt \
+                   cl1lib_pt ccblas_pt cfblas_pt PTshared
+	rm -f cllttst_pt.o
+	$(MAKE) cllttst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xclu_all_pt_dyn : xclutst_pt xclutstF_pt \
+                   xclutst_sys_pt xclutstF_sys_pt PTshared
+
+xclutst_pt_dyn : clutst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt PTshared
+	rm -f clutst_pt.o
+	$(MAKE) clutst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xclutstF_pt_dyn : clapack ctstlib_pt cl3lib_pt cl2lib_pt \
+                   cl1lib_pt ccblas_pt cfblas_pt PTshared
+	rm -f clutst_pt.o
+	$(MAKE) clutst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcmmtst_pt_dyn : $(INCAdir)/atlas_type.h cgemmtst_pt.o cmmlib_pt ctstlib_pt PTshared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cgemmtst_pt.o \
+              $(TESTlib) $(cmmobj) $(LIBdir)/libf77blas.so \
+              $(LIBdir)/libcblas.so $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+
+xcl1blastst_dyn : cl1blastst.o cl1lib ctstlib shared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cl1blastst.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcl2blastst_dyn : cl2blastst.o cl2lib ctstlib shared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cl2blastst.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcl3blastst_dyn : $(INCAdir)/atlas_type.h cl3blastst.o \
+                   ctstlib cl3lib shared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cl3blastst.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcinv_all_dyn : xcinvtst xcinvtstF \
+                   xcinvtst_sys xcinvtstF_sys shared
+
+xcinvtst_dyn : cinvtst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas shared
+	rm -f cinvtst.o
+	$(MAKE) cinvtst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcinvtstF_dyn : clapack ctstlib cl3lib cl2lib \
+                   cl1lib ccblas cfblas shared
+	rm -f cinvtst.o
+	$(MAKE) cinvtst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xctrtri_all_dyn : xctrtritst xctrtritstF \
+                   xctrtritst_sys xctrtritstF_sys shared
+
+xctrtritst_dyn : ctrtritst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas shared
+	rm -f ctrtritst.o
+	$(MAKE) ctrtritst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xctrtritstF_dyn : clapack ctstlib cl3lib cl2lib \
+                   cl1lib ccblas cfblas shared
+	rm -f ctrtritst.o
+	$(MAKE) ctrtritst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcuum_all_dyn : xcuumtst xcuumtstF \
+                   xcuumtst_sys xcuumtstF_sys shared
+
+xcuumtst_dyn : cuumtst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas shared
+	rm -f cuumtst.o
+	$(MAKE) cuumtst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcuumtstF_dyn : clapack ctstlib cl3lib cl2lib \
+                   cl1lib ccblas cfblas shared
+	rm -f cuumtst.o
+	$(MAKE) cuumtst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcslv_all_dyn : xcslvtst xcslvtstF \
+                   xcslvtst_sys xcslvtstF_sys shared
+
+xcslvtst_dyn : cslvtst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas shared
+	rm -f cslvtst.o
+	$(MAKE) cslvtst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcslvtstF_dyn : clapack ctstlib cl3lib cl2lib \
+                   cl1lib ccblas cfblas shared
+	rm -f cslvtst.o
+	$(MAKE) cslvtst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcllt_all_dyn : xcllttst xcllttstF \
+                   xcllttst_sys xcllttstF_sys shared
+
+xcllttst_dyn : cllttst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas shared
+	rm -f cllttst.o
+	$(MAKE) cllttst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcllttstF_dyn : clapack ctstlib cl3lib cl2lib \
+                   cl1lib ccblas cfblas shared
+	rm -f cllttst.o
+	$(MAKE) cllttst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xclu_all_dyn : xclutst xclutstF \
+                   xclutst_sys xclutstF_sys shared
+
+xclutst_dyn : clutst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas shared
+	rm -f clutst.o
+	$(MAKE) clutst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xclutstF_dyn : clapack ctstlib cl3lib cl2lib \
+                   cl1lib ccblas cfblas shared
+	rm -f clutst.o
+	$(MAKE) clutst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xcmmtst_dyn : $(INCAdir)/atlas_type.h cgemmtst.o cmmlib ctstlib shared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cgemmtst.o \
+              $(TESTlib) $(cmmobj) $(LIBdir)/libf77blas.so \
+              $(LIBdir)/libcblas.so $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+
+
+xcl1blastst_mike : cl1blastst_mike.o cl1lib_pt ctstlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cl1blastst_mike.o $(MIKElib) \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xcl2blastst_mike : cl2blastst_pt.o cl2lib_pt ctstlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cl2blastst_mike.o $(MIKElib) \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xcl3blastst_mike : $(INCAdir)/atlas_type.h cl3blastst_pt.o \
+                   ctstlib_pt cl3lib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cl3blastst_mike.o $(MIKElib) \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+
+xcl1blastst_pt : cl1blastst_pt.o cl1lib_pt ctstlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cl1blastst_pt.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xcl2blastst_pt : cl2blastst_pt.o cl2lib_pt ctstlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cl2blastst_pt.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xcl3blastst_pt : $(INCAdir)/atlas_type.h cl3blastst_pt.o \
+                   ctstlib_pt cl3lib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cl3blastst_pt.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+csanity_test_pt: xcinvtst_pt xcslvtst_pt xctrtritst_pt xcuumtst_pt
+	$(ATLRUN) $(BINdir) xcslvtst_pt -n 167 -r 83 -O 2 c r \
+                  >> $(BINdir)/ptsanity.out
+	$(ATLRUN) $(BINdir) xcslvtst_pt -n 167 -r 83 -O 2 c r -U 2 u l \
+                  >> $(BINdir)/ptsanity.out
+	$(ATLRUN) $(BINdir) xctrtritst_pt -n 167 -O 2 c r -U 2 u l \
+                  -D 2 n u >> $(BINdir)/ptsanity.out
+	$(ATLRUN) $(BINdir) xcuumtst_pt -n 167 -O 2 c r -U 2 u l \
+                  >> $(BINdir)/ptsanity.out
+xcinv_all_pt : xcinvtst_pt xcinvtstF_pt \
+                   xcinvtst_sb_pt xcinvtstF_sys_pt \
+                   xcinvtst_sb_pt xcinvtstF_sl_sb_pt \
+                   xcinvtstF_fl_ab_pt xcinvtstF_sl_ab_pt \
+                   xcinvtstF_fl_fb_pt xcinvtstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xcinvtst_pt : cinvtst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xcinvtstF_pt : cinvtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xcinvtst_sb_pt : cinvtst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xcinvtstF_sb_pt : cinvtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xcinvtstF_sl_sb_pt : cinvtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xcinvtstF_sl_ab_pt : cinvtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xcinvtstF_fl_ab_pt : cinvtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xcinvtstF_fl_sb_pt : cinvtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xcinvtstF_fl_fb_pt : cinvtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xctrtri_all_pt : xctrtritst_pt xctrtritstF_pt \
+                   xctrtritst_sb_pt xctrtritstF_sys_pt \
+                   xctrtritst_sb_pt xctrtritstF_sl_sb_pt \
+                   xctrtritstF_fl_ab_pt xctrtritstF_sl_ab_pt \
+                   xctrtritstF_fl_fb_pt xctrtritstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xctrtritst_pt : ctrtritst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xctrtritstF_pt : ctrtritstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xctrtritst_sb_pt : ctrtritst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xctrtritstF_sb_pt : ctrtritstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xctrtritstF_sl_sb_pt : ctrtritstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xctrtritstF_sl_ab_pt : ctrtritstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xctrtritstF_fl_ab_pt : ctrtritstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xctrtritstF_fl_sb_pt : ctrtritstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xctrtritstF_fl_fb_pt : ctrtritstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xcuum_all_pt : xcuumtst_pt xcuumtstF_pt \
+                   xcuumtst_sb_pt xcuumtstF_sys_pt \
+                   xcuumtst_sb_pt xcuumtstF_sl_sb_pt \
+                   xcuumtstF_fl_ab_pt xcuumtstF_sl_ab_pt \
+                   xcuumtstF_fl_fb_pt xcuumtstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xcuumtst_pt : cuumtst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xcuumtstF_pt : cuumtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xcuumtst_sb_pt : cuumtst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xcuumtstF_sb_pt : cuumtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xcuumtstF_sl_sb_pt : cuumtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xcuumtstF_sl_ab_pt : cuumtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xcuumtstF_fl_ab_pt : cuumtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xcuumtstF_fl_sb_pt : cuumtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xcuumtstF_fl_fb_pt : cuumtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xcslv_all_pt : xcslvtst_pt xcslvtstF_pt \
+                   xcslvtst_sb_pt xcslvtstF_sys_pt \
+                   xcslvtst_sb_pt xcslvtstF_sl_sb_pt \
+                   xcslvtstF_fl_ab_pt xcslvtstF_sl_ab_pt \
+                   xcslvtstF_fl_fb_pt xcslvtstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xcslvtst_pt : cslvtst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xcslvtstF_pt : cslvtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xcslvtst_sb_pt : cslvtst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xcslvtstF_sb_pt : cslvtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xcslvtstF_sl_sb_pt : cslvtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xcslvtstF_sl_ab_pt : cslvtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xcslvtstF_fl_ab_pt : cslvtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xcslvtstF_fl_sb_pt : cslvtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xcslvtstF_fl_fb_pt : cslvtstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xcllt_all_pt : xcllttst_pt xcllttstF_pt \
+                   xcllttst_sb_pt xcllttstF_sys_pt \
+                   xcllttst_sb_pt xcllttstF_sl_sb_pt \
+                   xcllttstF_fl_ab_pt xcllttstF_sl_ab_pt \
+                   xcllttstF_fl_fb_pt xcllttstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xcllttst_pt : cllttst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xcllttstF_pt : cllttstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xcllttst_sb_pt : cllttst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xcllttstF_sb_pt : cllttstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xcllttstF_sl_sb_pt : cllttstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xcllttstF_sl_ab_pt : cllttstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xcllttstF_fl_ab_pt : cllttstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xcllttstF_fl_sb_pt : cllttstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xcllttstF_fl_fb_pt : cllttstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xclu_all_pt : xclutst_pt xclutstF_pt \
+                   xclutst_sb_pt xclutstF_sys_pt \
+                   xclutst_sb_pt xclutstF_sl_sb_pt \
+                   xclutstF_fl_ab_pt xclutstF_sl_ab_pt \
+                   xclutstF_fl_fb_pt xclutstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xclutst_pt : clutst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xclutstF_pt : clutstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xclutst_sb_pt : clutst_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xclutstF_sb_pt : clutstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xclutstF_sl_sb_pt : clutstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xclutstF_sl_ab_pt : clutstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xclutstF_fl_ab_pt : clutstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xclutstF_fl_sb_pt : clutstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xclutstF_fl_fb_pt : clutstF_pt.o clapack ctstlib_pt cl3lib_pt \
+                  cl2lib_pt cl1lib_pt ccblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xcmmtst_pt : $(INCAdir)/atlas_type.h cgemmtst_pt.o cmmlib_pt ctstlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cgemmtst_pt.o \
+              $(TESTlib) $(BLASlib) $(cmmobj) $(ATLASlib) $(LIBS)
+
+xcl1blastst : cl1blastst.o cl1lib ctstlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cl1blastst.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xcl2blastst : cl2blastst.o cl2lib ctstlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cl2blastst.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xcl3blastst : $(INCAdir)/atlas_type.h cl3blastst.o \
+                   ctstlib cl3lib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cl3blastst.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+csanity_test: xcinvtst xcslvtst xctrtritst xcuumtst
+	$(ATLRUN) $(BINdir) xcslvtst -n 167 -r 83 -O 2 c r \
+                  >> $(BINdir)/sanity.out
+	$(ATLRUN) $(BINdir) xcslvtst -n 167 -r 83 -O 2 c r -U 2 u l \
+                  >> $(BINdir)/sanity.out
+	$(ATLRUN) $(BINdir) xctrtritst -n 167 -O 2 c r -U 2 u l \
+                  -D 2 n u >> $(BINdir)/sanity.out
+	$(ATLRUN) $(BINdir) xcuumtst -n 167 -O 2 c r -U 2 u l \
+                  >> $(BINdir)/sanity.out
+xcinv_all : xcinvtst xcinvtstF \
+                   xcinvtst_sb xcinvtstF_sys \
+                   xcinvtst_sb xcinvtstF_sl_sb \
+                   xcinvtstF_fl_ab xcinvtstF_sl_ab \
+                   xcinvtstF_fl_fb xcinvtstF_fl_sb
+
+# All ATLAS libs, C interface only
+xcinvtst : cinvtst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xcinvtstF : cinvtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xcinvtst_sb : cinvtst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xcinvtstF_sb : cinvtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xcinvtstF_sl_sb : cinvtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xcinvtstF_sl_ab : cinvtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xcinvtstF_fl_ab : cinvtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xcinvtstF_fl_sb : cinvtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xcinvtstF_fl_fb : cinvtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xctrtri_all : xctrtritst xctrtritstF \
+                   xctrtritst_sb xctrtritstF_sys \
+                   xctrtritst_sb xctrtritstF_sl_sb \
+                   xctrtritstF_fl_ab xctrtritstF_sl_ab \
+                   xctrtritstF_fl_fb xctrtritstF_fl_sb
+
+# All ATLAS libs, C interface only
+xctrtritst : ctrtritst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xctrtritstF : ctrtritstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xctrtritst_sb : ctrtritst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xctrtritstF_sb : ctrtritstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xctrtritstF_sl_sb : ctrtritstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xctrtritstF_sl_ab : ctrtritstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xctrtritstF_fl_ab : ctrtritstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xctrtritstF_fl_sb : ctrtritstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xctrtritstF_fl_fb : ctrtritstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ctrtritstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xcuum_all : xcuumtst xcuumtstF \
+                   xcuumtst_sb xcuumtstF_sys \
+                   xcuumtst_sb xcuumtstF_sl_sb \
+                   xcuumtstF_fl_ab xcuumtstF_sl_ab \
+                   xcuumtstF_fl_fb xcuumtstF_fl_sb
+
+# All ATLAS libs, C interface only
+xcuumtst : cuumtst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xcuumtstF : cuumtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xcuumtst_sb : cuumtst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xcuumtstF_sb : cuumtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xcuumtstF_sl_sb : cuumtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xcuumtstF_sl_ab : cuumtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xcuumtstF_fl_ab : cuumtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xcuumtstF_fl_sb : cuumtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xcuumtstF_fl_fb : cuumtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cuumtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xcslv_all : xcslvtst xcslvtstF \
+                   xcslvtst_sb xcslvtstF_sys \
+                   xcslvtst_sb xcslvtstF_sl_sb \
+                   xcslvtstF_fl_ab xcslvtstF_sl_ab \
+                   xcslvtstF_fl_fb xcslvtstF_fl_sb
+
+# All ATLAS libs, C interface only
+xcslvtst : cslvtst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xcslvtstF : cslvtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xcslvtst_sb : cslvtst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xcslvtstF_sb : cslvtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xcslvtstF_sl_sb : cslvtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xcslvtstF_sl_ab : cslvtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xcslvtstF_fl_ab : cslvtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xcslvtstF_fl_sb : cslvtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xcslvtstF_fl_fb : cslvtstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cslvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xcllt_all : xcllttst xcllttstF \
+                   xcllttst_sb xcllttstF_sys \
+                   xcllttst_sb xcllttstF_sl_sb \
+                   xcllttstF_fl_ab xcllttstF_sl_ab \
+                   xcllttstF_fl_fb xcllttstF_fl_sb
+
+# All ATLAS libs, C interface only
+xcllttst : cllttst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xcllttstF : cllttstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xcllttst_sb : cllttst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xcllttstF_sb : cllttstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xcllttstF_sl_sb : cllttstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xcllttstF_sl_ab : cllttstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xcllttstF_fl_ab : cllttstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xcllttstF_fl_sb : cllttstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xcllttstF_fl_fb : cllttstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cllttstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xclu_all : xclutst xclutstF \
+                   xclutst_sb xclutstF_sys \
+                   xclutst_sb xclutstF_sl_sb \
+                   xclutstF_fl_ab xclutstF_sl_ab \
+                   xclutstF_fl_fb xclutstF_fl_sb
+
+# All ATLAS libs, C interface only
+xclutst : clutst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xclutstF : clutstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xclutst_sb : clutst.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xclutstF_sb : clutstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xclutstF_sl_sb : clutstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xclutstF_sl_ab : clutstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xclutstF_fl_ab : clutstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xclutstF_fl_sb : clutstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xclutstF_fl_fb : clutstF.o clapack ctstlib cl3lib \
+                  cl2lib cl1lib ccblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ clutstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xcmmtst : $(INCAdir)/atlas_type.h cgemmtst.o cmmlib ctstlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cgemmtst.o \
+              $(TESTlib) $(BLASlib) $(cmmobj) $(ATLASlib) $(LIBS)
+
+xcmmtst_big : $(INCAdir)/atlas_type.h cgemmtst_big.o cmmlib \
+              ctstlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cgemmtst_big.o \
+                   $(TESTlib) $(BLASlib) $(cmmobj) $(ATLASlib) $(LIBS)
+xcgpmmtst : $(INCAdir)/atlas_type.h cgpmmtst.o cmmlib ctstlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ cgpmmtst.o \
+              $(TESTlib) $(BLASlib) $(cmmobj) $(ATLASlib) $(LIBS)
+cgpmmtst.o : $(mySRCdir)/gpmmtst.c $(INCSdir)/atlas_misc.h $(INCAdir)/cmm.h \
+                  $(INCSdir)/atlas_lvl3.h $(INCSdir)/atlas_pkblas.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSCPLX $(mySRCdir)/gpmmtst.c
+	
+ctstlib_pt : ctstlib
+ctstlib :
+	cd $(TSTdir) ; $(MAKE) clib
+
+cfblas_pt : cfblaslib_pt
+cfblaslib_pt :
+	cd $(FBLdir) ; $(MAKE) cptlib
+cfblas : cfblaslib
+cfblaslib :
+	cd $(FBLdir) ; $(MAKE) clib
+ccblas_pt : ccblaslib_pt
+ccblaslib_pt :
+	cd $(CBLdir) ; $(MAKE) cptlib
+ccblas : ccblaslib
+ccblaslib :
+	cd $(CBLdir) ; $(MAKE) clib
+
+cmmlib_pt : auxlib_pt
+	cd $(GMMdir) ; $(MAKE) clib
+cmmlib : auxlib
+	cd $(GMMdir) ; $(MAKE) clib
+cpklib : auxlib
+	cd $(BLDdir)/src/blas/pklevel3 ; $(MAKE) clib
+
+cl2lib_pt : cl2lib
+	cd $(PTSdir)/blas/level2 ; $(MAKE) clib
+cl2lib : cl1lib auxlib
+	cd $(GMVdir) ; $(MAKE) clib
+	cd $(GR1dir) ; $(MAKE) clib
+	cd $(L2Bdir) ; $(MAKE) clib
+
+cl3lib_pt : cl3lib cmmlib_pt
+	cd $(PTSdir)/blas/level3 ; $(MAKE) clib
+cl3lib : cmmlib
+	cd $(L3Bdir) ; $(MAKE) clib
+
+cl1lib_pt : auxlib_pt cl1lib
+	cd $(PTSdir)/blas/level1 ; $(MAKE) clib
+cl1lib : auxlib
+	cd $(L1Bdir) ; $(MAKE) clvl1
+
+clapack :
+	cd $(BLDdir)/src/lapack ; $(MAKE) clib
+
+xcprintblk : cprintblk.o
+	$(CLINKER) -o $@ cprintblk.o $(ATLASlib)
+cprintblk.o : $(INCSdir)/atlas_mv.h $(INCSdir)/atlas_r1.h \
+                   $(INCAdir)/cmm.h $(mySRCdir)/printblk.c
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSCPLX $(mySRCdir)/printblk.c
+
+cl1blastst_mike.o : $(mySRCdir)/l1blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level1.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSCPLX -DATL_USEPTHREADS -DATL_MIKE $(mySRCdir)/l1blastst.c
+cl2blastst_mike.o : $(mySRCdir)/l2blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level2.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSCPLX -DATL_USEPTHREADS -DATL_MIKE $(mySRCdir)/l2blastst.c
+
+cl3blastst_mike.o : $(mySRCdir)/l3blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DATL_USEPTHREADS -DATL_MIKE -DSCPLX $(mySRCdir)/l3blastst.c
+cinvtst_mike.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DSCPLX $(mySRCdir)/invtst.c
+cinvtstF_mike.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DSCPLX $(mySRCdir)/invtst.c
+ctrtritst_mike.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DSCPLX $(mySRCdir)/trtritst.c
+ctrtritstF_mike.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DSCPLX $(mySRCdir)/trtritst.c
+cslvtst_mike.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DSCPLX $(mySRCdir)/slvtst.c
+cslvtstF_mike.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DSCPLX $(mySRCdir)/slvtst.c
+clutst_mike.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DSCPLX $(mySRCdir)/lutst.c
+clutstF_mike.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DSCPLX $(mySRCdir)/lutst.c
+cllttst_mike.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DSCPLX $(mySRCdir)/llttst.c
+cllttstF_mike.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DSCPLX $(mySRCdir)/llttst.c
+cuumtst_mike.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DSCPLX $(mySRCdir)/uumtst.c
+cuumtstF_mike.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DSCPLX $(mySRCdir)/uumtst.c
+
+cscaltst_mike.o : $(mySRCdir)/scaltst.c $(INCSdir)/atlas_misc.h \
+                  $(INCSdir)/atlas_f77.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATL_USEPTHREADS -DATL_MIKE -DSCPLX $(mySRCdir)/scaltst.c
+
+cgemmtst_mike.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
+                  $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATL_USEPTHREADS -DATL_MIKE -DSCPLX $(mySRCdir)/gemmtst.c
+
+cl1blastst_pt.o : $(mySRCdir)/l1blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level1.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSCPLX -DATL_USEPTHREADS $(mySRCdir)/l1blastst.c
+cl2blastst_pt.o : $(mySRCdir)/l2blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level2.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSCPLX -DATL_USEPTHREADS $(mySRCdir)/l2blastst.c
+
+cl3blastst_pt.o : $(mySRCdir)/l3blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DATL_USEPTHREADS -DSCPLX $(mySRCdir)/l3blastst.c
+cinvtst_pt.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DSCPLX $(mySRCdir)/invtst.c
+cinvtstF_pt.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DSCPLX $(mySRCdir)/invtst.c
+ctrtritst_pt.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DSCPLX $(mySRCdir)/trtritst.c
+ctrtritstF_pt.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DSCPLX $(mySRCdir)/trtritst.c
+cslvtst_pt.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DSCPLX $(mySRCdir)/slvtst.c
+cslvtstF_pt.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DSCPLX $(mySRCdir)/slvtst.c
+clutst_pt.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DSCPLX $(mySRCdir)/lutst.c
+clutstF_pt.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DSCPLX $(mySRCdir)/lutst.c
+cllttst_pt.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DSCPLX $(mySRCdir)/llttst.c
+cllttstF_pt.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DSCPLX $(mySRCdir)/llttst.c
+cuumtst_pt.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DSCPLX $(mySRCdir)/uumtst.c
+cuumtstF_pt.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DSCPLX $(mySRCdir)/uumtst.c
+
+cscaltst_pt.o : $(mySRCdir)/scaltst.c $(INCSdir)/atlas_misc.h \
+                  $(INCSdir)/atlas_f77.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATL_USEPTHREADS -DSCPLX $(mySRCdir)/scaltst.c
+
+cgemmtst_pt.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
+                  $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATL_USEPTHREADS -DSCPLX $(mySRCdir)/gemmtst.c
+
+cl1blastst.o : $(mySRCdir)/l1blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level1.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSCPLX  $(mySRCdir)/l1blastst.c
+cl2blastst.o : $(mySRCdir)/l2blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level2.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSCPLX  $(mySRCdir)/l2blastst.c
+
+cl3blastst.o : $(mySRCdir)/l3blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT  -DSCPLX $(mySRCdir)/l3blastst.c
+cinvtst.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DSCPLX $(mySRCdir)/invtst.c
+cinvtstF.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DSCPLX $(mySRCdir)/invtst.c
+ctrtritst.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DSCPLX $(mySRCdir)/trtritst.c
+ctrtritstF.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DSCPLX $(mySRCdir)/trtritst.c
+cslvtst.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DSCPLX $(mySRCdir)/slvtst.c
+cslvtstF.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DSCPLX $(mySRCdir)/slvtst.c
+clutst.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DSCPLX $(mySRCdir)/lutst.c
+clutstF.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DSCPLX $(mySRCdir)/lutst.c
+cllttst.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DSCPLX $(mySRCdir)/llttst.c
+cllttstF.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DSCPLX $(mySRCdir)/llttst.c
+cuumtst.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DSCPLX $(mySRCdir)/uumtst.c
+cuumtstF.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DSCPLX $(mySRCdir)/uumtst.c
+
+cscaltst.o : $(mySRCdir)/scaltst.c $(INCSdir)/atlas_misc.h \
+                  $(INCSdir)/atlas_f77.h 
+	$(ICC) -o $@ -c $(ICCFLAGS)  -DSCPLX $(mySRCdir)/scaltst.c
+
+cgemmtst.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
+                  $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS)  -DSCPLX $(mySRCdir)/gemmtst.c
+
+cgemmtst_big.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
+                 $(INCAdir)/cmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSCPLX -DTRUST_BIG $(mySRCdir)/gemmtst.c
+xzl1blastst_pt_dyn : zl1blastst_pt.o zl1lib_pt ztstlib_pt PTshared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zl1blastst_pt.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzl2blastst_pt_dyn : zl2blastst_pt.o zl2lib_pt ztstlib_pt PTshared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zl2blastst_pt.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzl3blastst_pt_dyn : $(INCAdir)/atlas_type.h zl3blastst_pt.o \
+                   ztstlib_pt zl3lib_pt PTshared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zl3blastst_pt.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzinv_all_pt_dyn : xzinvtst_pt xzinvtstF_pt \
+                   xzinvtst_sys_pt xzinvtstF_sys_pt PTshared
+
+xzinvtst_pt_dyn : zinvtst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt PTshared
+	rm -f zinvtst_pt.o
+	$(MAKE) zinvtst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzinvtstF_pt_dyn : zlapack ztstlib_pt zl3lib_pt zl2lib_pt \
+                   zl1lib_pt zcblas_pt zfblas_pt PTshared
+	rm -f zinvtst_pt.o
+	$(MAKE) zinvtst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xztrtri_all_pt_dyn : xztrtritst_pt xztrtritstF_pt \
+                   xztrtritst_sys_pt xztrtritstF_sys_pt PTshared
+
+xztrtritst_pt_dyn : ztrtritst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt PTshared
+	rm -f ztrtritst_pt.o
+	$(MAKE) ztrtritst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xztrtritstF_pt_dyn : zlapack ztstlib_pt zl3lib_pt zl2lib_pt \
+                   zl1lib_pt zcblas_pt zfblas_pt PTshared
+	rm -f ztrtritst_pt.o
+	$(MAKE) ztrtritst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzuum_all_pt_dyn : xzuumtst_pt xzuumtstF_pt \
+                   xzuumtst_sys_pt xzuumtstF_sys_pt PTshared
+
+xzuumtst_pt_dyn : zuumtst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt PTshared
+	rm -f zuumtst_pt.o
+	$(MAKE) zuumtst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzuumtstF_pt_dyn : zlapack ztstlib_pt zl3lib_pt zl2lib_pt \
+                   zl1lib_pt zcblas_pt zfblas_pt PTshared
+	rm -f zuumtst_pt.o
+	$(MAKE) zuumtst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzslv_all_pt_dyn : xzslvtst_pt xzslvtstF_pt \
+                   xzslvtst_sys_pt xzslvtstF_sys_pt PTshared
+
+xzslvtst_pt_dyn : zslvtst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt PTshared
+	rm -f zslvtst_pt.o
+	$(MAKE) zslvtst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzslvtstF_pt_dyn : zlapack ztstlib_pt zl3lib_pt zl2lib_pt \
+                   zl1lib_pt zcblas_pt zfblas_pt PTshared
+	rm -f zslvtst_pt.o
+	$(MAKE) zslvtst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzllt_all_pt_dyn : xzllttst_pt xzllttstF_pt \
+                   xzllttst_sys_pt xzllttstF_sys_pt PTshared
+
+xzllttst_pt_dyn : zllttst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt PTshared
+	rm -f zllttst_pt.o
+	$(MAKE) zllttst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzllttstF_pt_dyn : zlapack ztstlib_pt zl3lib_pt zl2lib_pt \
+                   zl1lib_pt zcblas_pt zfblas_pt PTshared
+	rm -f zllttst_pt.o
+	$(MAKE) zllttst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzlu_all_pt_dyn : xzlutst_pt xzlutstF_pt \
+                   xzlutst_sys_pt xzlutstF_sys_pt PTshared
+
+xzlutst_pt_dyn : zlutst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt PTshared
+	rm -f zlutst_pt.o
+	$(MAKE) zlutst_pt.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutst_pt.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzlutstF_pt_dyn : zlapack ztstlib_pt zl3lib_pt zl2lib_pt \
+                   zl1lib_pt zcblas_pt zfblas_pt PTshared
+	rm -f zlutst_pt.o
+	$(MAKE) zlutst_pt.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutst_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzmmtst_pt_dyn : $(INCAdir)/atlas_type.h zgemmtst_pt.o zmmlib_pt ztstlib_pt PTshared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zgemmtst_pt.o \
+              $(TESTlib) $(zmmobj) $(LIBdir)/libf77blas.so \
+              $(LIBdir)/libcblas.so $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+
+xzl1blastst_dyn : zl1blastst.o zl1lib ztstlib shared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zl1blastst.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzl2blastst_dyn : zl2blastst.o zl2lib ztstlib shared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zl2blastst.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzl3blastst_dyn : $(INCAdir)/atlas_type.h zl3blastst.o \
+                   ztstlib zl3lib shared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zl3blastst.o \
+                   $(TESTlib) $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzinv_all_dyn : xzinvtst xzinvtstF \
+                   xzinvtst_sys xzinvtstF_sys shared
+
+xzinvtst_dyn : zinvtst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas shared
+	rm -f zinvtst.o
+	$(MAKE) zinvtst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzinvtstF_dyn : zlapack ztstlib zl3lib zl2lib \
+                   zl1lib zcblas zfblas shared
+	rm -f zinvtst.o
+	$(MAKE) zinvtst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xztrtri_all_dyn : xztrtritst xztrtritstF \
+                   xztrtritst_sys xztrtritstF_sys shared
+
+xztrtritst_dyn : ztrtritst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas shared
+	rm -f ztrtritst.o
+	$(MAKE) ztrtritst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xztrtritstF_dyn : zlapack ztstlib zl3lib zl2lib \
+                   zl1lib zcblas zfblas shared
+	rm -f ztrtritst.o
+	$(MAKE) ztrtritst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzuum_all_dyn : xzuumtst xzuumtstF \
+                   xzuumtst_sys xzuumtstF_sys shared
+
+xzuumtst_dyn : zuumtst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas shared
+	rm -f zuumtst.o
+	$(MAKE) zuumtst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzuumtstF_dyn : zlapack ztstlib zl3lib zl2lib \
+                   zl1lib zcblas zfblas shared
+	rm -f zuumtst.o
+	$(MAKE) zuumtst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzslv_all_dyn : xzslvtst xzslvtstF \
+                   xzslvtst_sys xzslvtstF_sys shared
+
+xzslvtst_dyn : zslvtst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas shared
+	rm -f zslvtst.o
+	$(MAKE) zslvtst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzslvtstF_dyn : zlapack ztstlib zl3lib zl2lib \
+                   zl1lib zcblas zfblas shared
+	rm -f zslvtst.o
+	$(MAKE) zslvtst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzllt_all_dyn : xzllttst xzllttstF \
+                   xzllttst_sys xzllttstF_sys shared
+
+xzllttst_dyn : zllttst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas shared
+	rm -f zllttst.o
+	$(MAKE) zllttst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzllttstF_dyn : zlapack ztstlib zl3lib zl2lib \
+                   zl1lib zcblas zfblas shared
+	rm -f zllttst.o
+	$(MAKE) zllttst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzlu_all_dyn : xzlutst xzlutstF \
+                   xzlutst_sys xzlutstF_sys shared
+
+xzlutst_dyn : zlutst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas shared
+	rm -f zlutst.o
+	$(MAKE) zlutst.o
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutst.o \
+                   $(TESTlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzlutstF_dyn : zlapack ztstlib zl3lib zl2lib \
+                   zl1lib zcblas zfblas shared
+	rm -f zlutst.o
+	$(MAKE) zlutst.o intf=-DTimeF77
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutst.o \
+                   $(TESTlib) $(FLAPACKlib) $(LIBdir)/liblapack.so \
+                   $(LIBdir)/libf77blas.so $(LIBdir)/libcblas.so \
+                   $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+xzmmtst_dyn : $(INCAdir)/atlas_type.h zgemmtst.o zmmlib ztstlib shared
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zgemmtst.o \
+              $(TESTlib) $(zmmobj) $(LIBdir)/libf77blas.so \
+              $(LIBdir)/libcblas.so $(LIBdir)/libatlas.so -Wl,--rpath $(LIBdir)
+
+
+xzl1blastst_mike : zl1blastst_mike.o zl1lib_pt ztstlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zl1blastst_mike.o $(MIKElib) \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xzl2blastst_mike : zl2blastst_pt.o zl2lib_pt ztstlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zl2blastst_mike.o $(MIKElib) \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xzl3blastst_mike : $(INCAdir)/atlas_type.h zl3blastst_pt.o \
+                   ztstlib_pt zl3lib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zl3blastst_mike.o $(MIKElib) \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+
+xzl1blastst_pt : zl1blastst_pt.o zl1lib_pt ztstlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zl1blastst_pt.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xzl2blastst_pt : zl2blastst_pt.o zl2lib_pt ztstlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zl2blastst_pt.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xzl3blastst_pt : $(INCAdir)/atlas_type.h zl3blastst_pt.o \
+                   ztstlib_pt zl3lib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zl3blastst_pt.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+zsanity_test_pt: xzinvtst_pt xzslvtst_pt xztrtritst_pt xzuumtst_pt
+	$(ATLRUN) $(BINdir) xzslvtst_pt -n 167 -r 83 -O 2 c r \
+                  >> $(BINdir)/ptsanity.out
+	$(ATLRUN) $(BINdir) xzslvtst_pt -n 167 -r 83 -O 2 c r -U 2 u l \
+                  >> $(BINdir)/ptsanity.out
+	$(ATLRUN) $(BINdir) xztrtritst_pt -n 167 -O 2 c r -U 2 u l \
+                  -D 2 n u >> $(BINdir)/ptsanity.out
+	$(ATLRUN) $(BINdir) xzuumtst_pt -n 167 -O 2 c r -U 2 u l \
+                  >> $(BINdir)/ptsanity.out
+xzinv_all_pt : xzinvtst_pt xzinvtstF_pt \
+                   xzinvtst_sb_pt xzinvtstF_sys_pt \
+                   xzinvtst_sb_pt xzinvtstF_sl_sb_pt \
+                   xzinvtstF_fl_ab_pt xzinvtstF_sl_ab_pt \
+                   xzinvtstF_fl_fb_pt xzinvtstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xzinvtst_pt : zinvtst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xzinvtstF_pt : zinvtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xzinvtst_sb_pt : zinvtst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xzinvtstF_sb_pt : zinvtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xzinvtstF_sl_sb_pt : zinvtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xzinvtstF_sl_ab_pt : zinvtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xzinvtstF_fl_ab_pt : zinvtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xzinvtstF_fl_sb_pt : zinvtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xzinvtstF_fl_fb_pt : zinvtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xztrtri_all_pt : xztrtritst_pt xztrtritstF_pt \
+                   xztrtritst_sb_pt xztrtritstF_sys_pt \
+                   xztrtritst_sb_pt xztrtritstF_sl_sb_pt \
+                   xztrtritstF_fl_ab_pt xztrtritstF_sl_ab_pt \
+                   xztrtritstF_fl_fb_pt xztrtritstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xztrtritst_pt : ztrtritst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xztrtritstF_pt : ztrtritstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xztrtritst_sb_pt : ztrtritst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xztrtritstF_sb_pt : ztrtritstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xztrtritstF_sl_sb_pt : ztrtritstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xztrtritstF_sl_ab_pt : ztrtritstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xztrtritstF_fl_ab_pt : ztrtritstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xztrtritstF_fl_sb_pt : ztrtritstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xztrtritstF_fl_fb_pt : ztrtritstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xzuum_all_pt : xzuumtst_pt xzuumtstF_pt \
+                   xzuumtst_sb_pt xzuumtstF_sys_pt \
+                   xzuumtst_sb_pt xzuumtstF_sl_sb_pt \
+                   xzuumtstF_fl_ab_pt xzuumtstF_sl_ab_pt \
+                   xzuumtstF_fl_fb_pt xzuumtstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xzuumtst_pt : zuumtst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xzuumtstF_pt : zuumtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xzuumtst_sb_pt : zuumtst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xzuumtstF_sb_pt : zuumtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xzuumtstF_sl_sb_pt : zuumtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xzuumtstF_sl_ab_pt : zuumtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xzuumtstF_fl_ab_pt : zuumtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xzuumtstF_fl_sb_pt : zuumtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xzuumtstF_fl_fb_pt : zuumtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xzslv_all_pt : xzslvtst_pt xzslvtstF_pt \
+                   xzslvtst_sb_pt xzslvtstF_sys_pt \
+                   xzslvtst_sb_pt xzslvtstF_sl_sb_pt \
+                   xzslvtstF_fl_ab_pt xzslvtstF_sl_ab_pt \
+                   xzslvtstF_fl_fb_pt xzslvtstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xzslvtst_pt : zslvtst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xzslvtstF_pt : zslvtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xzslvtst_sb_pt : zslvtst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xzslvtstF_sb_pt : zslvtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xzslvtstF_sl_sb_pt : zslvtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xzslvtstF_sl_ab_pt : zslvtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xzslvtstF_fl_ab_pt : zslvtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xzslvtstF_fl_sb_pt : zslvtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xzslvtstF_fl_fb_pt : zslvtstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xzllt_all_pt : xzllttst_pt xzllttstF_pt \
+                   xzllttst_sb_pt xzllttstF_sys_pt \
+                   xzllttst_sb_pt xzllttstF_sl_sb_pt \
+                   xzllttstF_fl_ab_pt xzllttstF_sl_ab_pt \
+                   xzllttstF_fl_fb_pt xzllttstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xzllttst_pt : zllttst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xzllttstF_pt : zllttstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xzllttst_sb_pt : zllttst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xzllttstF_sb_pt : zllttstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xzllttstF_sl_sb_pt : zllttstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xzllttstF_sl_ab_pt : zllttstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xzllttstF_fl_ab_pt : zllttstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xzllttstF_fl_sb_pt : zllttstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xzllttstF_fl_fb_pt : zllttstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xzlu_all_pt : xzlutst_pt xzlutstF_pt \
+                   xzlutst_sb_pt xzlutstF_sys_pt \
+                   xzlutst_sb_pt xzlutstF_sl_sb_pt \
+                   xzlutstF_fl_ab_pt xzlutstF_sl_ab_pt \
+                   xzlutstF_fl_fb_pt xzlutstF_fl_sb_pt
+
+# All ATLAS libs, C interface only
+xzlutst_pt : zlutst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xzlutstF_pt : zlutstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(PTCBLASlib) $(PTF77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xzlutst_sb_pt : zlutst_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutst_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xzlutstF_sb_pt : zlutstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutstF_pt.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xzlutstF_sl_sb_pt : zlutstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xzlutstF_sl_ab_pt : zlutstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutstF_pt.o \
+                   $(TESTlib) $(SLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xzlutstF_fl_ab_pt : zlutstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(PTF77BLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xzlutstF_fl_sb_pt : zlutstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xzlutstF_fl_fb_pt : zlutstF_pt.o zlapack ztstlib_pt zl3lib_pt \
+                  zl2lib_pt zl1lib_pt zcblas_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutstF_pt.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(PTCBLASlib) $(ATLASlib) $(LIBS)
+
+xzmmtst_pt : $(INCAdir)/atlas_type.h zgemmtst_pt.o zmmlib_pt ztstlib_pt
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zgemmtst_pt.o \
+              $(TESTlib) $(BLASlib) $(zmmobj) $(ATLASlib) $(LIBS)
+
+xzl1blastst : zl1blastst.o zl1lib ztstlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zl1blastst.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xzl2blastst : zl2blastst.o zl2lib ztstlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zl2blastst.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+xzl3blastst : $(INCAdir)/atlas_type.h zl3blastst.o \
+                   ztstlib zl3lib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zl3blastst.o \
+                   $(TESTlib) $(BLASlib) $(ATLASlib) $(LIBS)
+zsanity_test: xzinvtst xzslvtst xztrtritst xzuumtst
+	$(ATLRUN) $(BINdir) xzslvtst -n 167 -r 83 -O 2 c r \
+                  >> $(BINdir)/sanity.out
+	$(ATLRUN) $(BINdir) xzslvtst -n 167 -r 83 -O 2 c r -U 2 u l \
+                  >> $(BINdir)/sanity.out
+	$(ATLRUN) $(BINdir) xztrtritst -n 167 -O 2 c r -U 2 u l \
+                  -D 2 n u >> $(BINdir)/sanity.out
+	$(ATLRUN) $(BINdir) xzuumtst -n 167 -O 2 c r -U 2 u l \
+                  >> $(BINdir)/sanity.out
+xzinv_all : xzinvtst xzinvtstF \
+                   xzinvtst_sb xzinvtstF_sys \
+                   xzinvtst_sb xzinvtstF_sl_sb \
+                   xzinvtstF_fl_ab xzinvtstF_sl_ab \
+                   xzinvtstF_fl_fb xzinvtstF_fl_sb
+
+# All ATLAS libs, C interface only
+xzinvtst : zinvtst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xzinvtstF : zinvtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xzinvtst_sb : zinvtst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xzinvtstF_sb : zinvtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xzinvtstF_sl_sb : zinvtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xzinvtstF_sl_ab : zinvtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xzinvtstF_fl_ab : zinvtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xzinvtstF_fl_sb : zinvtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xzinvtstF_fl_fb : zinvtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xztrtri_all : xztrtritst xztrtritstF \
+                   xztrtritst_sb xztrtritstF_sys \
+                   xztrtritst_sb xztrtritstF_sl_sb \
+                   xztrtritstF_fl_ab xztrtritstF_sl_ab \
+                   xztrtritstF_fl_fb xztrtritstF_fl_sb
+
+# All ATLAS libs, C interface only
+xztrtritst : ztrtritst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xztrtritstF : ztrtritstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xztrtritst_sb : ztrtritst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xztrtritstF_sb : ztrtritstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xztrtritstF_sl_sb : ztrtritstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xztrtritstF_sl_ab : ztrtritstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xztrtritstF_fl_ab : ztrtritstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xztrtritstF_fl_sb : ztrtritstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xztrtritstF_fl_fb : ztrtritstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ ztrtritstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xzuum_all : xzuumtst xzuumtstF \
+                   xzuumtst_sb xzuumtstF_sys \
+                   xzuumtst_sb xzuumtstF_sl_sb \
+                   xzuumtstF_fl_ab xzuumtstF_sl_ab \
+                   xzuumtstF_fl_fb xzuumtstF_fl_sb
+
+# All ATLAS libs, C interface only
+xzuumtst : zuumtst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xzuumtstF : zuumtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xzuumtst_sb : zuumtst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xzuumtstF_sb : zuumtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xzuumtstF_sl_sb : zuumtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xzuumtstF_sl_ab : zuumtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xzuumtstF_fl_ab : zuumtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xzuumtstF_fl_sb : zuumtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xzuumtstF_fl_fb : zuumtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zuumtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xzslv_all : xzslvtst xzslvtstF \
+                   xzslvtst_sb xzslvtstF_sys \
+                   xzslvtst_sb xzslvtstF_sl_sb \
+                   xzslvtstF_fl_ab xzslvtstF_sl_ab \
+                   xzslvtstF_fl_fb xzslvtstF_fl_sb
+
+# All ATLAS libs, C interface only
+xzslvtst : zslvtst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xzslvtstF : zslvtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xzslvtst_sb : zslvtst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xzslvtstF_sb : zslvtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xzslvtstF_sl_sb : zslvtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xzslvtstF_sl_ab : zslvtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xzslvtstF_fl_ab : zslvtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xzslvtstF_fl_sb : zslvtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xzslvtstF_fl_fb : zslvtstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zslvtstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xzllt_all : xzllttst xzllttstF \
+                   xzllttst_sb xzllttstF_sys \
+                   xzllttst_sb xzllttstF_sl_sb \
+                   xzllttstF_fl_ab xzllttstF_sl_ab \
+                   xzllttstF_fl_fb xzllttstF_fl_sb
+
+# All ATLAS libs, C interface only
+xzllttst : zllttst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xzllttstF : zllttstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xzllttst_sb : zllttst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xzllttstF_sb : zllttstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xzllttstF_sl_sb : zllttstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xzllttstF_sl_ab : zllttstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xzllttstF_fl_ab : zllttstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xzllttstF_fl_sb : zllttstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xzllttstF_fl_fb : zllttstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zllttstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xzlu_all : xzlutst xzlutstF \
+                   xzlutst_sb xzlutstF_sys \
+                   xzlutst_sb xzlutstF_sl_sb \
+                   xzlutstF_fl_ab xzlutstF_sl_ab \
+                   xzlutstF_fl_fb xzlutstF_fl_sb
+
+# All ATLAS libs, C interface only
+xzlutst : zlutst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutst.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(ATLASlib) $(LIBS)
+# All ATLAS libs, F77 interface to lapack
+xzlutstF : zlutstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutstF.o \
+                   $(TESTlib) $(LAPACKlib) $(CBLASlib) $(F77BLASlib) \
+                   $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, C interface
+xzlutst_sb : zlutst.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutst.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# ATLAS lapack, system BLAS, F77 interface to lapack
+xzlutstF_sb : zlutstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutstF.o \
+                   $(TESTlib) $(LAPACKlib) $(BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# System lapack, system BLAS, F77 interface to lapack
+xzlutstF_sl_sb : zlutstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# System lapack, ATLAS BLAS, F77 interface to lapack
+xzlutstF_sl_ab : zlutstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutstF.o \
+                   $(TESTlib) $(SLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, ATLAS BLAS, F77 interface to lapack
+xzlutstF_fl_ab : zlutstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(F77BLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, system BLAS, F77 interface to lapack
+xzlutstF_fl_sb : zlutstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(BLASlib) $(ATLASlib) $(LIBS)
+# F77lapack, F77BLAS, F77 interface to lapack
+xzlutstF_fl_fb : zlutstF.o zlapack ztstlib zl3lib \
+                  zl2lib zl1lib zcblas
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zlutstF.o \
+                   $(TESTlib) $(FLAPACKlib) $(FBLASlib) \
+                   $(CBLASlib) $(ATLASlib) $(LIBS)
+
+xzmmtst : $(INCAdir)/atlas_type.h zgemmtst.o zmmlib ztstlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zgemmtst.o \
+              $(TESTlib) $(BLASlib) $(zmmobj) $(ATLASlib) $(LIBS)
+
+xzmmtst_big : $(INCAdir)/atlas_type.h zgemmtst_big.o zmmlib \
+              ztstlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zgemmtst_big.o \
+                   $(TESTlib) $(BLASlib) $(zmmobj) $(ATLASlib) $(LIBS)
+xzgpmmtst : $(INCAdir)/atlas_type.h zgpmmtst.o zmmlib ztstlib
+	$(FLINKER) $(FCLINKFLAGS) -o $@ zgpmmtst.o \
+              $(TESTlib) $(BLASlib) $(zmmobj) $(ATLASlib) $(LIBS)
+zgpmmtst.o : $(mySRCdir)/gpmmtst.c $(INCSdir)/atlas_misc.h $(INCAdir)/zmm.h \
+                  $(INCSdir)/atlas_lvl3.h $(INCSdir)/atlas_pkblas.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDCPLX $(mySRCdir)/gpmmtst.c
+	
+ztstlib_pt : ztstlib
+ztstlib :
+	cd $(TSTdir) ; $(MAKE) zlib
+
+zfblas_pt : zfblaslib_pt
+zfblaslib_pt :
+	cd $(FBLdir) ; $(MAKE) zptlib
+zfblas : zfblaslib
+zfblaslib :
+	cd $(FBLdir) ; $(MAKE) zlib
+zcblas_pt : zcblaslib_pt
+zcblaslib_pt :
+	cd $(CBLdir) ; $(MAKE) zptlib
+zcblas : zcblaslib
+zcblaslib :
+	cd $(CBLdir) ; $(MAKE) zlib
+
+zmmlib_pt : auxlib_pt
+	cd $(GMMdir) ; $(MAKE) zlib
+zmmlib : auxlib
+	cd $(GMMdir) ; $(MAKE) zlib
+zpklib : auxlib
+	cd $(BLDdir)/src/blas/pklevel3 ; $(MAKE) zlib
+
+zl2lib_pt : zl2lib
+	cd $(PTSdir)/blas/level2 ; $(MAKE) zlib
+zl2lib : zl1lib auxlib
+	cd $(GMVdir) ; $(MAKE) zlib
+	cd $(GR1dir) ; $(MAKE) zlib
+	cd $(L2Bdir) ; $(MAKE) zlib
+
+zl3lib_pt : zl3lib zmmlib_pt
+	cd $(PTSdir)/blas/level3 ; $(MAKE) zlib
+zl3lib : zmmlib
+	cd $(L3Bdir) ; $(MAKE) zlib
+
+zl1lib_pt : auxlib_pt zl1lib
+	cd $(PTSdir)/blas/level1 ; $(MAKE) zlib
+zl1lib : auxlib
+	cd $(L1Bdir) ; $(MAKE) zlvl1
+
+zlapack :
+	cd $(BLDdir)/src/lapack ; $(MAKE) zlib
+
+xzprintblk : zprintblk.o
+	$(CLINKER) -o $@ zprintblk.o $(ATLASlib)
+zprintblk.o : $(INCSdir)/atlas_mv.h $(INCSdir)/atlas_r1.h \
+                   $(INCAdir)/zmm.h $(mySRCdir)/printblk.c
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDCPLX $(mySRCdir)/printblk.c
+
+zl1blastst_mike.o : $(mySRCdir)/l1blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level1.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDCPLX -DATL_USEPTHREADS -DATL_MIKE $(mySRCdir)/l1blastst.c
+zl2blastst_mike.o : $(mySRCdir)/l2blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level2.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDCPLX -DATL_USEPTHREADS -DATL_MIKE $(mySRCdir)/l2blastst.c
+
+zl3blastst_mike.o : $(mySRCdir)/l3blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DATL_USEPTHREADS -DATL_MIKE -DDCPLX $(mySRCdir)/l3blastst.c
+zinvtst_mike.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DDCPLX $(mySRCdir)/invtst.c
+zinvtstF_mike.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DDCPLX $(mySRCdir)/invtst.c
+ztrtritst_mike.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DDCPLX $(mySRCdir)/trtritst.c
+ztrtritstF_mike.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DDCPLX $(mySRCdir)/trtritst.c
+zslvtst_mike.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DDCPLX $(mySRCdir)/slvtst.c
+zslvtstF_mike.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DDCPLX $(mySRCdir)/slvtst.c
+zlutst_mike.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DDCPLX $(mySRCdir)/lutst.c
+zlutstF_mike.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DDCPLX $(mySRCdir)/lutst.c
+zllttst_mike.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DDCPLX $(mySRCdir)/llttst.c
+zllttstF_mike.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DDCPLX $(mySRCdir)/llttst.c
+zuumtst_mike.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DATL_MIKE -DDCPLX $(mySRCdir)/uumtst.c
+zuumtstF_mike.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DATL_MIKE -DDCPLX $(mySRCdir)/uumtst.c
+
+zscaltst_mike.o : $(mySRCdir)/scaltst.c $(INCSdir)/atlas_misc.h \
+                  $(INCSdir)/atlas_f77.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATL_USEPTHREADS -DATL_MIKE -DDCPLX $(mySRCdir)/scaltst.c
+
+zgemmtst_mike.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
+                  $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATL_USEPTHREADS -DATL_MIKE -DDCPLX $(mySRCdir)/gemmtst.c
+
+zl1blastst_pt.o : $(mySRCdir)/l1blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level1.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDCPLX -DATL_USEPTHREADS $(mySRCdir)/l1blastst.c
+zl2blastst_pt.o : $(mySRCdir)/l2blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level2.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDCPLX -DATL_USEPTHREADS $(mySRCdir)/l2blastst.c
+
+zl3blastst_pt.o : $(mySRCdir)/l3blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DATL_USEPTHREADS -DDCPLX $(mySRCdir)/l3blastst.c
+zinvtst_pt.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DDCPLX $(mySRCdir)/invtst.c
+zinvtstF_pt.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DDCPLX $(mySRCdir)/invtst.c
+ztrtritst_pt.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DDCPLX $(mySRCdir)/trtritst.c
+ztrtritstF_pt.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DDCPLX $(mySRCdir)/trtritst.c
+zslvtst_pt.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DDCPLX $(mySRCdir)/slvtst.c
+zslvtstF_pt.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DDCPLX $(mySRCdir)/slvtst.c
+zlutst_pt.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DDCPLX $(mySRCdir)/lutst.c
+zlutstF_pt.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DDCPLX $(mySRCdir)/lutst.c
+zllttst_pt.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DDCPLX $(mySRCdir)/llttst.c
+zllttstF_pt.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DDCPLX $(mySRCdir)/llttst.c
+zuumtst_pt.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf) -DATL_USEPTHREADS -DDCPLX $(mySRCdir)/uumtst.c
+zuumtstF_pt.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77 -DATL_USEPTHREADS -DDCPLX $(mySRCdir)/uumtst.c
+
+zscaltst_pt.o : $(mySRCdir)/scaltst.c $(INCSdir)/atlas_misc.h \
+                  $(INCSdir)/atlas_f77.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATL_USEPTHREADS -DDCPLX $(mySRCdir)/scaltst.c
+
+zgemmtst_pt.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
+                  $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATL_USEPTHREADS -DDCPLX $(mySRCdir)/gemmtst.c
+
+zl1blastst.o : $(mySRCdir)/l1blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level1.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDCPLX  $(mySRCdir)/l1blastst.c
+zl2blastst.o : $(mySRCdir)/l2blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCSdir)/atlas_tst.h $(INCSdir)/atlas_level2.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDCPLX  $(mySRCdir)/l2blastst.c
+
+zl3blastst.o : $(mySRCdir)/l3blastst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT  -DDCPLX $(mySRCdir)/l3blastst.c
+zinvtst.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DDCPLX $(mySRCdir)/invtst.c
+zinvtstF.o : $(mySRCdir)/invtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DDCPLX $(mySRCdir)/invtst.c
+ztrtritst.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DDCPLX $(mySRCdir)/trtritst.c
+ztrtritstF.o : $(mySRCdir)/trtritst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DDCPLX $(mySRCdir)/trtritst.c
+zslvtst.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DDCPLX $(mySRCdir)/slvtst.c
+zslvtstF.o : $(mySRCdir)/slvtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DDCPLX $(mySRCdir)/slvtst.c
+zlutst.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DDCPLX $(mySRCdir)/lutst.c
+zlutstF.o : $(mySRCdir)/lutst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DDCPLX $(mySRCdir)/lutst.c
+zllttst.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DDCPLX $(mySRCdir)/llttst.c
+zllttstF.o : $(mySRCdir)/llttst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DDCPLX $(mySRCdir)/llttst.c
+zuumtst.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT $(intf)  -DDCPLX $(mySRCdir)/uumtst.c
+zuumtstF.o : $(mySRCdir)/uumtst.c $(INCSdir)/atlas_misc.h \
+                   $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h 
+	$(ICC) -o $@ -c $(ICCFLAGS) -DATLCINT -DTimeF77  -DDCPLX $(mySRCdir)/uumtst.c
+
+zscaltst.o : $(mySRCdir)/scaltst.c $(INCSdir)/atlas_misc.h \
+                  $(INCSdir)/atlas_f77.h 
+	$(ICC) -o $@ -c $(ICCFLAGS)  -DDCPLX $(mySRCdir)/scaltst.c
+
+zgemmtst.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
+                  $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS)  -DDCPLX $(mySRCdir)/gemmtst.c
+
+zgemmtst_big.o : $(mySRCdir)/gemmtst.c $(INCSdir)/atlas_misc.h \
+                 $(INCAdir)/zmm.h $(INCSdir)/atlas_lvl3.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDCPLX -DTRUST_BIG $(mySRCdir)/gemmtst.c
+c_sblas3.o : $(mySRCdir)/c_rblas3.c $(INCSdir)/cblas.h $(INCSdir)/cblas_test.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DSREAL -DF77INT_ $(mySRCdir)/c_rblas3.c
+
+c_dblas3.o : $(mySRCdir)/c_rblas3.c $(INCSdir)/cblas.h $(INCSdir)/cblas_test.h
+	$(ICC) -o $@ -c $(ICCFLAGS) -DDREAL -DF77INT_ $(mySRCdir)/c_rblas3.c
+
+cblas_xerbla.o : $(mySRCdir)/cblas_xerbla.c
+	$(ICC) $(ICCFLAGS) -o $@ -c $(mySRCdir)/cblas_xerbla.c
+
+force_build:
+
+
+$(INCAdir)/atlas_type.h : 
+	cd $(SYSdir) ; $(MAKE) RunTyp
+clean:
+	rm -f *.o *.grd
diff -Nur ATLAS.orig/makes/Make.cblas ATLAS/makes/Make.cblas
--- ATLAS.orig/makes/Make.cblas	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.cblas	2012-06-25 18:27:33.000000000 -0400
@@ -1,6 +1,8 @@
 include Make.inc
 mySRCdir = $(SRCdir)/interfaces/blas/C/src/
 
+include $(INCSdir)/gentoo_libtool.inc
+
 aobj = cblas_xerbla.o cblas_errprn.o
 sptlvl3obj = cblas_sptgemm.o cblas_sptsymm.o cblas_sptsyr2k.o cblas_sptsyrk.o \
              cblas_spttrmm.o cblas_spttrsm.o
diff -Nur ATLAS.orig/makes/Make.Clp ATLAS/makes/Make.Clp
--- ATLAS.orig/makes/Make.Clp	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.Clp	2012-06-25 18:27:33.000000000 -0400
@@ -1,6 +1,8 @@
 include Make.inc
 mySRCdir = $(SRCdir)/interfaces/lapack/C/src
 
+include $(INCSdir)/gentoo_libtool.inc
+
 sobj = clapack_sgesv.o clapack_sgetrf.o clapack_sgetri.o clapack_sgetrs.o \
        clapack_slauum.o clapack_sposv.o clapack_spotrf.o clapack_spotri.o \
        clapack_spotrs.o clapack_strtri.o
diff -Nur ATLAS.orig/makes/Make.f77blas ATLAS/makes/Make.f77blas
--- ATLAS.orig/makes/Make.f77blas	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.f77blas	2012-06-25 18:27:33.000000000 -0400
@@ -39,6 +39,9 @@
 #
 include Make.inc
 mySRCdir = $(SRCdir)/interfaces/blas/F77/src
+
+include $(INCSdir)/gentoo_libtool.inc
+
 #
 ########################################################################
 #
diff -Nur ATLAS.orig/makes/Make.Flp ATLAS/makes/Make.Flp
--- ATLAS.orig/makes/Make.Flp	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.Flp	2012-06-25 18:27:33.000000000 -0400
@@ -1,6 +1,8 @@
 include Make.inc
 mySRCdir = $(SRCdir)/interfaces/lapack/F77/src
 
+include $(INCSdir)/gentoo_libtool.inc
+
 sobj = ATL_f77wrap_sgesv.o ATL_f77wrap_sgetnb.o ATL_f77wrap_sgetrf.o \
        ATL_f77wrap_sgetri.o ATL_f77wrap_sgetrs.o ATL_f77wrap_slauum.o \
        ATL_f77wrap_sposv.o ATL_f77wrap_spotrf.o ATL_f77wrap_spotrs.o \
diff -Nur ATLAS.orig/makes/Make.gpmm ATLAS/makes/Make.gpmm
--- ATLAS.orig/makes/Make.gpmm	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.gpmm	2012-06-25 18:27:33.000000000 -0400
@@ -1,6 +1,8 @@
 include Make.inc
 mySRCdir = $(SRCdir)/src/blas/pklevel3/gpmm
 
+include $(INCSdir)/gentoo_libtool.inc
+
 all : lib
 lib : dlib slib zlib clib
 clean : sclean dclean cclean zclean
diff -Nur ATLAS.orig/makes/Make.l1ptblas ATLAS/makes/Make.l1ptblas
--- ATLAS.orig/makes/Make.l1ptblas	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.l1ptblas	2012-06-25 18:27:33.000000000 -0400
@@ -1,3 +1,5 @@
+include $(INCSdir)/gentoo_libtool.inc
+
 slib:
 dlib:
 clib:
diff -Nur ATLAS.orig/makes/Make.l1ref ATLAS/makes/Make.l1ref
--- ATLAS.orig/makes/Make.l1ref	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.l1ref	2012-06-25 18:27:33.000000000 -0400
@@ -39,6 +39,10 @@
 #
 include Make.inc
 mySRCdir = $(SRCdir)/src/blas/reference/level1
+
+include $(INCSdir)/gentoo_libtool.inc
+
+
 #
 ########################################################################
 #
diff -Nur ATLAS.orig/makes/Make.l1src ATLAS/makes/Make.l1src
--- ATLAS.orig/makes/Make.l1src	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.l1src	2012-06-25 18:27:33.000000000 -0400
@@ -1,6 +1,8 @@
 include Make.inc
 mySRCdir = $(SRCdir)/src/blas/level1
 
+include $(INCSdir)/gentoo_libtool.inc
+
 sobj = ATL_dsdot.o ATL_sdsdot.o ATL_srotg.o ATL_srotm.o ATL_srotmg.o
 
 dobj = ATL_drotg.o ATL_drotm.o ATL_drotmg.o
@@ -17,29 +19,29 @@
 
 sgen :
 	$(MAKE) Make_srot
-	$(MAKE) -f Make_srot lib
+	$(MAKE) -f Make_srot lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_saxpby
-	$(MAKE) -f Make_saxpby lib
+	$(MAKE) -f Make_saxpby lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_scpsc
-	$(MAKE) -f Make_scpsc lib
+	$(MAKE) -f Make_scpsc lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_sset
-	$(MAKE) -f Make_sset lib
+	$(MAKE) -f Make_sset lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_snrm2
-	$(MAKE) -f Make_snrm2 lib
+	$(MAKE) -f Make_snrm2 lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_sasum
-	$(MAKE) -f Make_sasum lib
+	$(MAKE) -f Make_sasum lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_sdot
-	$(MAKE) -f Make_sdot lib
+	$(MAKE) -f Make_sdot lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_sswap
-	$(MAKE) -f Make_sswap lib
+	$(MAKE) -f Make_sswap lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_sscal
-	$(MAKE) -f Make_sscal lib
+	$(MAKE) -f Make_sscal lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_scopy
-	$(MAKE) -f Make_scopy lib
+	$(MAKE) -f Make_scopy lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_saxpy
-	$(MAKE) -f Make_saxpy lib
+	$(MAKE) -f Make_saxpy lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_siamax
-	$(MAKE) -f Make_siamax lib
+	$(MAKE) -f Make_siamax lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 slvl1 : slib
 slib :   slib.grd
 	$(MAKE) sgen
@@ -52,29 +54,29 @@
 	rm -f $(sobj) s*.grd
 dgen :
 	$(MAKE) Make_drot
-	$(MAKE) -f Make_drot lib
+	$(MAKE) -f Make_drot lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_daxpby
-	$(MAKE) -f Make_daxpby lib
+	$(MAKE) -f Make_daxpby lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_dcpsc
-	$(MAKE) -f Make_dcpsc lib
+	$(MAKE) -f Make_dcpsc lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_dset
-	$(MAKE) -f Make_dset lib
+	$(MAKE) -f Make_dset lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_dnrm2
-	$(MAKE) -f Make_dnrm2 lib
+	$(MAKE) -f Make_dnrm2 lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_dasum
-	$(MAKE) -f Make_dasum lib
+	$(MAKE) -f Make_dasum lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_ddot
-	$(MAKE) -f Make_ddot lib
+	$(MAKE) -f Make_ddot lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_dswap
-	$(MAKE) -f Make_dswap lib
+	$(MAKE) -f Make_dswap lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_dscal
-	$(MAKE) -f Make_dscal lib
+	$(MAKE) -f Make_dscal lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_dcopy
-	$(MAKE) -f Make_dcopy lib
+	$(MAKE) -f Make_dcopy lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_daxpy
-	$(MAKE) -f Make_daxpy lib
+	$(MAKE) -f Make_daxpy lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_diamax
-	$(MAKE) -f Make_diamax lib
+	$(MAKE) -f Make_diamax lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 dlvl1 : dlib
 dlib :   dlib.grd
 	$(MAKE) dgen
@@ -87,31 +89,31 @@
 	rm -f $(dobj) d*.grd
 cgen :
 	$(MAKE) Make_crot
-	$(MAKE) -f Make_crot lib
+	$(MAKE) -f Make_crot lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_caxpby
-	$(MAKE) -f Make_caxpby lib
+	$(MAKE) -f Make_caxpby lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_ccpsc
-	$(MAKE) -f Make_ccpsc lib
+	$(MAKE) -f Make_ccpsc lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_cset
-	$(MAKE) -f Make_cset lib
+	$(MAKE) -f Make_cset lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_cnrm2
-	$(MAKE) -f Make_cnrm2 lib
+	$(MAKE) -f Make_cnrm2 lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_casum
-	$(MAKE) -f Make_casum lib
+	$(MAKE) -f Make_casum lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_cdot
-	$(MAKE) -f Make_cdot lib
+	$(MAKE) -f Make_cdot lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_cswap
-	$(MAKE) -f Make_cswap lib
+	$(MAKE) -f Make_cswap lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_cscal
-	$(MAKE) -f Make_cscal lib
+	$(MAKE) -f Make_cscal lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_ccopy
-	$(MAKE) -f Make_ccopy lib
+	$(MAKE) -f Make_ccopy lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_caxpy
-	$(MAKE) -f Make_caxpy lib
+	$(MAKE) -f Make_caxpy lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_ciamax
-	$(MAKE) -f Make_ciamax lib
+	$(MAKE) -f Make_ciamax lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_cdotc
-	$(MAKE) -f Make_cdotc lib
+	$(MAKE) -f Make_cdotc lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 clvl1 : clib
 clib : slib clib.grd
 	$(MAKE) cgen
@@ -124,31 +126,31 @@
 	rm -f $(cobj) c*.grd
 zgen :
 	$(MAKE) Make_zrot
-	$(MAKE) -f Make_zrot lib
+	$(MAKE) -f Make_zrot lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_zaxpby
-	$(MAKE) -f Make_zaxpby lib
+	$(MAKE) -f Make_zaxpby lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_zcpsc
-	$(MAKE) -f Make_zcpsc lib
+	$(MAKE) -f Make_zcpsc lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_zset
-	$(MAKE) -f Make_zset lib
+	$(MAKE) -f Make_zset lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_znrm2
-	$(MAKE) -f Make_znrm2 lib
+	$(MAKE) -f Make_znrm2 lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_zasum
-	$(MAKE) -f Make_zasum lib
+	$(MAKE) -f Make_zasum lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_zdot
-	$(MAKE) -f Make_zdot lib
+	$(MAKE) -f Make_zdot lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_zswap
-	$(MAKE) -f Make_zswap lib
+	$(MAKE) -f Make_zswap lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_zscal
-	$(MAKE) -f Make_zscal lib
+	$(MAKE) -f Make_zscal lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_zcopy
-	$(MAKE) -f Make_zcopy lib
+	$(MAKE) -f Make_zcopy lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_zaxpy
-	$(MAKE) -f Make_zaxpy lib
+	$(MAKE) -f Make_zaxpy lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_ziamax
-	$(MAKE) -f Make_ziamax lib
+	$(MAKE) -f Make_ziamax lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(MAKE) Make_zdotc
-	$(MAKE) -f Make_zdotc lib
+	$(MAKE) -f Make_zdotc lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 zlvl1 : zlib
 zlib : dlib zlib.grd
 	$(MAKE) zgen
diff -Nur ATLAS.orig/makes/Make.l1tune ATLAS/makes/Make.l1tune
--- ATLAS.orig/makes/Make.l1tune	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.l1tune	2012-06-25 18:27:33.000000000 -0400
@@ -1221,7 +1221,7 @@
 	./xaxpysrch -p c
 	cp -f GEN/* $(L1Bdir)/.
 ATL_caxpy_stub.o : $(mySRCdir)/AXPY/axpy_stub.c
-	$(ICC) $(ICCFLAGS) -DSCPLX -c -o $@ $(mySRCdir)/AXPY/axpy_stub.c
+	$(LIBTOOL) --tag=CC $(ICC) $(ICCFLAGS) -DSCPLX -c -o $@ $(mySRCdir)/AXPY/axpy_stub.c
 caxpytime.o : $(mySRCdir)/axpytime.c
 	$(ICC) $(ICCFLAGS) -o caxpytime.o -c -DSCPLX $(mySRCdir)/axpytime.c
 caxpytest.o : $(mySRCdir)/axpytest.c tstlib.grd
diff -Nur ATLAS.orig/makes/Make.l2 ATLAS/makes/Make.l2
--- ATLAS.orig/makes/Make.l2	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.l2	2012-06-25 18:27:33.000000000 -0400
@@ -39,6 +39,9 @@
 #
 include Make.inc
 mySRCdir = $(SRCdir)/src/blas/level2/
+
+include $(INCSdir)/gentoo_libtool.inc
+
 #
 ########################################################################
 #
diff -Nur ATLAS.orig/makes/Make.l2aux ATLAS/makes/Make.l2aux
--- ATLAS.orig/makes/Make.l2aux	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.l2aux	2012-06-25 18:27:33.000000000 -0400
@@ -39,6 +39,9 @@
 #
 include Make.inc
 mySRCdir = $(SRCdir)/src/blas/level2/kernel
+
+include $(INCSdir)/gentoo_libtool.inc
+
 #
 ########################################################################
 #
diff -Nur ATLAS.orig/makes/Make.l2kern ATLAS/makes/Make.l2kern
--- ATLAS.orig/makes/Make.l2kern	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.l2kern	2012-06-25 18:27:33.000000000 -0400
@@ -1,5 +1,7 @@
 include Make.inc
 
+include $(INCSdir)/gentoo_libtool.inc
+
 sobj = ATL_sgpmvUN_a1_x1_b0_y1.o ATL_sgpmvLN_a1_x1_b0_y1.o \
             ATL_sgpmvUN_a1_x1_b1_y1.o ATL_sgpmvLN_a1_x1_b1_y1.o \
             ATL_sgpmvUN_a1_x1_bX_y1.o ATL_sgpmvLN_a1_x1_bX_y1.o
diff -Nur ATLAS.orig/makes/Make.l2ptblas ATLAS/makes/Make.l2ptblas
--- ATLAS.orig/makes/Make.l2ptblas	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.l2ptblas	2012-06-25 18:27:33.000000000 -0400
@@ -1,3 +1,5 @@
+include $(INCSdir)/gentoo_libtool.inc
+
 slib:
 dlib:
 clib:
diff -Nur ATLAS.orig/makes/Make.l2ref ATLAS/makes/Make.l2ref
--- ATLAS.orig/makes/Make.l2ref	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.l2ref	2012-06-25 18:27:33.000000000 -0400
@@ -39,6 +39,9 @@
 #
 include Make.inc
 mySRCdir = $(SRCdir)/src/blas/reference/level2
+
+include $(INCSdir)/gentoo_libtool.inc
+
 #
 ########################################################################
 # 
diff -Nur ATLAS.orig/makes/Make.l2src ATLAS/makes/Make.l2src
--- ATLAS.orig/makes/Make.l2src	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.l2src	2012-06-25 18:27:33.000000000 -0400
@@ -1,5 +1,7 @@
 include Make.inc
 
+include $(INCSdir)/gentoo_libtool.inc
+
 sobj = ATL_sktrmvLNN.o ATL_sktrmvLNU.o ATL_sktrmvLTN.o ATL_sktrmvLTU.o \
        ATL_sktrmvUNN.o ATL_sktrmvUNU.o ATL_sktrmvUTN.o ATL_sktrmvUTU.o \
        ATL_strmv.o ATL_strmvLN.o ATL_strmvLT.o ATL_strmvUN.o ATL_strmvUT.o
diff -Nur ATLAS.orig/makes/Make.l3 ATLAS/makes/Make.l3
--- ATLAS.orig/makes/Make.l3	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.l3	2012-06-25 18:27:33.000000000 -0400
@@ -39,6 +39,9 @@
 #
 include Make.inc
 mySRCdir = $(SRCdir)/src/blas/level3
+
+include $(INCSdir)/gentoo_libtool.inc
+
 #
 ########################################################################
 #
diff -Nur ATLAS.orig/makes/Make.l3aux ATLAS/makes/Make.l3aux
--- ATLAS.orig/makes/Make.l3aux	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.l3aux	2012-06-25 18:27:33.000000000 -0400
@@ -39,6 +39,9 @@
 #
 include Make.inc
 mySRCdir = $(SRCdir)/src/blas/level3/rblas
+
+include $(INCSdir)/gentoo_libtool.inc
+
 #
 ########################################################################
 #
diff -Nur ATLAS.orig/makes/Make.l3kern ATLAS/makes/Make.l3kern
--- ATLAS.orig/makes/Make.l3kern	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.l3kern	2012-06-25 18:27:33.000000000 -0400
@@ -1,6 +1,8 @@
 include Make.inc
 mySRCdir = $(SRCdir)/src/blas/level3/kernel
 
+include $(INCSdir)/gentoo_libtool.inc
+
 sobj = ATL_ssycopyL_a1.o ATL_ssycopyL_aX.o ATL_ssycopyU_a1.o \
        ATL_ssycopyU_aX.o ATL_ssymmLL.o ATL_ssymmLU.o ATL_ssymmRL.o \
        ATL_ssymmRU.o ATL_ssyr2kLN.o ATL_ssyr2kLT.o ATL_ssyr2kUN.o \
diff -Nur ATLAS.orig/makes/Make.l3ptblas ATLAS/makes/Make.l3ptblas
--- ATLAS.orig/makes/Make.l3ptblas	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.l3ptblas	2012-06-25 18:27:33.000000000 -0400
@@ -40,6 +40,9 @@
 #
 include Make.inc
 mySRCdir = $(SRCdir)/src/pthreads/blas/level3
+
+include $(INCSdir)/gentoo_libtool.inc
+
 #
 ########################################################################
 #
diff -Nur ATLAS.orig/makes/Make.l3ref ATLAS/makes/Make.l3ref
--- ATLAS.orig/makes/Make.l3ref	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.l3ref	2012-06-25 18:27:33.000000000 -0400
@@ -39,6 +39,9 @@
 #
 include Make.inc
 mySRCdir = $(SRCdir)/src/blas/reference/level3
+
+include $(INCSdir)/gentoo_libtool.inc
+
 #
 ########################################################################
 #
diff -Nur ATLAS.orig/makes/Make.l3tune ATLAS/makes/Make.l3tune
--- ATLAS.orig/makes/Make.l3tune	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.l3tune	2012-06-25 18:27:33.000000000 -0400
@@ -1,6 +1,8 @@
 include Make.inc
 mySRCdir = $(SRCdir)/tune/blas/level3
 
+include $(INCSdir)/gentoo_libtool.inc
+
 $(SYSdir)/time.o:
 	cd $(SYSdir) ; $(MAKE) time.o
 
@@ -33,16 +35,16 @@
 
 force_build :
 
-res/atlas_trsmNB.h : xgen_trsmnb res/sTRSM_NB res/dTRSM_NB
-	./xgen_trsmnb
-	rm -f $(INCAdir)/atlas_trsmNB.h
-	cp res/atlas_trsmNB.h $(INCAdir)/.
+res/atlas_trsmNB.h : 
+#	./xgen_trsmnb
+#	rm -f $(INCAdir)/atlas_trsmNB.h
+#	cp res/atlas_trsmNB.h $(INCAdir)/.
 xgen_trsmnb : $(mySRCdir)/gen_trsmnb.c
 	$(XCC) $(XCCFLAGS) -o $@ $(mySRCdir)/gen_trsmnb.c
 
 res/sTRSM_NB :
-	$(MAKE) xsinvtrsm
-	$(ATLRUN) $(L3Tdir) xsinvtrsm
+#	$(MAKE) xsinvtrsm
+#	$(ATLRUN) $(L3Tdir) xsinvtrsm
 xsinvtrsm : sinvtrsm.o ATL_strsm.o 
 	$(MAKE) sbindep
 	$(FLINKER) $(FCLINKFLAGS) -o $@ sinvtrsm.o ATL_strsm.o \
@@ -57,8 +59,8 @@
 	$(SKC) -o $@ -c $(sKCFLAGS) -DSREAL $(mySRCdir)/ATL_trsm.c
 
 res/dTRSM_NB :
-	$(MAKE) xdinvtrsm
-	$(ATLRUN) $(L3Tdir) xdinvtrsm
+#	$(MAKE) xdinvtrsm
+#	$(ATLRUN) $(L3Tdir) xdinvtrsm
 xdinvtrsm : dinvtrsm.o ATL_dtrsm.o 
 	$(MAKE) dbindep
 	$(FLINKER) $(FCLINKFLAGS) -o $@ dinvtrsm.o ATL_dtrsm.o \
@@ -73,8 +75,8 @@
 	$(DKC) -o $@ -c $(dKCFLAGS) -DDREAL $(mySRCdir)/ATL_trsm.c
 
 res/cTRSM_NB :
-	$(MAKE) xcinvtrsm
-	$(ATLRUN) $(L3Tdir) xcinvtrsm
+#	$(MAKE) xcinvtrsm
+#	$(ATLRUN) $(L3Tdir) xcinvtrsm
 xcinvtrsm : cinvtrsm.o ATL_ctrsm.o 
 	$(MAKE) cbindep
 	$(FLINKER) $(FCLINKFLAGS) -o $@ cinvtrsm.o ATL_ctrsm.o \
@@ -89,8 +91,8 @@
 	$(CKC) -o $@ -c $(cKCFLAGS) -DSCPLX $(mySRCdir)/ATL_trsm.c
 
 res/zTRSM_NB :
-	$(MAKE) xzinvtrsm
-	$(ATLRUN) $(L3Tdir) xzinvtrsm
+#	$(MAKE) xzinvtrsm
+#	$(ATLRUN) $(L3Tdir) xzinvtrsm
 xzinvtrsm : zinvtrsm.o ATL_ztrsm.o 
 	$(MAKE) zbindep
 	$(FLINKER) $(FCLINKFLAGS) -o $@ zinvtrsm.o ATL_ztrsm.o \
diff -Nur ATLAS.orig/makes/Make.lpsrc ATLAS/makes/Make.lpsrc
--- ATLAS.orig/makes/Make.lpsrc	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.lpsrc	2012-06-25 18:27:33.000000000 -0400
@@ -1,6 +1,8 @@
 include Make.inc
 mySRCdir = $(SRCdir)/src/lapack
 
+include $(INCSdir)/gentoo_libtool.inc
+
 all : lib
 lib : dlib slib zlib clib
 clean : sclean dclean cclean zclean
diff -Nur ATLAS.orig/makes/Make.miptblas ATLAS/makes/Make.miptblas
--- ATLAS.orig/makes/Make.miptblas	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.miptblas	2012-06-25 18:27:33.000000000 -0400
@@ -39,6 +39,9 @@
 #
 include Make.inc
 mySRCdir = $(SRCdir)/src/pthreads/misc
+
+include $(INCSdir)/gentoo_libtool.inc
+
 #
 ########################################################################
 #
diff -Nur ATLAS.orig/makes/Make.mmsrc ATLAS/makes/Make.mmsrc
--- ATLAS.orig/makes/Make.mmsrc	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.mmsrc	2012-06-25 18:27:33.000000000 -0400
@@ -1,6 +1,8 @@
 include Make.inc
 mySRCdir = $(SRCdir)/src/blas/gemm
 
+include $(INCSdir)/gentoo_libtool.inc
+
 $(INCAdir)/atlas_type.h :
 	cd $(SYSdir) ; $(MAKE) RunTyp
 
@@ -82,7 +84,7 @@
 sclean :
 	rm -f $(sobj) s*.grd
 scleanuplib :
-	cd KERNEL ; $(MAKE) -f sMakefile slib
+	cd KERNEL ; $(MAKE) -f sMakefile slib ICC="$(ICC)"
 
 slib : 
 	$(MAKE) auxillib scleanuplib susergemm
@@ -223,7 +225,7 @@
 dclean :
 	rm -f $(dobj) d*.grd
 dcleanuplib :
-	cd KERNEL ; $(MAKE) -f dMakefile dlib
+	cd KERNEL ; $(MAKE) -f dMakefile dlib ICC="$(ICC)"
 
 dlib : 
 	$(MAKE) auxillib dcleanuplib dusergemm
@@ -364,7 +366,7 @@
 cclean :
 	rm -f $(cobj) c*.grd
 ccleanuplib :
-	cd KERNEL ; $(MAKE) -f cMakefile clib
+	cd KERNEL ; $(MAKE) -f cMakefile clib ICC="$(ICC)"
 
 clib : 
 	$(MAKE) auxillib ccleanuplib cusergemm
@@ -616,7 +618,7 @@
 zclean :
 	rm -f $(zobj) z*.grd
 zcleanuplib :
-	cd KERNEL ; $(MAKE) -f zMakefile zlib
+	cd KERNEL ; $(MAKE) -f zMakefile zlib ICC="$(ICC)"
 
 zlib : 
 	$(MAKE) auxillib zcleanuplib zusergemm
diff -Nur ATLAS.orig/makes/Make.mvsrc ATLAS/makes/Make.mvsrc
--- ATLAS.orig/makes/Make.mvsrc	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.mvsrc	2012-06-25 18:27:33.000000000 -0400
@@ -1,6 +1,8 @@
 include Make.inc
 mySRCdir = $(SRCdir)/src/blas/gemv
 
+include $(INCSdir)/gentoo_libtool.inc
+
 sobj = ATL_sgemv.o
 
 dobj = ATL_dgemv.o
@@ -19,7 +21,7 @@
 clean : sclean dclean cclean zclean
 
 dlib : 
-	$(PMAKE) -f Make_dmv dlib
+	$(PMAKE) -f Make_dmv dlib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(PMAKE) dlib.grd
 dlib.grd : $(dobj)
 	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(dobj)
@@ -28,7 +30,7 @@
 dclean : 
 	rm -f $(dobj) d*.grd
 slib : 
-	$(PMAKE) -f Make_smv slib
+	$(PMAKE) -f Make_smv slib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(PMAKE) slib.grd
 slib.grd : $(sobj)
 	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(sobj)
@@ -37,7 +39,7 @@
 sclean : 
 	rm -f $(sobj) s*.grd
 clib : 
-	$(PMAKE) -f Make_cmv clib
+	$(PMAKE) -f Make_cmv clib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(PMAKE) clib.grd
 clib.grd : $(cobj)
 	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(cobj)
@@ -46,7 +48,7 @@
 cclean : 
 	rm -f $(cobj) c*.grd
 zlib : 
-	$(PMAKE) -f Make_zmv zlib
+	$(PMAKE) -f Make_zmv zlib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 	$(PMAKE) zlib.grd
 zlib.grd : $(zobj)
 	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(zobj)
diff -Nur ATLAS.orig/makes/Make.mvtune ATLAS/makes/Make.mvtune
--- ATLAS.orig/makes/Make.mvtune	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.mvtune	2012-06-25 18:27:33.000000000 -0400
@@ -178,26 +178,26 @@
 sgemvtune.o : $(mySRCdir)/gemvtune.c
 	$(ICC) -c $(ICCFLAGS) -o $@ -DSREAL $(mySRCdir)/gemvtune.c
 ATL_ssymv.o : $(mySRCdir)/ATL_symv.c atlas_smvN.h atlas_smvS.h
-	$(SKC) -c -I$(MVTdir) $(sKCFLAGS) -o $@ -DSREAL $(mySRCdir)/ATL_symv.c
+	$(LIBTOOL) --tag=CC $(SKC) -c -I$(MVTdir) $(sKCFLAGS) -o $@ -DSREAL $(mySRCdir)/ATL_symv.c
 ATL_sgemv.o : ATL_gemv.c atlas_smv.h atlas_smvN.h atlas_smvT.h
-	$(SKC) -c -I$(MVTdir) $(sKCFLAGS) -o $@ -DSREAL ATL_gemv.c
+	$(LIBTOOL) --tag=CC $(SKC) -c -I$(MVTdir) $(sKCFLAGS) -o $@ -DSREAL ATL_gemv.c
 ATL_sgemvN_b0.o : ATL_sgemvN.c
-	$(sMVCC) -c -I$(MVTdir) $(sMVFLAGS) $(CDEFS) $(EXTFLAGS) -o $@ \
+	$(LIBTOOL) --tag=CC $(sMVCC) -c -I$(MVTdir) $(sMVFLAGS) $(CDEFS) $(EXTFLAGS) -o $@ \
               -DSREAL -DBETA0 -DALPHA1 ATL_sgemvN.c
 ATL_sgemvN_b1.o : ATL_sgemvN.c
-	$(sMVCC) -c -I$(MVTdir) $(sMVFLAGS) $(CDEFS) $(EXTFLAGS) -o $@ \
+	$(LIBTOOL) --tag=CC $(sMVCC) -c -I$(MVTdir) $(sMVFLAGS) $(CDEFS) $(EXTFLAGS) -o $@ \
               -DSREAL -DBETA1 -DALPHA1 ATL_sgemvN.c
 ATL_sgemvN_bX.o : ATL_sgemvN.c
-	$(sMVCC) -c -I$(MVTdir) $(sMVFLAGS) $(CDEFS) $(EXTFLAGS) -o $@ \
+	$(LIBTOOL) --tag=CC $(sMVCC) -c -I$(MVTdir) $(sMVFLAGS) $(CDEFS) $(EXTFLAGS) -o $@ \
               -DSREAL -DBETAX -DALPHA1 ATL_sgemvN.c
 ATL_sgemvT_b0.o : ATL_sgemvT.c
-	$(sMVCC) -c -I$(MVTdir) $(sMVFLAGS) $(CDEFS) $(EXTFLAGS) -o $@ \
+	$(LIBTOOL) --tag=CC $(sMVCC) -c -I$(MVTdir) $(sMVFLAGS) $(CDEFS) $(EXTFLAGS) -o $@ \
               -DSREAL -DBETA0 -DALPHA1 ATL_sgemvT.c
 ATL_sgemvT_b1.o : ATL_sgemvT.c
-	$(sMVCC) -c -I$(MVTdir) $(sMVFLAGS) $(CDEFS) $(EXTFLAGS) -o $@ \
+	$(LIBTOOL) --tag=CC $(sMVCC) -c -I$(MVTdir) $(sMVFLAGS) $(CDEFS) $(EXTFLAGS) -o $@ \
               -DSREAL -DBETA1 -DALPHA1 ATL_sgemvT.c
 ATL_sgemvT_bX.o : ATL_sgemvT.c
-	$(sMVCC) -c -I$(MVTdir) $(sMVFLAGS) $(CDEFS) $(EXTFLAGS) -o $@ \
+	$(LIBTOOL) --tag=CC $(sMVCC) -c -I$(MVTdir) $(sMVFLAGS) $(CDEFS) $(EXTFLAGS) -o $@ \
               -DSREAL -DBETAX -DALPHA1 ATL_sgemvT.c
 
 res/sMVRES : xmvsearch force_build
diff -Nur ATLAS.orig/makes/Make.pkl3 ATLAS/makes/Make.pkl3
--- ATLAS.orig/makes/Make.pkl3	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.pkl3	2012-06-25 18:27:33.000000000 -0400
@@ -1,6 +1,8 @@
 include Make.inc
 mySRCdir = $(SRCdir)/src/blas/pklevel3
 
+include $(INCSdir)/gentoo_libtool.inc
+
 all : lib
 lib : dlib slib zlib clib
 clean : sclean dclean cclean zclean
diff -Nur ATLAS.orig/makes/Make.r1src ATLAS/makes/Make.r1src
--- ATLAS.orig/makes/Make.r1src	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.r1src	2012-06-25 18:27:33.000000000 -0400
@@ -1,6 +1,8 @@
 include Make.inc
 mySRCdir = $(SRCdir)/src/blas/ger
 
+include $(INCSdir)/gentoo_libtool.inc
+
 sobj = ATL_sger.o
 dobj = ATL_dger.o
 cobj = ATL_cgeru.o ATL_cgerc.o
@@ -17,7 +19,7 @@
 
 dlib :
 	$(PMAKE) dlib.grd
-	$(PMAKE) -f Make_dr1 lib
+	$(PMAKE) -f Make_dr1 lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 dlib.grd : $(dobj)
 	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(dobj)
 	$(RANLIB) $(ATLASlib)
@@ -26,7 +28,7 @@
 	rm -f $(dobj) d*.grd
 slib :
 	$(PMAKE) slib.grd
-	$(PMAKE) -f Make_sr1 lib
+	$(PMAKE) -f Make_sr1 lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 slib.grd : $(sobj)
 	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(sobj)
 	$(RANLIB) $(ATLASlib)
@@ -35,7 +37,7 @@
 	rm -f $(sobj) s*.grd
 clib :
 	$(PMAKE) clib.grd
-	$(PMAKE) -f Make_cr1 lib
+	$(PMAKE) -f Make_cr1 lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 clib.grd : $(cobj)
 	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(cobj)
 	$(RANLIB) $(ATLASlib)
@@ -44,7 +46,7 @@
 	rm -f $(cobj) c*.grd
 zlib :
 	$(PMAKE) zlib.grd
-	$(PMAKE) -f Make_zr1 lib
+	$(PMAKE) -f Make_zr1 lib ICC="$(ICC)" SKC="$(SKC)" DKC="$(DKC)"
 zlib.grd : $(zobj)
 	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(zobj)
 	$(RANLIB) $(ATLASlib)
diff -Nur ATLAS.orig/makes/Make.r1tune ATLAS/makes/Make.r1tune
--- ATLAS.orig/makes/Make.r1tune	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.r1tune	2012-06-25 18:27:33.000000000 -0400
@@ -74,12 +74,12 @@
 ATL_sger.o : ATL_ger.c atlas_sr1.h
 	$(ICC) -c $(ICCFLAGS) -o $@ -DSREAL -I$(R1Tdir) ATL_ger.c
 ATL_sger1.o : ATL_sger1.c
-	$(sR1CC) -c $(CDEFS) $(sR1CFLAGS) -I$(R1Tdir) -o $@ -DSREAL ATL_sger1.c
+	$(LIBTOOL) --tag=CC $(sR1CC) -c $(CDEFS) $(sR1CFLAGS) -I$(R1Tdir) -o $@ -DSREAL ATL_sger1.c
 ATL_sger1c.o : ATL_sger1.c
-	$(sR1CC) -c $(CDEFS) $(sR1CFLAGS) -I$(R1Tdir) -o $@ -DSREAL -DConj_ \
+	$(LIBTOOL) --tag=CC $(sR1CC) -c $(CDEFS) $(sR1CFLAGS) -I$(R1Tdir) -o $@ -DSREAL -DConj_ \
               ATL_sger1.c
 ATL_sger1_dummy.o : ATL_sger1_dummy.c
-	$(ICC) -c $(ICCFLAGS) -I$(R1Tdir) -o $@ -DSREAL ATL_sger1_dummy.c
+	$(LIBTOOL) --tag=CC $(ICC) -c $(ICCFLAGS) -I$(R1Tdir) -o $@ -DSREAL ATL_sger1_dummy.c
 
 res/sR1RES : xr1search force_build
 	./xr1search -p s
@@ -177,14 +177,14 @@
 cger1tune.o : $(mySRCdir)/ger1tune.c
 	$(ICC) -c $(ICCFLAGS) -o $@ -DSCPLX $(mySRCdir)/ger1tune.c
 ATL_cger.o : ATL_ger.c atlas_cr1.h
-	$(ICC) -c $(ICCFLAGS) -o $@ -DSCPLX -I$(R1Tdir) ATL_ger.c
+	$(LIBTOOL) --tag=CC $(ICC) -c $(ICCFLAGS) -o $@ -DSCPLX -I$(R1Tdir) ATL_ger.c
 ATL_cger1.o : ATL_cger1.c
-	$(cR1CC) -c $(CDEFS) $(cR1CFLAGS) -I$(R1Tdir) -o $@ -DSCPLX ATL_cger1.c
+	$(LIBTOOL) --tag=CC $(cR1CC) -c $(CDEFS) $(cR1CFLAGS) -I$(R1Tdir) -o $@ -DSCPLX ATL_cger1.c
 ATL_cger1c.o : ATL_cger1.c
-	$(cR1CC) -c $(CDEFS) $(cR1CFLAGS) -I$(R1Tdir) -o $@ -DSCPLX -DConj_ \
+	$(LIBTOOL) --tag=CC $(cR1CC) -c $(CDEFS) $(cR1CFLAGS) -I$(R1Tdir) -o $@ -DSCPLX -DConj_ \
               ATL_cger1.c
 ATL_cger1_dummy.o : ATL_cger1_dummy.c
-	$(ICC) -c $(ICCFLAGS) -I$(R1Tdir) -o $@ -DSCPLX ATL_cger1_dummy.c
+	$(LIBTOOL) --tag=CC $(ICC) -c $(ICCFLAGS) -I$(R1Tdir) -o $@ -DSCPLX ATL_cger1_dummy.c
 
 res/cR1RES : xr1search force_build
 	./xr1search -p c
@@ -230,14 +230,14 @@
 zger1tune.o : $(mySRCdir)/ger1tune.c
 	$(ICC) -c $(ICCFLAGS) -o $@ -DDCPLX $(mySRCdir)/ger1tune.c
 ATL_zger.o : ATL_ger.c atlas_zr1.h
-	$(ICC) -c $(ICCFLAGS) -o $@ -DDCPLX -I$(R1Tdir) ATL_ger.c
+	$(LIBTOOL) --tag=CC $(ICC) -c $(ICCFLAGS) -o $@ -DDCPLX -I$(R1Tdir) ATL_ger.c
 ATL_zger1.o : ATL_zger1.c
-	$(zR1CC) -c $(CDEFS) $(zR1CFLAGS) -I$(R1Tdir) -o $@ -DDCPLX ATL_zger1.c
+	$(LIBTOOL) --tag=CC $(zR1CC) -c $(CDEFS) $(zR1CFLAGS) -I$(R1Tdir) -o $@ -DDCPLX ATL_zger1.c
 ATL_zger1c.o : ATL_zger1.c
-	$(zR1CC) -c $(CDEFS) $(zR1CFLAGS) -I$(R1Tdir) -o $@ -DDCPLX -DConj_ \
+	$(LIBTOOL) --tag=CC $(zR1CC) -c $(CDEFS) $(zR1CFLAGS) -I$(R1Tdir) -o $@ -DDCPLX -DConj_ \
               ATL_zger1.c
 ATL_zger1_dummy.o : ATL_zger1_dummy.c
-	$(ICC) -c $(ICCFLAGS) -I$(R1Tdir) -o $@ -DDCPLX ATL_zger1_dummy.c
+	$(LIBTOOL) --tag=CC $(ICC) -c $(ICCFLAGS) -I$(R1Tdir) -o $@ -DDCPLX ATL_zger1_dummy.c
 
 res/zR1RES : xr1search force_build
 	./xr1search -p z
diff -Nur ATLAS.orig/makes/Make.sprk ATLAS/makes/Make.sprk
--- ATLAS.orig/makes/Make.sprk	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.sprk	2012-06-25 18:27:33.000000000 -0400
@@ -1,6 +1,8 @@
 include Make.inc
 mySRCdir = $(SRCdir)/src/blas/pklevel3/sprk
 
+include $(INCSdir)/gentoo_libtool.inc
+
 all : lib
 lib : dlib slib zlib clib
 clean : sclean dclean cclean zclean
diff -Nur ATLAS.orig/makes/Make.sysinfo ATLAS/makes/Make.sysinfo
--- ATLAS.orig/makes/Make.sysinfo	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.sysinfo	2012-06-25 18:27:33.000000000 -0400
@@ -111,12 +111,12 @@
 ATL_cputime.c : 
 	cp $(mySRCdir)/ATL_cputime.c .
 ATL_cputime.o : ATL_cputime.c
-	$(ICC) -c $(ICCFLAGS) ATL_cputime.c
+	$(LIBTOOL) --tag=CC $(ICC) -c $(ICCFLAGS) ATL_cputime.c
 
 ATL_walltime.c : 
 	cp $(mySRCdir)/ATL_walltime.c .
 ATL_walltime.o : ATL_walltime.c
-	$(ICC) -c $(ICCFLAGS) ATL_walltime.c
+	$(LIBTOOL) --tag=CC $(ICC) -c $(ICCFLAGS) ATL_walltime.c
 
 ATL_Xwalltime.o : ATL_walltime.o
 	$(XCC) $(XCCFLAGS) -c -o ATL_Xwalltime.o ATL_walltime.c
diff -Nur ATLAS.orig/makes/Make.tstsrc ATLAS/makes/Make.tstsrc
--- ATLAS.orig/makes/Make.tstsrc	2011-05-14 13:33:24.000000000 -0400
+++ ATLAS/makes/Make.tstsrc	2012-06-25 18:27:33.000000000 -0400
@@ -1,6 +1,8 @@
 include Make.inc
 mySRCdir = $(SRCdir)/src/testing
 
+include $(INCSdir)/gentoo_libtool.inc
+
 INCdep = $(INCSdir)/atlas_misc.h $(INCSdir)/atlas_f77.h \
          $(INCSdir)/atlas_tst.h
 INCdep1 = $(INCSdir)/atlas_misc.h $(INCSdir)/atlas_tst.h
diff -Nur ATLAS.orig/Make.top ATLAS/Make.top
--- ATLAS.orig/Make.top	2011-05-14 13:33:23.000000000 -0400
+++ ATLAS/Make.top	2012-06-25 18:27:33.000000000 -0400
@@ -24,6 +24,75 @@
 	- fgrep -e fault -e FAULT -e error -e ERROR -e fail -e FAIL \
 	        bin/sanity.out
 	@ echo "DONE"
+
+
+shared: INSTALLER = cp
+shared: libatlas.so libblas.so libcblas.so
+
+shared-strip: INSTALLER = install -s
+shared-strip: libatlas.so libblas.so libcblas.so
+
+ptshared: INSTALLER = cp
+ptshared: libptblas.so libptcblas.so
+
+ptshared-strip: INSTALLER = install -s
+ptshared-strip: libptblas.so libptcblas.so
+
+libatlas.so:
+	mkdir -p gentoo/libs
+	@echo
+	@echo Linking a really big library, please be patient...
+	@echo
+	cd gentoo/libatlas.a ; \
+	libtool --mode=link --tag=CC $(CC)  $(LIBS) -o libatlas.la \
+		*.lo -rpath /usr/$(LIBDIR) ; \
+	libtool --mode=install $(INSTALLER) libatlas.la $(BLDdir)/gentoo/libs
+
+libblas.so:
+	cd gentoo/libf77blas.a ; \
+       	libtool --mode=link --tag=CC $(CC) $(F77SYSLIB) -o libblas.la \
+       		../libs/libatlas.la *.lo -rpath $(RPATH); \
+	rm -f .libs/libblas.so.0.0.0; \
+	$(CC) -shared .libs/*.o $(LDFLAGS) $(F77SYSLIB) $(BLDdir)/gentoo/libs/libatlas.so \
+       	      -Wl,-soname -Wl,libblas.so.0 -o .libs/libblas.so.0.0.0; \
+	libtool --mode=install $(INSTALLER) libblas.la $(BLDdir)/gentoo/libs
+
+libcblas.so:
+	cd gentoo/libcblas.a ; \
+       	libtool --mode=link --tag=CC $(CC) -o libcblas.la \
+		../libs/libatlas.la *.lo -rpath $(RPATH) ; \
+       	rm -f .libs/libcblas.so.0.0.0; \
+       	$(CC) -shared .libs/*.o $(LDFLAGS) $(BLDdir)/gentoo/libs/libatlas.so \
+	       -Wl,-soname -Wl,libcblas.so.0 -o .libs/libcblas.so.0.0.0; \
+       libtool --mode=install $(INSTALLER) libcblas.la $(BLDdir)/gentoo/libs
+
+libptblas.so:
+	mkdir -p gentoo/threaded-libs
+	cd gentoo/libptf77blas.a ; \
+	libtool --mode=link --tag=CC $(CC) $(F77SYSLIB) -o libblas.la \
+		../libs/libatlas.la *.lo -rpath $(RPATH); \
+	rm -f .libs/libblas.so.0.0.0; \
+	$(CC) -shared .libs/*.o  $(F77SYSLIB) $(BLDdir)/gentoo/libs/libatlas.so \
+	      -Wl,-soname -Wl,libblas.so.0 -o .libs/libblas.so.0.0.0; \
+	libtool --mode=install $(INSTALLER) libblas.la $(BLDdir)/gentoo/threaded-libs
+
+libptcblas.so:
+	cd gentoo/libptcblas.a ; \
+	libtool --mode=link --tag=CC $(CC) -o libcblas.la \
+		../libs/libatlas.la *.lo -rpath $(RPATH); \
+       	rm -f .libs/libcblas.so.0.0.0; \
+       	$(CC) -shared .libs/*.o $(BLDdir)/gentoo/libs/libatlas.so \
+	      -Wl,-soname -Wl,libcblas.so.0 -o .libs/libcblas.so.0.0.0; \
+       	libtool --mode=install $(INSTALLER) libcblas.la $(BLDdir)/gentoo/threaded-libs
+
+liblapack.so:
+	mkdir -p gentoo/libs
+	cd gentoo/liblapack.a ; \
+       	libtool --mode=link --tag=CC $(CC) $(F77SYSLIB) -o liblapack.la \
+                *.lo -rpath $(RPATH) -lblas -lcblas -latlas ; \
+	libtool --mode=install $(INSTALLER) liblapack.la $(BLDdir)/gentoo/libs
+
+
 sanity_test :
 	@ echo "BUILDING TESTERS:"
 	cd bin ; $(MAKE) sanity_test
diff -Nur ATLAS.orig/tune/blas/gemm/emit_mm.c ATLAS/tune/blas/gemm/emit_mm.c
--- ATLAS.orig/tune/blas/gemm/emit_mm.c	2011-05-14 13:34:09.000000000 -0400
+++ ATLAS/tune/blas/gemm/emit_mm.c	2012-06-25 18:27:33.000000000 -0400
@@ -2606,6 +2606,12 @@
    assert(fp);
 
    fprintf(fp, "include ../Make.inc\n\n");
+   fprintf(fp, "ICC:=$(LIBTOOL) --tag=CC $(ICC)\n\n");
+   fprintf(fp, "SMC:=$(LIBTOOL) --tag=CC $(SMC)\n\n");
+   fprintf(fp, "DMC:=$(LIBTOOL) --tag=CC $(DMC)\n\n");
+   fprintf(fp, "SKC:=$(LIBTOOL) --tag=CC $(SKC)\n\n");
+   fprintf(fp, "DKC:=$(LIBTOOL) --tag=CC $(DKC)\n\n");
+   fprintf(fp, "XCC:=$(LIBTOOL) --tag=CC $(XCC)\n\n");
    fprintf(fp, "CDEFS2 = $(CDEFS)");
    for (i=0; i < 3; i++)
       if (cp[i]) fprintf(fp, " -DATL_UCLEAN%c", cwh[i]);
@@ -2685,7 +2691,7 @@
                              wp->NBs[k], wp->imult, wp->fixed, betas[j]);
                   else sprintf(fnam, "ATL_%cNBmm_b%c", pre, betas[j]);
                      fprintf(fp, "%s.o : %s.c \n", fnam, fnam);
-                  fprintf(fp, "\t%s $(CDEFS2) -DATL_BETA=%c -c %s %s.c\n",
+		     fprintf(fp, "\t$(LIBTOOL) --tag=CC %s $(CDEFS2) -DATL_BETA=%c -c %s %s.c\n",
                           wp->CC, betas[j], wp->CCFLAGS, fnam);
                }
             }
diff -Nur ATLAS.orig/tune/blas/gemv/mvsearch.c ATLAS/tune/blas/gemv/mvsearch.c
--- ATLAS.orig/tune/blas/gemv/mvsearch.c	2011-05-14 13:34:09.000000000 -0400
+++ ATLAS/tune/blas/gemv/mvsearch.c	2012-06-25 18:27:33.000000000 -0400
@@ -512,7 +512,7 @@
    fprintf(fp, "include Make.inc\n\n");
 
    if (ccN[0] == '\0') fprintf(fp, "MVNCC = $(%cKC)\n", UPR);
-   else fprintf(fp, "MVNCC = %s\n", ccN);
+   else fprintf(fp, "MVNCC = $(LIBTOOL) --tag=CC %s\n", ccN);
    if (ccN[0] == '\0' && ccflagsN[0] != '\0')
       fprintf(fp, "MVNFLAGS = $(CDEFS) $(%cKCFLAGS) %s -D%s\n",
               UPR, ccflagsN, typ);
@@ -526,7 +526,7 @@
    }
 
    if (ccT[0] == '\0') fprintf(fp, "MVTCC = $(%cKC)\n", UPR);
-   else fprintf(fp, "MVTCC = %s\n", ccT);
+   else fprintf(fp, "MVTCC = $(LIBTOOL) --tag=CC %s\n", ccT);
    if (ccT[0] == '\0' && ccflagsT[0] != '\0')
       fprintf(fp, "MVTFLAGS = $(CDEFS) $(%cKCFLAGS) %s -D%s\n",
               UPR, ccflagsT, typ);
@@ -540,7 +540,7 @@
    }
 
    if (ccS[0] == '\0') fprintf(fp, "MVSCC = $(%cKC)\n", UPR);
-   else fprintf(fp, "MVSCC = %s\n", ccS);
+   else fprintf(fp, "MVSCC = $(LIBTOOL) --tag=CC %s\n", ccS);
    if (ccS[0] == '\0' && ccflagsS[0] != '\0')
       fprintf(fp, "MVSFLAGS = $(CDEFS) $(%cKCFLAGS) %s -D%s",
               UPR, ccflagsS, typ);
diff -Nur ATLAS.orig/tune/blas/level1/asumsrch.c ATLAS/tune/blas/level1/asumsrch.c
--- ATLAS.orig/tune/blas/level1/asumsrch.c	2011-05-14 13:34:09.000000000 -0400
+++ ATLAS/tune/blas/level1/asumsrch.c	2012-06-25 18:27:33.000000000 -0400
@@ -159,6 +159,7 @@
    FILE *fpin;
    FILENODE *fbase, *fn, *fp=NULL;
    char ln[512], rout[256], auth[256], cc[256], ccflags[256];
+   char temp[256];
    char *pcc, *pccflags;
    int i, n, ID, alpha, beta, incX, incY;
 
@@ -180,7 +181,10 @@
          assert(fgets(ccflags, 512, fpin) != NULL);
          FixFlags(cc);
          FixFlags(ccflags);
-         pcc = cc;
+        /* Gentoo         pcc = cc; */
+	 strcpy(temp, "$(LIBTOOL) --tag=CC ");
+	 strcat(temp, cc);
+	 pcc = temp;
          pccflags = ccflags;
       }
       else pcc = pccflags = NULL;
diff -Nur ATLAS.orig/tune/blas/level1/axpbysrch.c ATLAS/tune/blas/level1/axpbysrch.c
--- ATLAS.orig/tune/blas/level1/axpbysrch.c	2011-05-14 13:34:09.000000000 -0400
+++ ATLAS/tune/blas/level1/axpbysrch.c	2012-06-25 18:27:33.000000000 -0400
@@ -159,6 +159,7 @@
    FILE *fpin;
    FILENODE *fbase, *fn, *fp=NULL;
    char ln[512], rout[256], auth[256], cc[256], ccflags[256];
+   char temp[256];
    char *pcc, *pccflags;
    int i, n, ID, alpha, beta, incX, incY;
 
@@ -188,7 +189,10 @@
          assert(fgets(ccflags, 512, fpin) != NULL);
          FixFlags(cc);
          FixFlags(ccflags);
-         pcc = cc;
+         /* Gentoo         pcc = cc; */
+         strcpy(temp, "$(LIBTOOL) --tag=CC ");
+         strcat(temp, cc);
+         pcc = temp;
          pccflags = ccflags;
       }
       else pcc = pccflags = NULL;
diff -Nur ATLAS.orig/tune/blas/level1/axpysrch.c ATLAS/tune/blas/level1/axpysrch.c
--- ATLAS.orig/tune/blas/level1/axpysrch.c	2011-05-14 13:34:10.000000000 -0400
+++ ATLAS/tune/blas/level1/axpysrch.c	2012-06-25 18:27:33.000000000 -0400
@@ -159,6 +159,7 @@
    FILE *fpin;
    FILENODE *fbase, *fn, *fp=NULL;
    char ln[512], rout[256], auth[256], cc[256], ccflags[256];
+   char temp[256];
    char *pcc, *pccflags;
    int i, n, ID, alpha, beta, incX, incY;
 
@@ -186,7 +187,10 @@
          assert(fgets(ccflags, 512, fpin) != NULL);
          FixFlags(cc);
          FixFlags(ccflags);
-         pcc = cc;
+         /* Gentoo         pcc = cc; */
+         strcpy(temp, "$(LIBTOOL) --tag=CC ");
+         strcat(temp, cc);
+         pcc = temp;
          pccflags = ccflags;
       }
       else pcc = pccflags = NULL;
diff -Nur ATLAS.orig/tune/blas/level1/copysrch.c ATLAS/tune/blas/level1/copysrch.c
--- ATLAS.orig/tune/blas/level1/copysrch.c	2011-05-14 13:34:10.000000000 -0400
+++ ATLAS/tune/blas/level1/copysrch.c	2012-06-25 18:27:33.000000000 -0400
@@ -159,6 +159,7 @@
    FILE *fpin;
    FILENODE *fbase, *fn, *fp=NULL;
    char ln[512], rout[256], auth[256], cc[256], ccflags[256];
+   char temp[256];
    char *pcc, *pccflags;
    int i, n, ID, alpha, beta, incX, incY;
 
@@ -180,7 +181,10 @@
          assert(fgets(ccflags, 512, fpin) != NULL);
          FixFlags(cc);
          FixFlags(ccflags);
-         pcc = cc;
+         /* Gentoo         pcc = cc; */
+	 strcpy(temp, "$(LIBTOOL) --tag=CC ");
+	 strcat(temp, cc);
+	 pcc = temp;
          pccflags = ccflags;
       }
       else pcc = pccflags = NULL;
diff -Nur ATLAS.orig/tune/blas/level1/cpscsrch.c ATLAS/tune/blas/level1/cpscsrch.c
--- ATLAS.orig/tune/blas/level1/cpscsrch.c	2011-05-14 13:34:10.000000000 -0400
+++ ATLAS/tune/blas/level1/cpscsrch.c	2012-06-25 18:27:33.000000000 -0400
@@ -159,6 +159,7 @@
    FILE *fpin;
    FILENODE *fbase, *fn, *fp=NULL;
    char ln[512], rout[256], auth[256], cc[256], ccflags[256];
+   char temp[256];
    char *pcc, *pccflags;
    int i, n, ID, alpha, beta, incX, incY;
 
@@ -186,7 +187,10 @@
          assert(fgets(ccflags, 512, fpin) != NULL);
          FixFlags(cc);
          FixFlags(ccflags);
-         pcc = cc;
+         /* Gentoo         pcc = cc; */
+         strcpy(temp, "$(LIBTOOL) --tag=CC ");
+         strcat(temp, cc);
+         pcc = temp;
          pccflags = ccflags;
       }
       else pcc = pccflags = NULL;
diff -Nur ATLAS.orig/tune/blas/level1/dotsrch.c ATLAS/tune/blas/level1/dotsrch.c
--- ATLAS.orig/tune/blas/level1/dotsrch.c	2011-05-14 13:34:10.000000000 -0400
+++ ATLAS/tune/blas/level1/dotsrch.c	2012-06-25 18:27:33.000000000 -0400
@@ -161,6 +161,7 @@
    FILE *fpin;
    FILENODE *fbase, *fn, *fp=NULL;
    char ln[512], rout[256], auth[256], cc[256], ccflags[256];
+   char temp[256];
    char *pcc, *pccflags;
    int i, n, ID, alpha, beta, incX, incY;
 
@@ -182,7 +183,10 @@
          assert(fgets(ccflags, 512, fpin) != NULL);
          FixFlags(cc);
          FixFlags(ccflags);
-         pcc = cc;
+         /* Gentoo         pcc = cc; */
+         strcpy(temp, "$(LIBTOOL) --tag=CC ");
+         strcat(temp, cc);
+         pcc = temp;
          pccflags = ccflags;
       }
       else pcc = pccflags = NULL;
diff -Nur ATLAS.orig/tune/blas/level1/iamaxsrch.c ATLAS/tune/blas/level1/iamaxsrch.c
--- ATLAS.orig/tune/blas/level1/iamaxsrch.c	2011-05-14 13:34:10.000000000 -0400
+++ ATLAS/tune/blas/level1/iamaxsrch.c	2012-06-25 18:27:33.000000000 -0400
@@ -159,6 +159,7 @@
    FILE *fpin;
    FILENODE *fbase, *fn, *fp=NULL;
    char ln[512], rout[256], auth[256], cc[256], ccflags[256];
+   char temp[256];
    char *pcc, *pccflags;
    int i, n, ID, alpha, beta, incX, incY;
 
@@ -179,7 +180,10 @@
          assert(fgets(ccflags, 512, fpin) != NULL);
          FixFlags(cc);
          FixFlags(ccflags);
-         pcc = cc;
+         /* Gentoo         pcc = cc; */
+	 strcpy(temp, "$(LIBTOOL) --tag=CC ");
+	 strcat(temp, cc);
+	 pcc = temp;
          pccflags = ccflags;
       }
       else pcc = pccflags = NULL;
diff -Nur ATLAS.orig/tune/blas/level1/nrm2srch.c ATLAS/tune/blas/level1/nrm2srch.c
--- ATLAS.orig/tune/blas/level1/nrm2srch.c	2011-05-14 13:34:10.000000000 -0400
+++ ATLAS/tune/blas/level1/nrm2srch.c	2012-06-25 18:27:33.000000000 -0400
@@ -159,6 +159,7 @@
    FILE *fpin;
    FILENODE *fbase, *fn, *fp=NULL;
    char ln[512], rout[256], auth[256], cc[256], ccflags[256];
+   char temp[256];
    char *pcc, *pccflags;
    int i, n, ID, alpha, beta, incX, incY;
 
@@ -180,7 +181,10 @@
          assert(fgets(ccflags, 512, fpin) != NULL);
          FixFlags(cc);
          FixFlags(ccflags);
-         pcc = cc;
+         /* Gentoo         pcc = cc; */
+         strcpy(temp, "$(LIBTOOL) --tag=CC ");
+         strcat(temp, cc);
+         pcc = temp;
          pccflags = ccflags;
       }
       else pcc = pccflags = NULL;
diff -Nur ATLAS.orig/tune/blas/level1/rotsrch.c ATLAS/tune/blas/level1/rotsrch.c
--- ATLAS.orig/tune/blas/level1/rotsrch.c	2011-05-14 13:34:10.000000000 -0400
+++ ATLAS/tune/blas/level1/rotsrch.c	2012-06-25 18:27:33.000000000 -0400
@@ -159,6 +159,7 @@
    FILE *fpin;
    FILENODE *fbase, *fn, *fp=NULL;
    char ln[512], rout[256], auth[256], cc[256], ccflags[256];
+   char temp[256];
    char *pcc, *pccflags;
    int i, n, ID, alpha, beta, incX, incY;
 
@@ -189,7 +190,10 @@
          assert(fgets(ccflags, 512, fpin) != NULL);
          FixFlags(cc);
          FixFlags(ccflags);
-         pcc = cc;
+         /* Gentoo         pcc = cc; */
+         strcpy(temp, "$(LIBTOOL) --tag=CC ");
+         strcat(temp, cc);
+         pcc = temp;
          pccflags = ccflags;
       }
       else pcc = pccflags = NULL;
diff -Nur ATLAS.orig/tune/blas/level1/scalsrch.c ATLAS/tune/blas/level1/scalsrch.c
--- ATLAS.orig/tune/blas/level1/scalsrch.c	2011-05-14 13:34:10.000000000 -0400
+++ ATLAS/tune/blas/level1/scalsrch.c	2012-06-25 18:27:33.000000000 -0400
@@ -159,6 +159,7 @@
    FILE *fpin;
    FILENODE *fbase, *fn, *fp=NULL;
    char ln[512], rout[256], auth[256], cc[256], ccflags[256];
+   char temp[256];
    char *pcc, *pccflags;
    int i, n, ID, alpha, beta, incX, incY;
 
@@ -187,7 +188,10 @@
          assert(fgets(ccflags, 512, fpin) != NULL);
          FixFlags(cc);
          FixFlags(ccflags);
-         pcc = cc;
+         /* Gentoo         pcc = cc; */
+         strcpy(temp, "$(LIBTOOL) --tag=CC ");
+         strcat(temp, cc);
+         pcc = temp;
          pccflags = ccflags;
       }
       else pcc = pccflags = NULL;
diff -Nur ATLAS.orig/tune/blas/level1/setsrch.c ATLAS/tune/blas/level1/setsrch.c
--- ATLAS.orig/tune/blas/level1/setsrch.c	2011-05-14 13:34:10.000000000 -0400
+++ ATLAS/tune/blas/level1/setsrch.c	2012-06-25 18:27:33.000000000 -0400
@@ -159,6 +159,7 @@
    FILE *fpin;
    FILENODE *fbase, *fn, *fp=NULL;
    char ln[512], rout[256], auth[256], cc[256], ccflags[256];
+   char temp[256];
    char *pcc, *pccflags;
    int i, n, ID, alpha, beta, incX, incY;
 
@@ -181,7 +182,10 @@
          assert(fgets(ccflags, 512, fpin) != NULL);
          FixFlags(cc);
          FixFlags(ccflags);
-         pcc = cc;
+         /* Gentoo         pcc = cc; */
+	 strcpy(temp, "$(LIBTOOL) --tag=CC ");
+	 strcat(temp, cc);
+	 pcc = temp;
          pccflags = ccflags;
       }
       else pcc = pccflags = NULL;
diff -Nur ATLAS.orig/tune/blas/level1/swapsrch.c ATLAS/tune/blas/level1/swapsrch.c
--- ATLAS.orig/tune/blas/level1/swapsrch.c	2011-05-14 13:34:10.000000000 -0400
+++ ATLAS/tune/blas/level1/swapsrch.c	2012-06-25 18:27:33.000000000 -0400
@@ -159,6 +159,7 @@
    FILE *fpin;
    FILENODE *fbase, *fn, *fp=NULL;
    char ln[512], rout[256], auth[256], cc[256], ccflags[256];
+   char temp[256];
    char *pcc, *pccflags;
    int i, n, ID, alpha, beta, incX, incY;
 
@@ -180,7 +181,10 @@
          assert(fgets(ccflags, 512, fpin) != NULL);
          FixFlags(cc);
          FixFlags(ccflags);
-         pcc = cc;
+         /* Gentoo         pcc = cc; */
+         strcpy(temp, "$(LIBTOOL) --tag=CC ");
+         strcat(temp, cc);
+         pcc = temp;
          pccflags = ccflags;
       }
       else pcc = pccflags = NULL;
